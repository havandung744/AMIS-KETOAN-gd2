{"ast":null,"code":"import axios from \"axios\";\nimport { miSaResource } from \"../../js/miSaResource\"; // import {vi} from 'date-fns/locale';\n// import Datepicker from \"../common/DatepickerList.vue\";\n\nexport default {\n  name: \"EmployeeDetail\",\n  components: {//  Datepicker\n  },\n  props: [\"employeeIdSelected\", \"formMode\", \"pageSize\", \"pageNumberSelected\", \"textSearch\", \"bankName\", \"gender\", \"departmentId\", \"checkReplication\"],\n\n  data() {\n    return {\n      // dateTime: new Date(2016, 0, 1),\n      // dateTime: new Date(employee.date),\n      employee: {},\n      employees: {}\n    };\n  },\n\n  watch: {\n    /**\r\n     * kiểm tra sự thay đổi của employeeIdSelected\r\n     * khi có sự thay đổi thì sẽ lấy thông tin của nhân viên và đưa lên form detail\r\n     * đồng thời kiểm tra xem có phải là chế độ nhân bản hay không (nếu là chế độ nhân bản thì sẽ lấy lại toàn bộ thông tin đồng thòi\r\n     * lấy mã nhân viên mới)\r\n     * @param {object} value là id của đối tượng nhân được khi click\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\n    employeeIdSelected: async function (value) {\n      await this.getEmployeeInfo(value);\n\n      if (this.checkReplication) {\n        await this.getNewEmployeeCode();\n      }\n    }\n  },\n  methods: {\n    /**\r\n    * Thực hiện lấy dữ liệu từ cliend và trả về cho form chi tiết\r\n    * @param {object} value là employeeId nhân được khi click\r\n    * Author: HVDUNG(05/06/2022)\r\n    */\n    async getEmployeeInfo(value) {\n      // kiểm tra xem id có tồn tại hay không\n      var me = this; // id tồn tại -> show thông tin tương ứng với id này\n\n      if (value) {\n        await axios.get(`http://localhost:22454/api/v1/Employees/${me.employeeIdSelected}`).then(function (res) {\n          switch (res.status) {\n            case 200:\n              // thực hiện focus vào ô nhập liệu đầu tiên\n              document.getElementById(\"EmployeeCode\").focus(); // gán lại data cho employee detail\n\n              me.employee = res.data;\n              break;\n\n            case 201:\n              break;\n\n            default:\n              break;\n          }\n        }).catch(function (res) {\n          console.log(res);\n        });\n      } // không có id -> thực hiện thêm mới\n      else {\n        //gán lại employee là rỗng khi thêm mới\n        me.employee = {}; // lấy mã nhân viên mới\n\n        await me.getNewEmployeeCode();\n      }\n    },\n\n    /**\r\n     * Thực hiện lưu khi người dùng click nút lưu\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\n    btnSaveOnClick() {\n      var me = this; //1. validate dữ liệu\n\n      var isValid = me.validate(); //2. thực hiện thêm mới hoặc cập nhật khi validate thành công\n\n      if (isValid) {\n        //2.1 nếu formMode là 1 thì thêm mới\n        if (me.formMode == 1) me.addEmployee(); //2.2 nếu formMode != 1 thì cập nhật\n        else me.updateEmployee(); //3. thực hiện đóng form chi tiết\n\n        me.$emit(\"isShowDialog\");\n      }\n    },\n\n    /**\r\n    * Thực hiện lưu khi người dùng click nút lưu đồng thời reset value cho form detail\r\n    * Author: HVDUNG (02/06/2022)\r\n    */\n    async btnSaveAndAdd() {\n      var me = this; //1. thực hiện việc validate\n\n      var isValid = me.validate(); //2. thực hiện thêm mới hoặc cập nhật khi validate thành công\n\n      if (isValid) {\n        //2.1 nếu formMode là 1 thì thêm mới\n        if (me.formMode == 1) {\n          await me.addEmployee();\n          me.employee = {};\n          await me.getNewEmployeeCode();\n        } //2.2 nếu formMode != 1 thì cập nhật\n        else {\n          await me.updateEmployee();\n          await me.$emit(\"changeValueFormMode\", 1);\n          me.employee = {};\n          await me.getNewEmployeeCode();\n        }\n      }\n    },\n\n    /**\r\n    * Thực hiện đóng form chi tiết khi click\r\n    * Author: HVDUNG(05/06/2022)\r\n    */\n    btnCloseOnClick() {\n      //Thực hiện đống form chi tiết\n      this.$emit(\"isShowDialog\");\n    },\n\n    /**\r\n    * thực hiện focus vào ô nhập liệu đầu tiên khi nó đến input cuối cùng\r\n    * Author: HVDUNG (03/06/2022)\r\n    */\n    focusInputFirst() {\n      document.getElementById(\"EmployeeCode\").focus();\n    },\n\n    /**\r\n     * thực hiện validate xem dữ liệu có bị trống hay không\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\n    validateCheckInput(event) {\n      //theo cách dùng thuần\n      //1. lấy ra giá trị input nhập vào\n      let value = event.currentTarget.value; //  2. kiểm tra value có rỗng hay không\n\n      if (!value) {\n        // thêm class vào trong input\n        event.currentTarget.classList.add(\"d-input-error\"); // thêm câu cảnh báo khi hover\n\n        event.currentTarget.setAttribute(\"title\", miSaResource.VI.infoNotNull);\n      } else {\n        event.currentTarget.classList.remove(\"d-input-error\");\n        event.currentTarget.setAttribute(\"title\", \"\");\n      }\n    },\n\n    /**\r\n     * Thực hiện kiểm tra xem email đã đúng định dạng hay chưa\r\n     * @param {event} event đối tượng được xây dựng sẵn trong Vue \r\n     * Author: HVDUNG (11/06/2022)\r\n     */\n    validateCheckEmail(event) {\n      //theo cách dùng thuần\n      //1. lấy ra giá trị input nhập vào\n      let value = event.currentTarget.value; //  2. kiểm tra value có đụng định dạng hay không\n\n      if (value.trim() != \"\" && !this.checkEmail(value)) {\n        // thêm class vào trong input\n        event.currentTarget.classList.add(\"d-input-error\"); // thêm câu cảnh báo khi hover\n\n        event.currentTarget.setAttribute(\"title\", miSaResource.VI.InvalidEmailFormat);\n      } else {\n        event.currentTarget.classList.remove(\"d-input-error\");\n        event.currentTarget.setAttribute(\"title\", \"\");\n      }\n    },\n\n    /**\r\n     * Thực hiện kiểm tra email có đúng định dạng hay không\r\n     * @param {string} email email cuả nhân viên \r\n     * Author: HVDUNG (11./06/2022)\r\n     */\n    checkEmail(email) {\n      var res = /\\S+@\\S+\\.\\S+/;\n      return res.test(email);\n    },\n\n    /**\r\n     * Thực hiện lấy mã nhân viên mới\r\n     * Author: HVDUNG (24/06/2022)\r\n     */\n    async getNewEmployeeCode() {\n      try {\n        var me = this; // nếu không có id thì gán lại employee là null\n        // me.employee = {};\n        // gọi API lấy mã nhân viên\n\n        await axios.get(\"http://localhost:22454/api/v1/Employees/NewEmployeeCode\").then(function (res) {\n          me.employee.EmployeeCode = res.data; // thực hiện focus vào ô nhập liệu đầu tiên\n\n          document.getElementById(\"EmployeeCode\").focus();\n        }).catch(function (res) {\n          console.log(res);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    /**\r\n     * Thực hiện validate dữ liệu\r\n     * true: validate thành công\r\n     * false: validate có lỗi\r\n     * Author: HVDUNG (05/06/2022)\r\n     */\n    validate() {\n      var me = this; //1. validate dữ liệu\n\n      var isValid = true;\n      var arrayErrors = [];\n\n      if (!me.employee.EmployeeCode) {\n        isValid = false;\n        arrayErrors.push(miSaResource.VI[\"EmployeeCodeNotNull\"]);\n      }\n\n      if (!me.employee.EmployeeName) {\n        isValid = false;\n        arrayErrors.push(miSaResource.VI.EmployeeNameNotNull);\n      }\n\n      if (!me.employee.DepartmentId) {\n        isValid = false;\n        arrayErrors.push(miSaResource.VI.DepartmentNameNotNull);\n      } // convert về dạng ngày tháng thì mới có thể so sánh được\n\n\n      var dateCurrent = document.getElementById(\"date_timepicker_end\").value;\n      dateCurrent = dateCurrent.split(\"/\").reverse().join(\"-\");\n      dateCurrent = new Date(dateCurrent);\n\n      if (dateCurrent > new Date()) {\n        isValid = false;\n        arrayErrors.push(miSaResource.VI.CheckDateOfBirth);\n      } // convert về dạng ngày tháng thì mới có thể so sánh được\n\n\n      var dateCurrentIdentityDate = document.getElementById(\"date_time_IdentityDate\").value;\n      dateCurrentIdentityDate = dateCurrentIdentityDate.split(\"/\").reverse().join(\"-\");\n      dateCurrentIdentityDate = new Date(dateCurrentIdentityDate);\n\n      if (dateCurrentIdentityDate > new Date()) {\n        isValid = false;\n        arrayErrors.push(miSaResource.VI.CheckIdentityDate);\n      }\n\n      if (me.employee.Email && !me.checkEmail(me.employee.Email)) {\n        isValid = false;\n        arrayErrors.push(miSaResource.VI.CheckEmail);\n      }\n\n      if (!isValid) {\n        //hiển thị thông báo validate không hợp lệ\n        let noticeDialog = document.getElementsByClassName(\"d-dialog-box\")[0];\n        let bodyTextNoticeDialog = noticeDialog.querySelector(\".d-dialog-body\");\n        bodyTextNoticeDialog.innerHTML = \"\"; //append nội dung thông báo\n\n        arrayErrors.forEach(errorMsg => {\n          var el = document.createElement(\"div\");\n          el.innerHTML = `${errorMsg}`;\n          bodyTextNoticeDialog.append(el);\n        });\n        document.getElementsByClassName(\"d-dialog-box\")[0].style.display = \"block\"; // return;\n      }\n\n      return isValid;\n    },\n\n    /**\r\n     * Thực hiện cập nhật lại dữ liệu sau khi thực hiện thay đổi danh sách nhân viên\r\n     * Author: HVDUNG (20/07/2022)\r\n     */\n    async resetEmployee() {\n      var me = this; // thực hiện cập nhật lại dữ liệu lên giao diện\n\n      try {\n        await axios.get(`http://localhost:22454/api/v1/Employees/filter?pageSize=${me.pageSize}&pageNumber=${me.pageNumberSelected}&employeeFilter=${me.textSearch}\n          &bankName=${me.bankName}&gender=${me.gender}&departmentId=${me.departmentId}`).then(response => {\n          me.employees = response.data.Data;\n          me.$emit(\"changeValueEmployees\", me.employees);\n          me.$emit(\"changeCount\", response.data.TotalRecords);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    /**\r\n     * Thực hiện thêm mới nhân viên\r\n     * Author: HVDUNG (05/06/2022)\r\n     */\n    async addEmployee() {\n      var me = this;\n      document.getElementsByClassName(\"loading\")[0].style.display = \"block\"; // gán một positionId mặc định cho employee\n      // me.employee.PositionId = \"25c6c36e-1668-7d10-6e09-bf1378b8dc91\";\n\n      await axios.post(\"http://localhost:22454/api/v1/Employees\", me.employee).then(function (res) {\n        console.log(res); // dùng tạm thời => phải dùng toast msg\n      }).catch(function (res) {\n        let error = res.response.status;\n\n        switch (error) {\n          case 400:\n          case 500:\n            // hiển thị thông báo lỗi khi thêm mới\n            alert(res.response.data.Data.EmployeeCode); // alert(res.response.data.Data);\n            // console.log(res.response);\n\n            break;\n\n          default:\n            break;\n        }\n      }); // Thực hiện cập nhật lại danh sách nhân viên sau khi thêm mới\n\n      await me.resetEmployee(); //ẩn loading\n\n      document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\n    },\n\n    /**\r\n     * Thực hiện cập nhật thông tin nhân viên\r\n     * thông tin nhân viên được cập nhật\r\n     * Author: HVDUNG (05/06/2022)\r\n     */\n    async updateEmployee() {\n      var me = this; //hiển thị loading\n\n      document.getElementsByClassName(\"loading\")[0].style.display = \"block\"; // thực hiện update nhân viên\n\n      await axios.put(`http://localhost:22454/api/v1/Employees/${me.employeeIdSelected}`, me.employee).then(function (res) {\n        console.log(res);\n      }).catch(function (res) {\n        alert(res.response.data.Data.EmployeeCode);\n      }); // thực hiện cập nhật lại dữ liệu lên giao diện\n\n      await me.resetEmployee(); //ẩn loading\n\n      document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","miSaResource","name","components","props","data","employee","employees","watch","employeeIdSelected","value","getEmployeeInfo","checkReplication","getNewEmployeeCode","methods","me","get","then","res","status","document","getElementById","focus","catch","console","log","btnSaveOnClick","isValid","validate","formMode","addEmployee","updateEmployee","$emit","btnSaveAndAdd","btnCloseOnClick","focusInputFirst","validateCheckInput","event","currentTarget","classList","add","setAttribute","VI","infoNotNull","remove","validateCheckEmail","trim","checkEmail","InvalidEmailFormat","email","test","EmployeeCode","error","arrayErrors","push","EmployeeName","EmployeeNameNotNull","DepartmentId","DepartmentNameNotNull","dateCurrent","split","reverse","join","Date","CheckDateOfBirth","dateCurrentIdentityDate","CheckIdentityDate","Email","CheckEmail","noticeDialog","getElementsByClassName","bodyTextNoticeDialog","querySelector","innerHTML","forEach","errorMsg","el","createElement","append","style","display","resetEmployee","pageSize","pageNumberSelected","textSearch","bankName","gender","departmentId","response","Data","TotalRecords","post","alert","put"],"sourceRoot":"","sources":["C:\\Misa\\git\\AMIS-KETOAN-gd2\\amis-ketoan\\src\\components\\page\\EmployeeDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-employee-box\">\r\n    <div class=\"d-employee-box-info\">\r\n      <div class=\"header\">\r\n        <div class=\"header-text\">THÔNG TIN NHÂN VIÊN</div>\r\n        <div class=\"header-content\">\r\n          <div class=\"header-checkbox\">\r\n            <input type=\"checkbox\" style=\"width: 18px; height: 18px\" />\r\n            <div class=\"header-checkbox-content\">Là khách hàng</div>\r\n          </div>\r\n          <div class=\"header-checkbox\">\r\n            <input type=\"checkbox\" style=\"width: 18px; height: 18px\" />\r\n            <div class=\"header-checkbox-content\">Là nhà cung cấp</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"icon_close header-close\" @click=\"btnCloseOnClick\"></div>\r\n      </div>\r\n      <div class=\"content\">\r\n        <div class=\"content-info\">\r\n          <div class=\"content-info-left\">\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Mã nhân viên&nbsp;<span style=\"color: red\">*</span></label><br />\r\n                <input type=\"text\" v-model=\"employee.EmployeeCode\" class=\"d-input\" id=\"EmployeeCode\"\r\n                  @blur=\"validateCheckInput\" tabindex=\"1\" style=\"width: 150px\" />\r\n              </div>\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Họ tên&nbsp;<span style=\"color: red\">*</span></label><br />\r\n                <input type=\"text\" v-model=\"employee.EmployeeName\" class=\"d-input\" id=\"EmployeeName\"\r\n                  @blur=\"validateCheckInput\" tabindex=\"2\" style=\"width: 235px\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Đơn vị</label><br />\r\n\r\n                <select tabindex=\"7\" v-model=\"employee.DepartmentId\" class=\"cbxDepartment\">\r\n                  <option value=\"142cb08f-7c31-21fa-8e90-67245e8b283e\">\r\n                    Phòng đào tạo\r\n                  </option>\r\n                  <option value=\"17120d02-6ab5-3e43-18cb-66948daf6128\">\r\n                    Phòng nhân sự\r\n                  </option>\r\n                  <option value=\"469b3ece-744a-45d5-957d-e8c757976496\">\r\n                    Phòng sản xuất\r\n                  </option>\r\n                  <option value=\"4e272fc4-7875-78d6-7d32-6a1673ffca7c\">\r\n                    Phòng kế toán\r\n                  </option>\r\n                </select>\r\n                <!-- \r\n                <el-select v-model=\"employee.DepartmentId\" filterable placeholder=\"Select\">\r\n    <el-option\r\n      v-for=\"item in options\"\r\n      :key=\"item.value\"\r\n      :label=\"item.label\"\r\n      :value=\"item.value\"\r\n    />\r\n  </el-select> -->\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Chức danh</label><br />\r\n                <input type=\"input\" class=\"d-input\" v-model=\"employee.EmployeePosition\" tabindex=\"10\"\r\n                  style=\"width: 391px\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"content-info-right\">\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Ngày sinh</label><br />\r\n                <!-- <input type=\"date\" id=\"date_timepicker_end\" v-model=\"employee.DateOfBirth\" class=\"d-input\" tabindex=\"3\"\r\n                  style=\"width: 161px\" /> -->\r\n                <el-date-picker id=\"date_timepicker_end\" tabindex=\"3\" v-model=\"employee.DateOfBirth\" type=\"date\"\r\n                  placeholder=\"DD/MM/YYYY\" format=\"DD/MM/YYYY\" value-format=\"YYYY-MM-DD\"\r\n                  style=\"width: 161px; height: 32px; padding-right: 12px; margin-top: 4px; font-family: GoogleSans; font-size: 13px; \" />\r\n\r\n              </div>\r\n              <div class=\"info-input\" id=\"d-radio\">\r\n                <label for=\"\" style=\"margin-left: 4px\">Giới tính</label><br />\r\n                <div class=\"info-input-box\">\r\n                  <div class=\"info-input-item\">\r\n                    <input name=\"gender\" type=\"radio\" value=\"1\" tabindex=\"4\" v-model=\"employee.Gender\" />\r\n                    <label for=\"\" style=\"margin-right: 8px\">Nam</label>\r\n                  </div>\r\n                  <div class=\"info-input-item\">\r\n                    <input name=\"gender\" type=\"radio\" value=\"0\" tabindex=\"5\" v-model=\"employee.Gender\" />\r\n                    <label for=\"\" style=\"margin-right: 8px\">Nữ</label>\r\n                  </div>\r\n                  <div class=\"info-input-item\">\r\n                    <input name=\"gender\" type=\"radio\" value=\"2\" tabindex=\"6\" v-model=\"employee.Gender\" />\r\n                    <label for=\"\">Khác</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Số CMND</label><br />\r\n                <input type=\"input\" v-model=\"employee.IdentityNumber\" class=\"d-input\" tabindex=\"8\"\r\n                  style=\"width: 245px\" />\r\n              </div>\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Ngày cấp</label><br />\r\n                <!-- <input type=\"date\" id=\"date_time_IdentityDate\" v-model=\"employee.IdentityDate\" class=\"d-input\"\r\n                  tabindex=\"9\" style=\"width: 140px\" /> -->\r\n                <el-date-picker id=\"date_time_IdentityDate\" tabindex=\"9\" v-model=\"employee.IdentityDate\" type=\"date\"\r\n                  placeholder=\"DD/MM/YYYY\" format=\"DD/MM/YYYY\" value-format=\"YYYY-MM-DD\" style=\"width: 152px; height: 32px; padding-right: 12px; margin-top: 4px;\r\n                   font-family: GoogleSans; font-size: 13px;\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Nơi cấp</label><br />\r\n                <input type=\"input\" v-model=\"employee.IdentityPlace\" class=\"d-input\" tabindex=\"11\"\r\n                  style=\"width: 391px\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"info-input-tr\" style=\"margin-top: 40px\">\r\n          <div class=\"info-input\">\r\n            <label for=\"\">Địa chỉ</label>\r\n            <input type=\"input\" class=\"d-input\" v-model=\"employee.Address\" tabindex=\"12\" style=\"width: 812px\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"content-info-bottom\">\r\n          <div class=\"info-input-tr\">\r\n            <div class=\"info-input\">\r\n              <label for=\"\">ĐT di động</label><br />\r\n              <input type=\"text\" v-model=\"employee.PhoneNumber\" class=\"d-input\" id=\"EmployeeCode\" tabindex=\"13\"\r\n                style=\"width: 150px\" />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">ĐT cố định</label><br />\r\n              <input type=\"text\" class=\"d-input\" id=\"EmployeeName\" v-model=\"employee.TelephoneNumber\" tabindex=\"14\"\r\n                style=\"width: 235px\" />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Email</label><br />\r\n              <input type=\"text\" v-model=\"employee.Email\" class=\"d-input\" id=\"EmployeeName\" tabindex=\"15\"\r\n                @blur=\"validateCheckEmail\" style=\"width: 235px\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"info-input-tr\">\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Tài khoản ngân hàng</label><br />\r\n              <input type=\"text\" class=\"d-input\" id=\"EmployeeCode\" v-model=\"employee.BankAccountNumber\" tabindex=\"16\"\r\n                style=\"width: 150px\" />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Tên ngân hàng</label><br />\r\n              <input type=\"text\" class=\"d-input\" id=\"EmployeeName\" v-model=\"employee.BankName\" tabindex=\"17\"\r\n                style=\"width: 235px\" />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Chi nhánh</label><br />\r\n              <input type=\"text\" class=\"d-input\" id=\"EmployeeName\" v-model=\"employee.BankBranchName\" tabindex=\"18\"\r\n                style=\"width: 235px\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"footer\">\r\n          <div class=\"footer-line\"></div>\r\n          <div class=\"footer-button\">\r\n            <button class=\"d-btn d-btn-cancel d-btn-footer-left\" id=\"d-btn-close\" tabindex=\"21\" @blur=\"focusInputFirst\"\r\n              @click=\"btnCloseOnClick\">\r\n              Hủy\r\n            </button>\r\n            <button class=\"d-btn d-btn-save\" id=\"d-btn-save\" tabindex=\"20\" @click=\"btnSaveOnClick\">\r\n              Cất\r\n            </button>\r\n            <button class=\"d-btn d-btn-save-add\" id=\"d-btn-save-add\" tabindex=\"19\" @click=\"btnSaveAndAdd\">\r\n              Cất và Thêm\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { miSaResource } from \"../../js/miSaResource\";\r\n// import {vi} from 'date-fns/locale';\r\n\r\n// import Datepicker from \"../common/DatepickerList.vue\";\r\nexport default {\r\n  name: \"EmployeeDetail\",\r\n  components: {\r\n    //  Datepicker\r\n  },\r\n  props: [\"employeeIdSelected\", \"formMode\", \"pageSize\", \"pageNumberSelected\", \"textSearch\",\"bankName\", \"gender\", \"departmentId\", \"checkReplication\"],\r\n  data() {\r\n    return {\r\n      // dateTime: new Date(2016, 0, 1),\r\n      // dateTime: new Date(employee.date),\r\n      employee: {},\r\n      employees: {},\r\n    };\r\n  },\r\n  watch: {\r\n    /**\r\n     * kiểm tra sự thay đổi của employeeIdSelected\r\n     * khi có sự thay đổi thì sẽ lấy thông tin của nhân viên và đưa lên form detail\r\n     * đồng thời kiểm tra xem có phải là chế độ nhân bản hay không (nếu là chế độ nhân bản thì sẽ lấy lại toàn bộ thông tin đồng thòi\r\n     * lấy mã nhân viên mới)\r\n     * @param {object} value là id của đối tượng nhân được khi click\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\r\n    employeeIdSelected: async function (value) {\r\n      await this.getEmployeeInfo(value);\r\n      if (this.checkReplication) {\r\n        await this.getNewEmployeeCode();\r\n      }\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    /**\r\n    * Thực hiện lấy dữ liệu từ cliend và trả về cho form chi tiết\r\n    * @param {object} value là employeeId nhân được khi click\r\n    * Author: HVDUNG(05/06/2022)\r\n    */\r\n    async getEmployeeInfo(value) {\r\n      // kiểm tra xem id có tồn tại hay không\r\n      var me = this;\r\n      // id tồn tại -> show thông tin tương ứng với id này\r\n      if (value) {\r\n        await axios\r\n          .get(\r\n            `http://localhost:22454/api/v1/Employees/${me.employeeIdSelected}`)\r\n          .then(function (res) {\r\n            switch (res.status) {\r\n              case 200:\r\n                // thực hiện focus vào ô nhập liệu đầu tiên\r\n                document.getElementById(\"EmployeeCode\").focus();\r\n                // gán lại data cho employee detail\r\n                me.employee = res.data;\r\n                break;\r\n              case 201:\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          })\r\n          .catch(function (res) {\r\n            console.log(res);\r\n          });\r\n      }\r\n      // không có id -> thực hiện thêm mới\r\n      else {\r\n        //gán lại employee là rỗng khi thêm mới\r\n        me.employee = {};\r\n        // lấy mã nhân viên mới\r\n        await me.getNewEmployeeCode();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện lưu khi người dùng click nút lưu\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\r\n    btnSaveOnClick() {\r\n      var me = this;\r\n      //1. validate dữ liệu\r\n      var isValid = me.validate();\r\n      //2. thực hiện thêm mới hoặc cập nhật khi validate thành công\r\n      if (isValid) {\r\n        //2.1 nếu formMode là 1 thì thêm mới\r\n        if (me.formMode == 1) me.addEmployee();\r\n        //2.2 nếu formMode != 1 thì cập nhật\r\n        else me.updateEmployee();\r\n        //3. thực hiện đóng form chi tiết\r\n        me.$emit(\"isShowDialog\");\r\n      }\r\n    },\r\n\r\n    /**\r\n    * Thực hiện lưu khi người dùng click nút lưu đồng thời reset value cho form detail\r\n    * Author: HVDUNG (02/06/2022)\r\n    */\r\n    async btnSaveAndAdd() {\r\n      var me = this;\r\n      //1. thực hiện việc validate\r\n      var isValid = me.validate();\r\n      //2. thực hiện thêm mới hoặc cập nhật khi validate thành công\r\n      if (isValid) {\r\n        //2.1 nếu formMode là 1 thì thêm mới\r\n        if (me.formMode == 1) {\r\n          await me.addEmployee();\r\n          me.employee = {};\r\n          await me.getNewEmployeeCode();\r\n        }\r\n        //2.2 nếu formMode != 1 thì cập nhật\r\n        else {\r\n          await me.updateEmployee();\r\n          await me.$emit(\"changeValueFormMode\", 1);\r\n          me.employee = {};\r\n          await me.getNewEmployeeCode();\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n   * Thực hiện đóng form chi tiết khi click\r\n   * Author: HVDUNG(05/06/2022)\r\n   */\r\n    btnCloseOnClick() {\r\n      //Thực hiện đống form chi tiết\r\n      this.$emit(\"isShowDialog\");\r\n    },\r\n\r\n    /**\r\n    * thực hiện focus vào ô nhập liệu đầu tiên khi nó đến input cuối cùng\r\n    * Author: HVDUNG (03/06/2022)\r\n    */\r\n    focusInputFirst() {\r\n      document.getElementById(\"EmployeeCode\").focus();\r\n    },\r\n\r\n    /**\r\n     * thực hiện validate xem dữ liệu có bị trống hay không\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\r\n    validateCheckInput(event) {\r\n      //theo cách dùng thuần\r\n      //1. lấy ra giá trị input nhập vào\r\n      let value = event.currentTarget.value;\r\n      //  2. kiểm tra value có rỗng hay không\r\n      if (!value) {\r\n        // thêm class vào trong input\r\n        event.currentTarget.classList.add(\"d-input-error\");\r\n        // thêm câu cảnh báo khi hover\r\n        event.currentTarget.setAttribute(\r\n          \"title\",\r\n          miSaResource.VI.infoNotNull\r\n        );\r\n      } else {\r\n        event.currentTarget.classList.remove(\"d-input-error\");\r\n        event.currentTarget.setAttribute(\"title\", \"\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện kiểm tra xem email đã đúng định dạng hay chưa\r\n     * @param {event} event đối tượng được xây dựng sẵn trong Vue \r\n     * Author: HVDUNG (11/06/2022)\r\n     */\r\n    validateCheckEmail(event) {\r\n      //theo cách dùng thuần\r\n      //1. lấy ra giá trị input nhập vào\r\n      let value = event.currentTarget.value;\r\n      //  2. kiểm tra value có đụng định dạng hay không\r\n      if (value.trim() != \"\" && !this.checkEmail(value)) {\r\n        // thêm class vào trong input\r\n        event.currentTarget.classList.add(\"d-input-error\");\r\n        // thêm câu cảnh báo khi hover\r\n        event.currentTarget.setAttribute(\r\n          \"title\",\r\n          miSaResource.VI.InvalidEmailFormat\r\n        );\r\n      } else {\r\n        event.currentTarget.classList.remove(\"d-input-error\");\r\n        event.currentTarget.setAttribute(\"title\", \"\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện kiểm tra email có đúng định dạng hay không\r\n     * @param {string} email email cuả nhân viên \r\n     * Author: HVDUNG (11./06/2022)\r\n     */\r\n    checkEmail(email) {\r\n      var res = /\\S+@\\S+\\.\\S+/;\r\n      return res.test(email);\r\n    },\r\n\r\n    /**\r\n     * Thực hiện lấy mã nhân viên mới\r\n     * Author: HVDUNG (24/06/2022)\r\n     */\r\n    async getNewEmployeeCode() {\r\n      try {\r\n        var me = this;\r\n        // nếu không có id thì gán lại employee là null\r\n        // me.employee = {};\r\n        // gọi API lấy mã nhân viên\r\n        await axios\r\n          .get(\"http://localhost:22454/api/v1/Employees/NewEmployeeCode\")\r\n          .then(function (res) {\r\n            me.employee.EmployeeCode = res.data;\r\n            // thực hiện focus vào ô nhập liệu đầu tiên\r\n            document.getElementById(\"EmployeeCode\").focus();\r\n          })\r\n          .catch(function (res) {\r\n            console.log(res);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện validate dữ liệu\r\n     * true: validate thành công\r\n     * false: validate có lỗi\r\n     * Author: HVDUNG (05/06/2022)\r\n     */\r\n    validate() {\r\n      var me = this;\r\n      //1. validate dữ liệu\r\n      var isValid = true;\r\n      var arrayErrors = [];\r\n      if (!me.employee.EmployeeCode) {\r\n        isValid = false;\r\n        arrayErrors.push(miSaResource.VI[\"EmployeeCodeNotNull\"]);\r\n      }\r\n\r\n      if (!me.employee.EmployeeName) {\r\n        isValid = false;\r\n        arrayErrors.push(miSaResource.VI.EmployeeNameNotNull);\r\n      }\r\n      if (!me.employee.DepartmentId) {\r\n        isValid = false;\r\n        arrayErrors.push(miSaResource.VI.DepartmentNameNotNull);\r\n      }\r\n      // convert về dạng ngày tháng thì mới có thể so sánh được\r\n      var dateCurrent = document.getElementById(\"date_timepicker_end\").value;\r\n      dateCurrent = dateCurrent.split(\"/\").reverse().join(\"-\");\r\n      dateCurrent = new Date(dateCurrent);\r\n      if (dateCurrent > new Date()) {\r\n        isValid = false;\r\n        arrayErrors.push(miSaResource.VI.CheckDateOfBirth);\r\n      }\r\n      // convert về dạng ngày tháng thì mới có thể so sánh được\r\n      var dateCurrentIdentityDate = document.getElementById(\"date_time_IdentityDate\").value;\r\n      dateCurrentIdentityDate = dateCurrentIdentityDate.split(\"/\").reverse().join(\"-\");\r\n      dateCurrentIdentityDate = new Date(dateCurrentIdentityDate);\r\n      if (dateCurrentIdentityDate > new Date()) {\r\n        isValid = false;\r\n        arrayErrors.push(miSaResource.VI.CheckIdentityDate);\r\n      }\r\n\r\n      if (me.employee.Email && !me.checkEmail(me.employee.Email)) {\r\n        isValid = false;\r\n        arrayErrors.push(miSaResource.VI.CheckEmail);\r\n      }\r\n      if (!isValid) {\r\n        //hiển thị thông báo validate không hợp lệ\r\n        let noticeDialog = document.getElementsByClassName(\"d-dialog-box\")[0];\r\n        let bodyTextNoticeDialog = noticeDialog.querySelector(\".d-dialog-body\");\r\n        bodyTextNoticeDialog.innerHTML = \"\";\r\n        //append nội dung thông báo\r\n        arrayErrors.forEach((errorMsg) => {\r\n          var el = document.createElement(\"div\");\r\n          el.innerHTML = `${errorMsg}`;\r\n          bodyTextNoticeDialog.append(el);\r\n        });\r\n        document.getElementsByClassName(\"d-dialog-box\")[0].style.display =\r\n          \"block\";\r\n        // return;\r\n      }\r\n      return isValid;\r\n    },\r\n\r\n    /**\r\n     * Thực hiện cập nhật lại dữ liệu sau khi thực hiện thay đổi danh sách nhân viên\r\n     * Author: HVDUNG (20/07/2022)\r\n     */\r\n    async resetEmployee() {\r\n      var me = this;\r\n      // thực hiện cập nhật lại dữ liệu lên giao diện\r\n      try {\r\n        await axios\r\n          .get(`http://localhost:22454/api/v1/Employees/filter?pageSize=${me.pageSize}&pageNumber=${me.pageNumberSelected}&employeeFilter=${me.textSearch}\r\n          &bankName=${me.bankName}&gender=${me.gender}&departmentId=${me.departmentId}`)\r\n          .then((response) => {\r\n            me.employees = response.data.Data;\r\n            me.$emit(\"changeValueEmployees\", me.employees);\r\n            me.$emit(\"changeCount\", response.data.TotalRecords);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện thêm mới nhân viên\r\n     * Author: HVDUNG (05/06/2022)\r\n     */\r\n    async addEmployee() {\r\n      var me = this;\r\n      document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\r\n      // gán một positionId mặc định cho employee\r\n      // me.employee.PositionId = \"25c6c36e-1668-7d10-6e09-bf1378b8dc91\";\r\n      await axios\r\n        .post(\"http://localhost:22454/api/v1/Employees\", me.employee)\r\n        .then(function (res) {\r\n          console.log(res);\r\n          // dùng tạm thời => phải dùng toast msg\r\n        })\r\n        .catch(function (res) {\r\n          let error = res.response.status;\r\n          switch (error) {\r\n            case 400:\r\n            case 500:\r\n              // hiển thị thông báo lỗi khi thêm mới\r\n              alert(res.response.data.Data.EmployeeCode);\r\n              // alert(res.response.data.Data);\r\n              // console.log(res.response);\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n        });\r\n      // Thực hiện cập nhật lại danh sách nhân viên sau khi thêm mới\r\n      await me.resetEmployee();\r\n      //ẩn loading\r\n      document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\r\n    },\r\n\r\n    /**\r\n     * Thực hiện cập nhật thông tin nhân viên\r\n     * thông tin nhân viên được cập nhật\r\n     * Author: HVDUNG (05/06/2022)\r\n     */\r\n    async updateEmployee() {\r\n      var me = this;\r\n      //hiển thị loading\r\n      document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\r\n      // thực hiện update nhân viên\r\n      await axios\r\n        .put(\r\n          `http://localhost:22454/api/v1/Employees/${me.employeeIdSelected}`,\r\n          me.employee\r\n        )\r\n        .then(function (res) {\r\n          console.log(res);\r\n        })\r\n        .catch(function (res) {\r\n          alert(res.response.data.Data.EmployeeCode);\r\n        });\r\n      // thực hiện cập nhật lại dữ liệu lên giao diện\r\n      await me.resetEmployee();\r\n      //ẩn loading\r\n      document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\r\n    },\r\n  },\r\n\r\n};\r\n\r\n</script>\r\n\r\n<style>\r\n@import url(../../style/css/page/employee-info.css);\r\n@import url(../../style/css/icon/icon.css);\r\n</style>"]},"metadata":{},"sourceType":"module"}