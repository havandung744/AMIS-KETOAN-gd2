{"ast":null,"code":"import DropDown from \"../page/DropDownList.vue\";\nimport axios from \"axios\";\nimport EmployeeDetail from \"./EmployeeDetail.vue\";\nimport DialogNotice from \"../dialog/DialogNotice.vue\";\nimport PaginateList from \"../common/PaginateList.vue\";\nimport DialogDelete from \"../dialog/DialogDelete.vue\";\nimport DialogNoEmployee from \"../dialog/DialogNoEmployee.vue\";\nimport { miSaResource } from \"../../js/miSaResource\";\nexport default {\n  name: \"EmployeeList\",\n  components: {\n    DropDown,\n    EmployeeDetail,\n    DialogNotice,\n    PaginateList,\n    DialogDelete,\n    DialogNoEmployee\n  },\n\n  /**\r\n   * Thực hiện khởi tạo đối tượng employees\r\n   * Author: HVDUNG(05/06/2022)\r\n   */\n  created() {\n    // giá trị khởi tạo ban đầu dành cho việc hiển thị\n    this.pagination(10, 1, \"\", \"\", \"\", \"\");\n  },\n\n  watch: {\n    // cập nhật lại tổng số bản ghi khi có sự thay đổi\n    count: function (value) {\n      this.count = value;\n    },\n    // thực hiện focus nhiều lần vào cùng 1 tr thì không bị mất focus\n    isShowDialog: function () {\n      if (this.isShowDialog == false) this.employeeIdSelected = null;\n    },\n    // kiểm tra sự thay đổi của pageSize và cập nhật lại dữ liệu\n    pageSize: function (value) {\n      this.pagination(value, 1, this.textSearch, this.bankName, this.gender, this.departmentId);\n    },\n    // kiểm tra sự thay đổi của pageNumberSelected và cập nhật lại dữ liệu\n    pageNumberSelected: function (value) {\n      this.pagination(this.pageSize, value, this.textSearch, this.bankName, this.gender, this.departmentId);\n    }\n  },\n  methods: {\n    onChangeDepartmentId() {\n      this.pagination(this.pageSize, this.pageNumberSelected, this.textSearch, this.bankName, this.gender, this.departmentId);\n    },\n\n    onChangeBankName() {\n      this.pagination(this.pageSize, this.pageNumberSelected, this.textSearch, this.bankName, this.gender, this.departmentId);\n    },\n\n    onChangeGender() {\n      this.pagination(this.pageSize, this.pageNumberSelected, this.textSearch, this.bankName, this.gender, this.departmentId);\n    },\n\n    /**\r\n     * Thực hiện thay đổi danh sách id của nhân viên\r\n     * @param {mảng id của nhân viên} value\r\n     * Author: HVDUNG(19/07/2022)\r\n     */\n    changeArrayEmployeeId(value) {\n      this.arrayEmployeeId = value;\n    },\n\n    /**\r\n     * Thực hiện xóa nhiều\r\n     * checked all mọi checkbox khi click vào input checkbox\r\n     * lấy ra danh sách id của mọi employee được checkbox\r\n     * @param {} event\r\n     * Author: HVDUNG(19/07/2022)\r\n     */\n    getAllEmployees(event) {\n      var checkboxes = document.querySelectorAll(\"input[type='checkbox']\");\n\n      if (event.target.checked) {\n        checkboxes.forEach(function (checkbox) {\n          checkbox.checked = true;\n        });\n        this.pagination(this.pageSize, this.pageNumberSelected, this.textSearch, this.bankName, this.gender, this.departmentId);\n\n        for (var emp of this.employees) {\n          this.arrayEmployeeId.push(emp.EmployeeId);\n        }\n      } else {\n        checkboxes.forEach(function (checkbox) {\n          checkbox.checked = false;\n        });\n        this.arrayEmployeeId = [];\n      }\n    },\n\n    /**\r\n     * Thực hiện kiểm tra các nhân viên nào đã được checked\r\n     * @param {*} e event có sẵn\r\n     * @param {*} value id của nhân viên\r\n     * Author: HVDUNG(17/07/2022)\r\n     */\n    check(e, value) {\n      if (e.target.checked) this.arrayEmployeeId.push(value);else {\n        var index = this.arrayEmployeeId.indexOf(value);\n        if (index !== -1) this.arrayEmployeeId.splice(index, 1);\n      }\n    },\n\n    /**\r\n     * Thực hiện hiển thị/ẩn button xóa khi click vào button thực hiện hàng loạt\r\n     * Author: HVDUNG(17/07/2022)\r\n     */\n    btnOnClickBatchExecution() {\n      if (this.arrayEmployeeId.length > 1) this.isShowDeleteMany = !this.isShowDeleteMany;else this.isShowDeleteMany = false;\n    },\n\n    /**\r\n     * Thực hiện xóa nhiều khi click button xóa\r\n     * Author: HVDUNG(17/07/2022)\r\n     */\n    async deleteMany() {\n      this.employeeIdForDelete = null;\n      let noticeDialog = document.getElementsByClassName(\"d-dialog-box-delete\")[0];\n      let bodyTextNoticeDialog = noticeDialog.querySelector(\".d-dialog-box-delete .d-dialog-body\");\n      bodyTextNoticeDialog.innerHTML = miSaResource.VI.deleteMany;\n      document.getElementsByClassName(\"d-dialog-box-delete\")[0].style.display = \"block\";\n    },\n\n    /**\r\n     * Thực hiện thay đổi giá trị employeeIdSelected\r\n     * @param {*} value\r\n     * Author: HVDUNG(15/07/2022)\r\n     */\n    changeEmployeeIdSelected(value) {\n      this.employeeIdSelected = value;\n    },\n\n    /**\r\n     * thực hiện hiển thị form dropdown khi click và lấy được mã nhân viên được click\r\n     * Author: HVDUNG(10/06/2022)\r\n     */\n    dropdownClick(employee, event) {\n      this.toggleDropDown();\n      var x = event.pageX - 105;\n      var y = event.pageY + 12;\n      document.getElementById(\"d-dropDown\").style.left = `${x}px`;\n      document.getElementById(\"d-dropDown\").style.top = `${y}px`;\n      this.employeeIdForDelete = employee.EmployeeId;\n      this.employeeCodeForDelete = employee.EmployeeCode;\n      this.employeeIdSelected = this.employeeIdForDelete;\n      this.formDetailMode = 1;\n      this.checkReplication = true;\n    },\n\n    /**\r\n     * Thực hiện kiểm tra page đang chọn\r\n     * @param {int} value giá trị\r\n     * Author: HVDUNG(10/06/2022)\r\n     */\n    pageNumber(value) {\n      this.pageNumberSelected = value;\n    },\n\n    /**\r\n     * Thực hiện phân trang\r\n     * @param {int} pageSize số bản ghi/trang\r\n     * @param {int} pageNumber trang thứ bao nhiêu\r\n     * @param {string} textSearch nội dung tìm kiếm\r\n     * Author: HVDUNG(08/06/2022)\r\n     */\n    // async pagination(pageSize, pageNumber, textSearch) {\n    //   var me = this;\n    //   try {\n    //     me.isLoading = true;\n    //     await axios\n    //       .get(\n    //         `http://localhost:22454/api/v1/Employees/filter?pageSize=${pageSize}&pageNumber=${pageNumber}&employeeFilter=${textSearch}`\n    //       )\n    //       .then((response) => {\n    //         console.log(response.data);\n    //         me.employees = response.data.Data;\n    //         me.totalPages = response.data.TotalPages;\n    //         me.count = response.data.TotalRecords;\n    //         // thực hiện hiển thị icon và text không có dữ liệu khi tìm kiếm\n    //         if (me.totalPages == 0) me.checkTotalEmployee = true;\n    //         else me.checkTotalEmployee = false;\n    //         console.log(me.textSearch);\n    //       })\n    //       .catch(function (error) {\n    //         console.log(error);\n    //       });\n    //     me.isLoading = false;\n    //   } catch (error) {\n    //     me.isLoading = false;\n    //     console.log(error);\n    //   }\n    // },\n    async pagination(pageSize, pageNumber, textSearch, bankName, gender, departmentId) {\n      var me = this;\n\n      try {\n        me.isLoading = true;\n        await axios.get(`http://localhost:22454/api/v1/Employees/filter?pageSize=${pageSize}\n            &pageNumber=${pageNumber}&employeeFilter=${textSearch}&bankName=${bankName}&gender=${gender}&departmentId=${departmentId}`).then(response => {\n          console.log(response.data);\n          me.employees = response.data.Data;\n          console.log(me.employees);\n          me.totalPages = response.data.TotalPages;\n          me.count = response.data.TotalRecords; // thực hiện hiển thị icon và text không có dữ liệu khi tìm kiếm\n\n          if (me.totalPages == 0) me.checkTotalEmployee = true;else me.checkTotalEmployee = false;\n          console.log(me.textSearch);\n        }).catch(function (error) {\n          console.log(error);\n        });\n        me.isLoading = false;\n      } catch (error) {\n        me.isLoading = false;\n        console.log(error);\n      }\n    },\n\n    /**\r\n     * Thực hiện tự động tìm kiếm khi search\r\n     * Author: VHDUNG(08/06/2022)\r\n     */\n    autoSearch() {\n      var me = this;\n\n      if (me.textSearch != \"\") {\n        if (me.globalTimeout != null) {\n          clearTimeout(me.globalTimeout);\n        }\n\n        me.globalTimeout = setTimeout(function () {\n          me.globalTimeout = null;\n          me.pagination(me.pageSize, 1, me.textSearch, me.bankName, me.gender, me.departmentId);\n        }, 500);\n      } else me.pagination(me.pageSize, me.pageNumberSelected, \"\", me.bankName, me.gender, me.departmentId);\n    },\n\n    /**\r\n     * thực hiện build lại employees cho cha sau khi nhận sự thay đổi ở các componants khác (vd: EmployeeDeatails, DropDownList)\r\n     * Author: HVDUNG(06/06/2022)\r\n     */\n    changeValueEmployees(value) {\n      this.employees = value;\n    },\n\n    /**\r\n     * thực hiện gán lại value cho formMode\r\n     * Author: HVDUNG(06/06/2022)\r\n     */\n    changeValueFormMode(value) {\n      this.formDetailMode = value;\n    },\n\n    /**\r\n     * thực hiện build lại tổng số bản ghi khi xóa đối tượng\r\n     * Author: HVDUNG(06/06/2022)\r\n     */\n    changeCount(value) {\n      this.count = value;\n    },\n\n    /**\r\n     * Thực hiện show form detail khi click\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\n    async btnAddOnclick() {\n      // xác nhân không phải là nhân bản\n      this.checkReplication = false; // gán lại giá trị cho fromDetailMode là thêm mới\n\n      this.formDetailMode = 1; // thực hiện xóa đi đường viền đỏ\n\n      document.getElementById(\"EmployeeCode\").classList.remove(\"d-input-error\");\n      document.getElementById(\"EmployeeName\").classList.remove(\"d-input-error\"); // thực hiện ẩn form dropdown nếu đang mở\n\n      document.getElementsByClassName(\"dropdown\")[0].style.display = \"none\"; // thực hiện hiển thị form chi tiết\n\n      this.toggleEmployeeDialog(); // gán lại giá trị cho employeeIdSelected\n\n      this.employeeIdSelected = \"\";\n    },\n\n    /**\r\n     * Thực hiện hiển thị thông tin nhân viên\r\n     * @param {*} employee là đối tượng emplye Được lấy ở v-for\r\n     * building ra data của employee\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\n    trOnDoubleClick(employee) {\n      // gán lại chế độ xem chi tiết hay là nhân bản\n      this.checkReplication = false; // gán chế độ là update\n\n      this.formDetailMode = 0; // thực hiện xóa đi đường viền đỏ\n\n      document.getElementById(\"EmployeeCode\").classList.remove(\"d-input-error\");\n      document.getElementById(\"EmployeeName\").classList.remove(\"d-input-error\"); // thực hiện ẩn form dropdown nếu đang mở\n\n      document.getElementsByClassName(\"dropdown\")[0].style.display = \"none\"; // hiển thị form chi tiết\n\n      this.toggleEmployeeDialog();\n      this.employeeIdSelected = employee.EmployeeId;\n    },\n\n    // thực hiện việc ẩn hiện form chi tiết\n    // Author: HVDUNG(08/06/2022)\n    toggleEmployeeDialog() {\n      this.isShowDialog = !this.isShowDialog;\n    },\n\n    // thực hiện việc ẩn hiện form dropDown\n    // Author: HVDUNG(08/06/2022)\n    toggleDropDown() {\n      this.isShowDropDown = !this.isShowDropDown;\n    },\n\n    /**\r\n     * Thực hiện reload lại dữ liệu khi click\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\n    btnRefreshOnClick() {\n      if (this.textSearch == \"\") {\n        this.pagination(this.pageSize, this.pageNumberSelected, \"\", this.bankName, this.gender, this.departmentId);\n      } else {\n        this.pagination(this.pageSize, 1, this.textSearch, this.bankName, this.gender, this.departmentId);\n      }\n    },\n\n    /**\r\n     * Thực hiện xuất file excel\r\n     * Author: HVDUNG(25/06/2022)\r\n     */\n    btnExportExcel() {\n      try {\n        axios.get(\"http://localhost:22454/api/v1/Employees/excel\", {\n          responseType: \"blob\"\n        }).then(res => {\n          const url = URL.createObjectURL(new Blob([res.data]));\n          const link = document.createElement(\"a\");\n          link.href = url;\n          link.setAttribute(\"download\", \"Danh sách nhân viên.xlsx\");\n          document.body.appendChild(link);\n          link.click();\n        }).catch(res => {\n          console.log(res);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    /**\r\n     * Thực hiện định dạng lại ngày tháng để hiển thị\r\n     * @param {*} dateOfBirth ngày tháng được truyền vào\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\n    formatDate(dateOfBirth) {\n      if (dateOfBirth) {\n        // chuyển từ dạng string sang dạng Date\n        dateOfBirth = new Date(dateOfBirth); // lấy ngày\n\n        let date = dateOfBirth.getDate(); // lấy tháng\n\n        let month = dateOfBirth.getMonth() + 1; // lấy năm\n\n        let year = dateOfBirth.getFullYear(); // thêm số 0 vào trước nếu chỉ có một kí tự\n\n        date = date < 10 ? `0${date}` : date;\n        month = month < 10 ? `0${month}` : month;\n        return `${date}/${month}/${year}`;\n      } else {\n        return \"\";\n      }\n    }\n\n  },\n\n  data() {\n    return {\n      textSearch: \"\",\n      bankName: \"\",\n      gender: \"\",\n      departmentId: \"\",\n      employees: {},\n      isShowDialog: false,\n      isLoading: true,\n      employeeIdSelected: null,\n      employeeIdForDelete: null,\n      employeeCodeForDelete: null,\n      active: false,\n      formDetailMode: 0,\n      isShowDropDown: false,\n      count: 0,\n      globalTimeout: null,\n      // data dùng để phân trang\n      totalPages: 0,\n      pageSize: 10,\n      pageNumberSelected: 1,\n      checkTotalEmployee: false,\n      checkReplication: false,\n      arrayEmployeeId: [],\n      isShowDeleteMany: false,\n      departments: [{\n        value: \"\",\n        label: \"Chọn phòng ban\"\n      }, {\n        value: \"142cb08f-7c31-21fa-8e90-67245e8b283e\",\n        label: \"Phòng đào tạo\"\n      }, {\n        value: \"17120d02-6ab5-3e43-18cb-66948daf6128\",\n        label: \"Phòng nhân sự\"\n      }, {\n        value: \"469b3ece-744a-45d5-957d-e8c757976496\",\n        label: \"Phòng sản xuất\"\n      }, {\n        value: \"4e272fc4-7875-78d6-7d32-6a1673ffca7c\",\n        label: \"Phòng kế toán\"\n      }],\n      bankNames: [{\n        value: \"\",\n        label: \"Chọn ngân hàng\"\n      }, {\n        value: \"ACB\",\n        label: \"ACB\"\n      }, {\n        value: \"AgriBank\",\n        label: \"AgriBank\"\n      }, {\n        value: \"BIDV\",\n        label: \"BIDV\"\n      }, {\n        value: \"VPBank\",\n        label: \"VPBank\"\n      }],\n      genders: [{\n        value: \"\",\n        label: \"Chọn giới tính\"\n      }, {\n        value: \"1\",\n        label: \"Nam\"\n      }, {\n        value: \"0\",\n        label: \"Nữ\"\n      }, {\n        value: \"2\",\n        label: \"Khác\"\n      }]\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["DropDown","axios","EmployeeDetail","DialogNotice","PaginateList","DialogDelete","DialogNoEmployee","miSaResource","name","components","created","pagination","watch","count","value","isShowDialog","employeeIdSelected","pageSize","textSearch","bankName","gender","departmentId","pageNumberSelected","methods","onChangeDepartmentId","onChangeBankName","onChangeGender","changeArrayEmployeeId","arrayEmployeeId","getAllEmployees","event","checkboxes","document","querySelectorAll","target","checked","forEach","checkbox","emp","employees","push","EmployeeId","check","e","index","indexOf","splice","btnOnClickBatchExecution","length","isShowDeleteMany","deleteMany","employeeIdForDelete","noticeDialog","getElementsByClassName","bodyTextNoticeDialog","querySelector","innerHTML","VI","style","display","changeEmployeeIdSelected","dropdownClick","employee","toggleDropDown","x","pageX","y","pageY","getElementById","left","top","employeeCodeForDelete","EmployeeCode","formDetailMode","checkReplication","pageNumber","me","isLoading","get","then","response","console","log","data","Data","totalPages","TotalPages","TotalRecords","checkTotalEmployee","catch","error","autoSearch","globalTimeout","clearTimeout","setTimeout","changeValueEmployees","changeValueFormMode","changeCount","btnAddOnclick","classList","remove","toggleEmployeeDialog","trOnDoubleClick","isShowDropDown","btnRefreshOnClick","btnExportExcel","responseType","res","url","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","formatDate","dateOfBirth","Date","date","getDate","month","getMonth","year","getFullYear","active","departments","label","bankNames","genders"],"sourceRoot":"","sources":["C:\\Misa\\git\\AMIS-KETOAN-gd2\\amis-ketoan\\src\\components\\page\\EmployeeList.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-content\">\r\n    <div class=\"d-page-header\">\r\n      <div class=\"d-page-title\">Nhân viên</div>\r\n      <button\r\n        class=\"d-btn d-btn\"\r\n        id=\"d-btn-add-employee\"\r\n        @click=\"btnAddOnclick\"\r\n      >\r\n        Thêm mới nhân viên\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"d-page-toolbar\">\r\n      <div class=\"d-page-toolbar-left\">\r\n        <button id=\"batch-execution\" @click=\"btnOnClickBatchExecution\">\r\n          Thực hiện hàng loạt\r\n          <div class=\"icon-expand-more-box\">\r\n            <div class=\"icon_expand_more\"></div>\r\n          </div>\r\n          <button\r\n            class=\"deleteMany\"\r\n            v-show=\"isShowDeleteMany\"\r\n            @click=\"deleteMany\"\r\n          >\r\n            Xóa\r\n          </button>\r\n        </button>\r\n\r\n        <el-select\r\n          v-model=\"this.departmentId\"\r\n          placeholder=\"Chọn phòng ban\"\r\n          @change=\"onChangeDepartmentId()\"\r\n          class=\"m-2\"\r\n        >\r\n          <el-option\r\n            v-for=\"item in this.departments\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\"\r\n          />\r\n        </el-select>\r\n\r\n        <el-select\r\n          v-model=\"this.bankName\"\r\n          placeholder=\"Chọn ngân hàng\"\r\n          @change=\"onChangeBankName()\"\r\n          class=\"m-2\"\r\n        >\r\n          <el-option\r\n            v-for=\"item in this.bankNames\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\"\r\n          />\r\n        </el-select>\r\n\r\n        <el-select\r\n          v-model=\"this.gender\"\r\n          placeholder=\"Chọn giới tính\"\r\n          @change=\"onChangeGender()\"\r\n          class=\"m-2\"\r\n        >\r\n          <el-option\r\n            v-for=\"item in this.genders\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\"\r\n          />\r\n        </el-select>\r\n      </div>\r\n\r\n      <div class=\"d-toolbar-left\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"d-input\"\r\n          v-on:keyup=\"autoSearch\"\r\n          v-model=\"textSearch\"\r\n          placeholder=\"Tìm kiếm theo mã, tên nhân viên\"\r\n          style=\"font-size: 12px\"\r\n        />\r\n        <div class=\"icon_search\"></div>\r\n      </div>\r\n      <div class=\"icon_refresh\" @click=\"btnRefreshOnClick\"></div>\r\n      <div class=\"icon_excel\" @click=\"btnExportExcel\"></div>\r\n    </div>\r\n\r\n    <div class=\"d-grid\">\r\n      <div class=\"d-grid-table\">\r\n        <table class=\"d-table\">\r\n          <thead>\r\n            <tr>\r\n              <!-- <th class=\"text-align-left ok\">STT</th> -->\r\n              <!-- <th class=\"text-align-center\"><input type=\"checkbox\"></th> -->\r\n              <th class=\"text-align-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"checkAll\"\r\n                  @click=\"getAllEmployees($event)\"\r\n                />\r\n              </th>\r\n              <th class=\"text-align-left\">MÃ NHÂN VIÊN</th>\r\n              <th class=\"text-align-left\">TÊN NHÂN VIÊN</th>\r\n              <th class=\"text-align-left\">GIỚI TÍNH</th>\r\n              <th class=\"text-align-center\">NGÀY SINH</th>\r\n              <th class=\"text-align-left\">SỐ CMND</th>\r\n              <th class=\"text-align-left\">CHỨC DANH</th>\r\n              <th class=\"text-align-left\">TÊN ĐƠN VỊ</th>\r\n              <th class=\"text-align-left\">SỐ TÀI KHOẢN</th>\r\n              <th class=\"text-align-left\">TÊN NGÂN HÀNG</th>\r\n              <th class=\"text-align-left\">CHI NHÁNH TK NGÂN HÀNG</th>\r\n              <th class=\"text-align-center\" style=\"min-width: 119px\">\r\n                CHỨC NĂNG\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr\r\n              v-for=\"employee in employees\"\r\n              :key=\"employee.EmployeeId\"\r\n              @dblclick=\"trOnDoubleClick(employee)\"\r\n            >\r\n              <td id=\"d-td\" class=\"text-align-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  @change=\"check($event, employee.EmployeeId)\"\r\n                />\r\n              </td>\r\n              <td class=\"text-align-left\">{{ employee.EmployeeCode }}</td>\r\n              <td class=\"text-align-left\">{{ employee.EmployeeName }}</td>\r\n              <td class=\"text-align-left\">{{ employee.GenderName }}</td>\r\n              <td class=\"text-align-left\">\r\n                {{ formatDate(employee.DateOfBirth) }}\r\n              </td>\r\n              <td class=\"text-align-left\">{{ employee.IdentityNumber }}</td>\r\n              <td class=\"text-align-left\">{{ employee.EmployeePosition }}</td>\r\n              <td class=\"text-align-left\">{{ employee.DepartmentName }}</td>\r\n              <td class=\"text-align-left\">{{ employee.BankAccountNumber }}</td>\r\n              <td class=\"text-align-left\">{{ employee.BankName }}</td>\r\n              <td class=\"text-align-left\">{{ employee.BankBranchName }}</td>\r\n              <td class=\"text-align-center\">\r\n                <div class=\"d-function\">\r\n                  <div class=\"d-text\">Sửa</div>\r\n                  <div\r\n                    class=\"d-dropdown_box\"\r\n                    @click=\"dropdownClick(employee, $event)\"\r\n                  >\r\n                    <div class=\"icon_dropdown\"></div>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <DialogNoEmployee\r\n          v-show=\"checkTotalEmployee == true\"\r\n        ></DialogNoEmployee>\r\n      </div>\r\n      <div class=\"d-paging\" v-show=\"checkTotalEmployee == false\">\r\n        <div class=\"d-paging-left\">\r\n          Tổng số: <b>{{ this.count }}</b> bản ghi\r\n        </div>\r\n        <div class=\"d-paging-center\"></div>\r\n        <div class=\"d-paging-right\">\r\n          <div class=\"d-row\">\r\n            <select class=\"d-combobox\" v-model=\"pageSize\">\r\n              <option value=\"10\">10 bản ghi trên 1 trang</option>\r\n              <option value=\"20\">20 bản ghi trên 1 trang</option>\r\n              <option value=\"30\">30 bản ghi trên 1 trang</option>\r\n              <option value=\"50\">50 bản ghi trên 1 trang</option>\r\n              <option value=\"100\">100 bản ghi trên 1 trang</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"d-row\">\r\n            <PaginateList\r\n              :totalPages=\"totalPages\"\r\n              @pageNumber=\"pageNumber\"\r\n            ></PaginateList>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- showDialog là props của file detail, giá trị nhận là isShowDialog của file EmployeeList -->\r\n    <!-- @isShowDialog là cách ta định nghĩa một phương thức để từ bên detail có thể gọi sang bên list thông qua $emit -->\r\n    <!-- \"employee\" là cách ta truyền trực tiếp từ cliend chứ không thông qua server-->\r\n    <EmployeeDetail\r\n      @changeValueEmployees=\"changeValueEmployees\"\r\n      @changeValueFormMode=\"changeValueFormMode\"\r\n      :checkReplication=\"checkReplication\"\r\n      v-show=\"isShowDialog\"\r\n      @isShowDialog=\"toggleEmployeeDialog\"\r\n      :employeeIdSelected=\"employeeIdSelected\"\r\n      :formMode=\"formDetailMode\"\r\n      :pageNumberSelected=\"pageNumberSelected\"\r\n      :pageSize=\"pageSize\"\r\n      @changeCount=\"changeCount\"\r\n      :textSearch=\"textSearch\"\r\n      :bankName=\"bankName\"\r\n      :gender=\"gender\"\r\n      :departmentId=\"departmentId\"\r\n    >\r\n    </EmployeeDetail>\r\n    <!-- thực hiện hiển thị thông báo khi validate không hợp lệ-->\r\n    <DialogNotice></DialogNotice>\r\n    <!-- thực hiện hiển thị cảnh báo khi thực hiện xóa nhân viên-->\r\n    <DialogDelete\r\n      @changeValueEmployees=\"changeValueEmployees\"\r\n      :employeeIdForDelete=\"employeeIdForDelete\"\r\n      @arrayEmployeeId=\"changeArrayEmployeeId\"\r\n      :arrayEmployeeId=\"arrayEmployeeId\"\r\n      @pageNumber=\"pageNumber\"\r\n      :pageNumberSelected=\"pageNumberSelected\"\r\n      :pageSize=\"pageSize\"\r\n      :textSearch=\"textSearch\"\r\n      :bankName=\"bankName\"\r\n      :gender=\"gender\"\r\n      :departmentId=\"departmentId\"\r\n      @changeCount=\"changeCount\"\r\n    >\r\n    </DialogDelete>\r\n\r\n    <!-- thực hiện hiển thị dropdown khi click -->\r\n    <DropDown\r\n      v-show=\"isShowDropDown\"\r\n      @isShowDropDown=\"toggleDropDown\"\r\n      @employeeIdSelected=\"changeEmployeeIdSelected\"\r\n      id=\"d-dropDown\"\r\n      :employeeCodeForDelete=\"employeeCodeForDelete\"\r\n      @isShowDialog=\"toggleEmployeeDialog\"\r\n    ></DropDown>\r\n    <!-- thành phần thực hiện loading -->\r\n    <div class=\"loading\" v-show=\"isLoading\">\r\n      <div class=\"loading-icon\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport DropDown from \"../page/DropDownList.vue\";\r\nimport axios from \"axios\";\r\nimport EmployeeDetail from \"./EmployeeDetail.vue\";\r\nimport DialogNotice from \"../dialog/DialogNotice.vue\";\r\nimport PaginateList from \"../common/PaginateList.vue\";\r\nimport DialogDelete from \"../dialog/DialogDelete.vue\";\r\nimport DialogNoEmployee from \"../dialog/DialogNoEmployee.vue\";\r\nimport { miSaResource } from \"../../js/miSaResource\";\r\nexport default {\r\n  name: \"EmployeeList\",\r\n  components: {\r\n    DropDown,\r\n    EmployeeDetail,\r\n    DialogNotice,\r\n    PaginateList,\r\n    DialogDelete,\r\n    DialogNoEmployee,\r\n  },\r\n\r\n  /**\r\n   * Thực hiện khởi tạo đối tượng employees\r\n   * Author: HVDUNG(05/06/2022)\r\n   */\r\n  created() {\r\n    // giá trị khởi tạo ban đầu dành cho việc hiển thị\r\n    this.pagination(10, 1, \"\", \"\", \"\", \"\");\r\n  },\r\n\r\n  watch: {\r\n    // cập nhật lại tổng số bản ghi khi có sự thay đổi\r\n    count: function (value) {\r\n      this.count = value;\r\n    },\r\n\r\n    // thực hiện focus nhiều lần vào cùng 1 tr thì không bị mất focus\r\n    isShowDialog: function () {\r\n      if (this.isShowDialog == false) this.employeeIdSelected = null;\r\n    },\r\n\r\n    // kiểm tra sự thay đổi của pageSize và cập nhật lại dữ liệu\r\n    pageSize: function (value) {\r\n      this.pagination(\r\n        value,\r\n        1,\r\n        this.textSearch,\r\n        this.bankName,\r\n        this.gender,\r\n        this.departmentId\r\n      );\r\n    },\r\n\r\n    // kiểm tra sự thay đổi của pageNumberSelected và cập nhật lại dữ liệu\r\n    pageNumberSelected: function (value) {\r\n      this.pagination(\r\n        this.pageSize,\r\n        value,\r\n        this.textSearch,\r\n        this.bankName,\r\n        this.gender,\r\n        this.departmentId\r\n      );\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    onChangeDepartmentId() {\r\n      this.pagination(\r\n        this.pageSize,\r\n        this.pageNumberSelected,\r\n        this.textSearch,\r\n        this.bankName,\r\n        this.gender,\r\n        this.departmentId\r\n      );\r\n    },\r\n\r\n    onChangeBankName() {\r\n      this.pagination(\r\n        this.pageSize,\r\n        this.pageNumberSelected,\r\n        this.textSearch,\r\n        this.bankName,\r\n        this.gender,\r\n        this.departmentId\r\n      );\r\n    },\r\n    onChangeGender() {\r\n      this.pagination(\r\n        this.pageSize,\r\n        this.pageNumberSelected,\r\n        this.textSearch,\r\n        this.bankName,\r\n        this.gender,\r\n        this.departmentId\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Thực hiện thay đổi danh sách id của nhân viên\r\n     * @param {mảng id của nhân viên} value\r\n     * Author: HVDUNG(19/07/2022)\r\n     */\r\n    changeArrayEmployeeId(value) {\r\n      this.arrayEmployeeId = value;\r\n    },\r\n\r\n    /**\r\n     * Thực hiện xóa nhiều\r\n     * checked all mọi checkbox khi click vào input checkbox\r\n     * lấy ra danh sách id của mọi employee được checkbox\r\n     * @param {} event\r\n     * Author: HVDUNG(19/07/2022)\r\n     */\r\n    getAllEmployees(event) {\r\n      var checkboxes = document.querySelectorAll(\"input[type='checkbox']\");\r\n      if (event.target.checked) {\r\n        checkboxes.forEach(function (checkbox) {\r\n          checkbox.checked = true;\r\n        });\r\n        this.pagination(\r\n          this.pageSize,\r\n          this.pageNumberSelected,\r\n          this.textSearch,\r\n          this.bankName,\r\n          this.gender,\r\n          this.departmentId\r\n        );\r\n        for (var emp of this.employees) {\r\n          this.arrayEmployeeId.push(emp.EmployeeId);\r\n        }\r\n      } else {\r\n        checkboxes.forEach(function (checkbox) {\r\n          checkbox.checked = false;\r\n        });\r\n        this.arrayEmployeeId = [];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện kiểm tra các nhân viên nào đã được checked\r\n     * @param {*} e event có sẵn\r\n     * @param {*} value id của nhân viên\r\n     * Author: HVDUNG(17/07/2022)\r\n     */\r\n    check(e, value) {\r\n      if (e.target.checked) this.arrayEmployeeId.push(value);\r\n      else {\r\n        var index = this.arrayEmployeeId.indexOf(value);\r\n        if (index !== -1) this.arrayEmployeeId.splice(index, 1);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện hiển thị/ẩn button xóa khi click vào button thực hiện hàng loạt\r\n     * Author: HVDUNG(17/07/2022)\r\n     */\r\n    btnOnClickBatchExecution() {\r\n      if (this.arrayEmployeeId.length > 1)\r\n        this.isShowDeleteMany = !this.isShowDeleteMany;\r\n      else this.isShowDeleteMany = false;\r\n    },\r\n\r\n    /**\r\n     * Thực hiện xóa nhiều khi click button xóa\r\n     * Author: HVDUNG(17/07/2022)\r\n     */\r\n    async deleteMany() {\r\n      this.employeeIdForDelete = null;\r\n      let noticeDialog = document.getElementsByClassName(\r\n        \"d-dialog-box-delete\"\r\n      )[0];\r\n      let bodyTextNoticeDialog = noticeDialog.querySelector(\r\n        \".d-dialog-box-delete .d-dialog-body\"\r\n      );\r\n      bodyTextNoticeDialog.innerHTML = miSaResource.VI.deleteMany;\r\n      document.getElementsByClassName(\"d-dialog-box-delete\")[0].style.display =\r\n        \"block\";\r\n    },\r\n\r\n    /**\r\n     * Thực hiện thay đổi giá trị employeeIdSelected\r\n     * @param {*} value\r\n     * Author: HVDUNG(15/07/2022)\r\n     */\r\n    changeEmployeeIdSelected(value) {\r\n      this.employeeIdSelected = value;\r\n    },\r\n\r\n    /**\r\n     * thực hiện hiển thị form dropdown khi click và lấy được mã nhân viên được click\r\n     * Author: HVDUNG(10/06/2022)\r\n     */\r\n    dropdownClick(employee, event) {\r\n      this.toggleDropDown();\r\n      var x = event.pageX - 105;\r\n      var y = event.pageY + 12;\r\n      document.getElementById(\"d-dropDown\").style.left = `${x}px`;\r\n      document.getElementById(\"d-dropDown\").style.top = `${y}px`;\r\n      this.employeeIdForDelete = employee.EmployeeId;\r\n      this.employeeCodeForDelete = employee.EmployeeCode;\r\n      this.employeeIdSelected = this.employeeIdForDelete;\r\n      this.formDetailMode = 1;\r\n      this.checkReplication = true;\r\n    },\r\n\r\n    /**\r\n     * Thực hiện kiểm tra page đang chọn\r\n     * @param {int} value giá trị\r\n     * Author: HVDUNG(10/06/2022)\r\n     */\r\n    pageNumber(value) {\r\n      this.pageNumberSelected = value;\r\n    },\r\n\r\n    /**\r\n     * Thực hiện phân trang\r\n     * @param {int} pageSize số bản ghi/trang\r\n     * @param {int} pageNumber trang thứ bao nhiêu\r\n     * @param {string} textSearch nội dung tìm kiếm\r\n     * Author: HVDUNG(08/06/2022)\r\n     */\r\n    // async pagination(pageSize, pageNumber, textSearch) {\r\n    //   var me = this;\r\n    //   try {\r\n    //     me.isLoading = true;\r\n    //     await axios\r\n    //       .get(\r\n    //         `http://localhost:22454/api/v1/Employees/filter?pageSize=${pageSize}&pageNumber=${pageNumber}&employeeFilter=${textSearch}`\r\n    //       )\r\n    //       .then((response) => {\r\n    //         console.log(response.data);\r\n    //         me.employees = response.data.Data;\r\n    //         me.totalPages = response.data.TotalPages;\r\n    //         me.count = response.data.TotalRecords;\r\n    //         // thực hiện hiển thị icon và text không có dữ liệu khi tìm kiếm\r\n    //         if (me.totalPages == 0) me.checkTotalEmployee = true;\r\n    //         else me.checkTotalEmployee = false;\r\n    //         console.log(me.textSearch);\r\n    //       })\r\n    //       .catch(function (error) {\r\n    //         console.log(error);\r\n    //       });\r\n    //     me.isLoading = false;\r\n    //   } catch (error) {\r\n    //     me.isLoading = false;\r\n    //     console.log(error);\r\n    //   }\r\n    // },\r\n\r\n    async pagination(\r\n      pageSize,\r\n      pageNumber,\r\n      textSearch,\r\n      bankName,\r\n      gender,\r\n      departmentId\r\n    ) {\r\n      var me = this;\r\n      try {\r\n        me.isLoading = true;\r\n        await axios\r\n          .get(\r\n            `http://localhost:22454/api/v1/Employees/filter?pageSize=${pageSize}\r\n            &pageNumber=${pageNumber}&employeeFilter=${textSearch}&bankName=${bankName}&gender=${gender}&departmentId=${departmentId}`\r\n          )\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            me.employees = response.data.Data;\r\n            console.log(me.employees);\r\n            me.totalPages = response.data.TotalPages;\r\n            me.count = response.data.TotalRecords;\r\n            // thực hiện hiển thị icon và text không có dữ liệu khi tìm kiếm\r\n            if (me.totalPages == 0) me.checkTotalEmployee = true;\r\n            else me.checkTotalEmployee = false;\r\n            console.log(me.textSearch);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n        me.isLoading = false;\r\n      } catch (error) {\r\n        me.isLoading = false;\r\n        console.log(error);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện tự động tìm kiếm khi search\r\n     * Author: VHDUNG(08/06/2022)\r\n     */\r\n    autoSearch() {\r\n      var me = this;\r\n      if (me.textSearch != \"\") {\r\n        if (me.globalTimeout != null) {\r\n          clearTimeout(me.globalTimeout);\r\n        }\r\n        me.globalTimeout = setTimeout(function () {\r\n          me.globalTimeout = null;\r\n          me.pagination(\r\n            me.pageSize,\r\n            1,\r\n            me.textSearch,\r\n            me.bankName,\r\n            me.gender,\r\n            me.departmentId\r\n          );\r\n        }, 500);\r\n      } else\r\n        me.pagination(\r\n          me.pageSize,\r\n          me.pageNumberSelected,\r\n          \"\",\r\n          me.bankName,\r\n          me.gender,\r\n          me.departmentId\r\n        );\r\n    },\r\n\r\n    /**\r\n     * thực hiện build lại employees cho cha sau khi nhận sự thay đổi ở các componants khác (vd: EmployeeDeatails, DropDownList)\r\n     * Author: HVDUNG(06/06/2022)\r\n     */\r\n    changeValueEmployees(value) {\r\n      this.employees = value;\r\n    },\r\n\r\n    /**\r\n     * thực hiện gán lại value cho formMode\r\n     * Author: HVDUNG(06/06/2022)\r\n     */\r\n    changeValueFormMode(value) {\r\n      this.formDetailMode = value;\r\n    },\r\n\r\n    /**\r\n     * thực hiện build lại tổng số bản ghi khi xóa đối tượng\r\n     * Author: HVDUNG(06/06/2022)\r\n     */\r\n    changeCount(value) {\r\n      this.count = value;\r\n    },\r\n\r\n    /**\r\n     * Thực hiện show form detail khi click\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\r\n    async btnAddOnclick() {\r\n      // xác nhân không phải là nhân bản\r\n      this.checkReplication = false;\r\n      // gán lại giá trị cho fromDetailMode là thêm mới\r\n      this.formDetailMode = 1;\r\n      // thực hiện xóa đi đường viền đỏ\r\n      document.getElementById(\"EmployeeCode\").classList.remove(\"d-input-error\");\r\n      document.getElementById(\"EmployeeName\").classList.remove(\"d-input-error\");\r\n      // thực hiện ẩn form dropdown nếu đang mở\r\n      document.getElementsByClassName(\"dropdown\")[0].style.display = \"none\";\r\n      // thực hiện hiển thị form chi tiết\r\n      this.toggleEmployeeDialog();\r\n      // gán lại giá trị cho employeeIdSelected\r\n      this.employeeIdSelected = \"\";\r\n    },\r\n\r\n    /**\r\n     * Thực hiện hiển thị thông tin nhân viên\r\n     * @param {*} employee là đối tượng emplye Được lấy ở v-for\r\n     * building ra data của employee\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\r\n    trOnDoubleClick(employee) {\r\n      // gán lại chế độ xem chi tiết hay là nhân bản\r\n      this.checkReplication = false;\r\n      // gán chế độ là update\r\n      this.formDetailMode = 0;\r\n      // thực hiện xóa đi đường viền đỏ\r\n      document.getElementById(\"EmployeeCode\").classList.remove(\"d-input-error\");\r\n      document.getElementById(\"EmployeeName\").classList.remove(\"d-input-error\");\r\n      // thực hiện ẩn form dropdown nếu đang mở\r\n      document.getElementsByClassName(\"dropdown\")[0].style.display = \"none\";\r\n      // hiển thị form chi tiết\r\n      this.toggleEmployeeDialog();\r\n      this.employeeIdSelected = employee.EmployeeId;\r\n    },\r\n\r\n    // thực hiện việc ẩn hiện form chi tiết\r\n    // Author: HVDUNG(08/06/2022)\r\n    toggleEmployeeDialog() {\r\n      this.isShowDialog = !this.isShowDialog;\r\n    },\r\n\r\n    // thực hiện việc ẩn hiện form dropDown\r\n    // Author: HVDUNG(08/06/2022)\r\n    toggleDropDown() {\r\n      this.isShowDropDown = !this.isShowDropDown;\r\n    },\r\n\r\n    /**\r\n     * Thực hiện reload lại dữ liệu khi click\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\r\n    btnRefreshOnClick() {\r\n      if (this.textSearch == \"\") {\r\n        this.pagination(\r\n          this.pageSize,\r\n          this.pageNumberSelected,\r\n          \"\",\r\n          this.bankName,\r\n          this.gender,\r\n          this.departmentId\r\n        );\r\n      } else {\r\n        this.pagination(\r\n          this.pageSize,\r\n          1,\r\n          this.textSearch,\r\n          this.bankName,\r\n          this.gender,\r\n          this.departmentId\r\n        );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện xuất file excel\r\n     * Author: HVDUNG(25/06/2022)\r\n     */\r\n    btnExportExcel() {\r\n      try {\r\n        axios\r\n          .get(\"http://localhost:22454/api/v1/Employees/excel\", {\r\n            responseType: \"blob\",\r\n          })\r\n          .then((res) => {\r\n            const url = URL.createObjectURL(new Blob([res.data]));\r\n            const link = document.createElement(\"a\");\r\n\r\n            link.href = url;\r\n            link.setAttribute(\"download\", \"Danh sách nhân viên.xlsx\");\r\n\r\n            document.body.appendChild(link);\r\n            link.click();\r\n          })\r\n          .catch((res) => {\r\n            console.log(res);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện định dạng lại ngày tháng để hiển thị\r\n     * @param {*} dateOfBirth ngày tháng được truyền vào\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\r\n    formatDate(dateOfBirth) {\r\n      if (dateOfBirth) {\r\n        // chuyển từ dạng string sang dạng Date\r\n        dateOfBirth = new Date(dateOfBirth);\r\n        // lấy ngày\r\n        let date = dateOfBirth.getDate();\r\n        // lấy tháng\r\n        let month = dateOfBirth.getMonth() + 1;\r\n        // lấy năm\r\n        let year = dateOfBirth.getFullYear();\r\n        // thêm số 0 vào trước nếu chỉ có một kí tự\r\n        date = date < 10 ? `0${date}` : date;\r\n        month = month < 10 ? `0${month}` : month;\r\n        return `${date}/${month}/${year}`;\r\n      } else {\r\n        return \"\";\r\n      }\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      textSearch: \"\",\r\n      bankName: \"\",\r\n      gender: \"\",\r\n      departmentId: \"\",\r\n      employees: {},\r\n      isShowDialog: false,\r\n      isLoading: true,\r\n      employeeIdSelected: null,\r\n      employeeIdForDelete: null,\r\n      employeeCodeForDelete: null,\r\n      active: false,\r\n      formDetailMode: 0,\r\n      isShowDropDown: false,\r\n      count: 0,\r\n      globalTimeout: null,\r\n      // data dùng để phân trang\r\n      totalPages: 0,\r\n      pageSize: 10,\r\n      pageNumberSelected: 1,\r\n      checkTotalEmployee: false,\r\n      checkReplication: false,\r\n      arrayEmployeeId: [],\r\n      isShowDeleteMany: false,\r\n      departments: [\r\n        {\r\n          value: \"\",\r\n          label: \"Chọn phòng ban\",\r\n        },\r\n        {\r\n          value: \"142cb08f-7c31-21fa-8e90-67245e8b283e\",\r\n          label: \"Phòng đào tạo\",\r\n        },\r\n        {\r\n          value: \"17120d02-6ab5-3e43-18cb-66948daf6128\",\r\n          label: \"Phòng nhân sự\",\r\n        },\r\n        {\r\n          value: \"469b3ece-744a-45d5-957d-e8c757976496\",\r\n          label: \"Phòng sản xuất\",\r\n        },\r\n        {\r\n          value: \"4e272fc4-7875-78d6-7d32-6a1673ffca7c\",\r\n          label: \"Phòng kế toán\",\r\n        },\r\n      ],\r\n      bankNames: [\r\n        {\r\n          value: \"\",\r\n          label: \"Chọn ngân hàng\",\r\n        },\r\n        {\r\n          value: \"ACB\",\r\n          label: \"ACB\",\r\n        },\r\n        {\r\n          value: \"AgriBank\",\r\n          label: \"AgriBank\",\r\n        },\r\n        {\r\n          value: \"BIDV\",\r\n          label: \"BIDV\",\r\n        },\r\n        {\r\n          value: \"VPBank\",\r\n          label: \"VPBank\",\r\n        },\r\n      ],\r\n      genders: [\r\n        {\r\n          value: \"\",\r\n          label: \"Chọn giới tính\",\r\n        },\r\n        {\r\n          value: \"1\",\r\n          label: \"Nam\",\r\n        },\r\n        {\r\n          value: \"0\",\r\n          label: \"Nữ\",\r\n        },\r\n        {\r\n          value: \"2\",\r\n          label: \"Khác\",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url(../../style/css/layout/content.css);\r\n@import url(../../style/css/components/combobox.css);\r\n</style>"]},"metadata":{},"sourceType":"module"}