{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  props: [\"employeeCodeForDelete\", \"employeeIdSelected\"],\n\n  data() {\n    return {\n      employees: {},\n      employee: {}\n    };\n  },\n\n  watch: {\n    employeeIdSelected: function (value) {\n      // kiểm tra xem id có tồn tại hay không\n      var me = this;\n\n      if (value) {\n        axios.get(`http://localhost:22454/api/v1/Employees/${me.employeeIdSelected}`).then(function (res) {\n          switch (res.status) {\n            case 200:\n              console.log(\"ok\"); // thực hiện focus vào ô nhập liệu đầu tiên\n\n              document.getElementById(\"EmployeeCode\").focus(); // gán lại data cho employee detail\n\n              me.employee = res.data;\n              console.log(me.employee); // me.employee.DateOfBirth = me.formatDate(\n              //   me.employee.DateOfBirth\n              // );\n              // //gán lại ngày cấp cho employee detail\n              // me.employee.IdentityDate = me.formatDate(\n              //   me.employee.IdentityDate\n              // );\n\n              break;\n\n            case 201:\n              break;\n\n            default:\n              break;\n          }\n        }).catch(function (res) {\n          console.log(res);\n        });\n      } else {\n        me.getNewEmployeeCode();\n      }\n    }\n  },\n  methods: {\n    async btnOnDelete() {\n      //1. validate dữ liệu\n      var arrayErrors = [];\n      arrayErrors.push(`Bạn có muốn xóa Nhân viên &#60;${this.employeeCodeForDelete}&#62; không ?`); //hiển thị thông báo validate không hợp lệ\n\n      let noticeDialog = document.getElementsByClassName(\"d-dialog-box-delete\")[0];\n      let bodyTextNoticeDialog = noticeDialog.querySelector(\".d-dialog-box-delete .d-dialog-body\");\n      bodyTextNoticeDialog.innerHTML = \"\"; //append nội dung thông báo\n\n      arrayErrors.forEach(errorMsg => {\n        var el = document.createElement(\"div\");\n        el.innerHTML = `${errorMsg}`;\n        bodyTextNoticeDialog.append(el);\n      });\n      document.getElementsByClassName(\"d-dialog-box-delete\")[0].style.display = \"block\";\n      document.getElementsByClassName(\"d-dialog-box-delete\")[0].style.display = \"block\"; // ẩn form dropdown\n\n      this.$emit(\"isShowDropDown\"); // document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\n    },\n\n    btnOnReplication() {\n      var me = this; //ẩn form dialogDelete\n\n      document.getElementsByClassName(\"dropdown\")[0].style.display = \"none\"; // hiển thị form detail\n\n      me.$emit(\"isShowDialog\"); // thực hiện lấy mã nhân viên mới\n\n      me.getNewEmployeeCode();\n    },\n\n    btnOnStopUsing() {\n      let noticeDialog = document.getElementsByClassName(\"d-dialog-box\")[0];\n      let bodyTextNoticeDialog = noticeDialog.querySelector(\".d-dialog-body\");\n      bodyTextNoticeDialog.innerHTML = \"Chức năng đang phát triển !\"; // hiển thị form notice\n\n      document.getElementsByClassName(\"d-dialog-box\")[0].style.display = \"block\"; //ẩn form dialogDelete\n\n      document.getElementsByClassName(\"dropdown\")[0].style.display = \"none\";\n    },\n\n    /**\r\n    * Thực hiện lấy mã nhân viên mới\r\n    * Author: HVDUNG (24/06/2022)\r\n    */\n    async getNewEmployeeCode() {\n      try {\n        var me = this; // nếu không có id thì gán lại employee là null\n\n        me.employee = {}; // gọi API lấy mã nhân viên\n\n        await axios.get(\"http://localhost:22454/api/v1/Employees/NewEmployeeCode\").then(function (res) {\n          me.employee.EmployeeCode = res.data; // thực hiện focus vào ô nhập liệu đầu tiên\n\n          document.getElementById(\"EmployeeCode\").focus();\n        }).catch(function (res) {\n          console.log(res);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","props","data","employees","employee","watch","employeeIdSelected","value","me","get","then","res","status","console","log","document","getElementById","focus","catch","getNewEmployeeCode","methods","btnOnDelete","arrayErrors","push","employeeCodeForDelete","noticeDialog","getElementsByClassName","bodyTextNoticeDialog","querySelector","innerHTML","forEach","errorMsg","el","createElement","append","style","display","$emit","btnOnReplication","btnOnStopUsing","EmployeeCode","error"],"sourceRoot":"","sources":["C:\\Users\\hdung\\source\\repos\\web2022_04\\Vue\\amis-ketoan\\src\\components\\page\\DropDownList.vue"],"sourcesContent":["<template>\r\n  <div class=\"dropdown\">\r\n    <div>\r\n      <button @click=\"btnOnReplication\">Nhân bản</button>\r\n    </div>\r\n    <div>\r\n      <button @click=\"btnOnDelete\">Xóa</button>\r\n    </div>\r\n    <div>\r\n      <button @click=\"btnOnStopUsing\">Ngừng sử dụng</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from \"axios\";\r\nexport default {\r\n  props: [\"employeeCodeForDelete\", \"employeeIdSelected\"],\r\n  data() {\r\n    return {\r\n      employees: {},\r\n      employee: {}\r\n    };\r\n  },\r\n  watch:{\r\n     employeeIdSelected: function (value) {\r\n      // kiểm tra xem id có tồn tại hay không\r\n      var me = this;\r\n      if (value) {\r\n        axios\r\n          .get(\r\n            `http://localhost:22454/api/v1/Employees/${me.employeeIdSelected}`\r\n          )\r\n          .then(function (res) {\r\n            switch (res.status) {\r\n              case 200:\r\n                console.log(\"ok\");\r\n                // thực hiện focus vào ô nhập liệu đầu tiên\r\n                document.getElementById(\"EmployeeCode\").focus();\r\n                // gán lại data cho employee detail\r\n                me.employee = res.data;\r\n                console.log(me.employee);\r\n                // me.employee.DateOfBirth = me.formatDate(\r\n                //   me.employee.DateOfBirth\r\n                // );\r\n                // //gán lại ngày cấp cho employee detail\r\n                // me.employee.IdentityDate = me.formatDate(\r\n                //   me.employee.IdentityDate\r\n                // );\r\n                break;\r\n              case 201:\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n          })\r\n          .catch(function (res) {\r\n            console.log(res);\r\n          });\r\n\r\n      } else {\r\n        me.getNewEmployeeCode();\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    async btnOnDelete() {\r\n      //1. validate dữ liệu\r\n      var arrayErrors = [];\r\n      arrayErrors.push(`Bạn có muốn xóa Nhân viên &#60;${this.employeeCodeForDelete}&#62; không ?`);\r\n      //hiển thị thông báo validate không hợp lệ\r\n      let noticeDialog = document.getElementsByClassName(\"d-dialog-box-delete\")[0];\r\n      let bodyTextNoticeDialog = noticeDialog.querySelector(\".d-dialog-box-delete .d-dialog-body\");\r\n      bodyTextNoticeDialog.innerHTML = \"\";\r\n      //append nội dung thông báo\r\n      arrayErrors.forEach((errorMsg) => {\r\n        var el = document.createElement(\"div\");\r\n        el.innerHTML = `${errorMsg}`;\r\n        bodyTextNoticeDialog.append(el);\r\n      });\r\n      document.getElementsByClassName(\"d-dialog-box-delete\")[0].style.display =\r\n        \"block\";\r\n      document.getElementsByClassName(\"d-dialog-box-delete\")[0].style.display =\r\n        \"block\";\r\n      // ẩn form dropdown\r\n      this.$emit(\"isShowDropDown\");\r\n      // document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\r\n    },\r\n\r\n    btnOnReplication() {\r\n      var me = this;\r\n      //ẩn form dialogDelete\r\n      document.getElementsByClassName(\"dropdown\")[0].style.display = \"none\";\r\n      // hiển thị form detail\r\n      me.$emit(\"isShowDialog\");\r\n      // thực hiện lấy mã nhân viên mới\r\n      me.getNewEmployeeCode();\r\n\r\n    },\r\n\r\n    btnOnStopUsing(){\r\n       let noticeDialog = document.getElementsByClassName(\"d-dialog-box\")[0];\r\n      let bodyTextNoticeDialog = noticeDialog.querySelector(\".d-dialog-body\");\r\n      bodyTextNoticeDialog.innerHTML = \"Chức năng đang phát triển !\";\r\n      // hiển thị form notice\r\n      document.getElementsByClassName(\"d-dialog-box\")[0].style.display =\r\n        \"block\";\r\n      //ẩn form dialogDelete\r\n      document.getElementsByClassName(\"dropdown\")[0].style.display = \"none\";\r\n    },\r\n\r\n     /**\r\n     * Thực hiện lấy mã nhân viên mới\r\n     * Author: HVDUNG (24/06/2022)\r\n     */\r\n    async getNewEmployeeCode() {\r\n      try {\r\n        var me = this;\r\n        // nếu không có id thì gán lại employee là null\r\n        me.employee = {};\r\n        // gọi API lấy mã nhân viên\r\n        await axios\r\n          .get(\"http://localhost:22454/api/v1/Employees/NewEmployeeCode\")\r\n          .then(function (res) {\r\n            me.employee.EmployeeCode = res.data;\r\n            // thực hiện focus vào ô nhập liệu đầu tiên\r\n            document.getElementById(\"EmployeeCode\").focus();\r\n          })\r\n          .catch(function (res) {\r\n            console.log(res);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n@import url(\"../../style/css/components/dropdown.css\");\r\n</style>"]},"metadata":{},"sourceType":"module"}