{"ast":null,"code":"import axios from \"axios\";\nimport EmployeeDetail from './EmployeeDetail.vue';\nexport default {\n  name: \"EmployeeList\",\n  components: {\n    EmployeeDetail\n  },\n  watch: {//   showDialog: function(value){\n    //       alert(value);\n    //   },\n    // employees(value) {\n    //   // tận dụng sự thay đổi mỗi khi hàm watch thực hiện ta sữ thực hiện building luôn dữ liệu\n    //   this.employees =value;\n    // }\n  },\n\n  async created() {\n    try {\n      var me = this;\n      await axios.get(\"https://amis.manhnv.net/api/v1/Employees\").then(response => {\n        me.employees = response.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n      me.isLoading = false;\n    } catch (error) {\n      me.isLoading = false;\n      console.log(error);\n    }\n  },\n\n  mounted() {\n    this.formatDate();\n  },\n\n  methods: {\n    /**\r\n     * thực hiện tìm kiếm khi nhấn enter\r\n     * khi tìm kiếm sẽ gọi đến hàm searchOnClick bên dưới\r\n     */\n    onEnter: function () {\n      this.btnSearchOnClick();\n    },\n\n    /**\r\n     * thực hiện show form detail khi click\r\n     */\n    async btnAddOnclick() {\n      // thực hiện focus vào thằng đầu tiên\n      this.employeeSelected = {};\n      this.toggleEmployeeDialog();\n      this.employeeIdSelected = null; // gán lại giá trị cho fromDetailMode\n\n      this.formDetailMode = 1;\n    },\n\n    /**\r\n     * \r\n     * @param {*} employee là đối tượng emplye Được lấy ở v-for\r\n     * building ra data của employee\r\n     */\n    trOnDoubleClick(employee) {\n      this.toggleEmployeeDialog();\n      this.employeeSelected = employee;\n      this.employeeIdSelected = employee.EmployeeId;\n    },\n\n    toggleEmployeeDialog() {\n      this.isShowDialog = !this.isShowDialog;\n    },\n\n    async btnRefreshOnClick() {\n      try {\n        var me = this;\n        me.isLoading = true;\n        me.employees = {};\n        await axios.get(`https://amis.manhnv.net/api/v1/Employees`).then(response => {\n          me.employees = response.data;\n          me.isLoading = false;\n        }).catch(function (error) {\n          console.log(error);\n          me.isLoading = false;\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async btnSearchOnClick() {\n      try {\n        debugger;\n        var me = this;\n        me.isLoading = true;\n        me.employees = {};\n        await axios.get(`https://amis.manhnv.net/api/v1/Employees/filter?employeeFilter=${this.textSearch}`).then(response => {\n          // console.log(response);\n          me.employees = response.data.Data;\n          console.log(me.employees);\n          me.isLoading = false;\n        }).catch(function (error) {\n          console.log(error);\n          me.isLoading = false;\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    formatDate(dateOfBirth) {\n      if (dateOfBirth) {\n        // chuyển từ dạng string sang dạng Date\n        dateOfBirth = new Date(dateOfBirth); // lấy ngày\n\n        let date = dateOfBirth.getDate(); // lấy tháng\n\n        let month = dateOfBirth.getMonth() + 1; // lấy năm\n\n        let year = dateOfBirth.getFullYear(); // thêm số 0 vào trước nếu chỉ có một kí tự\n\n        date = date < 10 ? `0${date}` : date;\n        month = month < 10 ? `0${month}` : month;\n        return `${month}/${date}/${year}`;\n      } else {\n        return \"\";\n      }\n    }\n\n  },\n\n  data() {\n    return {\n      textSearch: \"\",\n      employees: {},\n      isShowDialog: false,\n      isLoading: true,\n      //dùng để lấy data để building lên form chi tiết \n      employeeSelected: null,\n      // employeeData: {},\n      employeeIdSelected: null,\n      active: false,\n      formDetailMode: 0\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["axios","EmployeeDetail","name","components","watch","created","me","get","then","response","employees","data","catch","error","console","log","isLoading","mounted","formatDate","methods","onEnter","btnSearchOnClick","btnAddOnclick","employeeSelected","toggleEmployeeDialog","employeeIdSelected","formDetailMode","trOnDoubleClick","employee","EmployeeId","isShowDialog","btnRefreshOnClick","textSearch","Data","dateOfBirth","Date","date","getDate","month","getMonth","year","getFullYear","active"],"sourceRoot":"","sources":["C:\\Users\\hdung\\source\\repos\\web2022_04\\Vue\\amis-ketoan\\src\\components\\page\\EmployeeList.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-content\">\r\n    <div class=\"d-page-header\">\r\n      <div class=\"d-page-title\">Nhân viên</div>\r\n      <button class=\"d-btn d-btn\" id=\"d-btn-add-employee\" @click=\"btnAddOnclick\">\r\n        Thêm mới nhân viên\r\n      </button>\r\n    </div>\r\n    <div class=\"d-page-toolbar\">\r\n      <div class=\"d-toolbar-left\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"d-input\"\r\n          v-on:keyup.enter=\"onEnter\"\r\n          v-model=\"this.textSearch\"\r\n          placeholder=\"Tìm kiếm theo mã, tên nhân viên\"\r\n        />\r\n        <div class=\"icon_search\" @click=\"btnSearchOnClick\"></div>\r\n      </div>\r\n      <div class=\"icon_refresh\" @click=\"btnRefreshOnClick\"></div>\r\n    </div>\r\n\r\n    <div class=\"d-grid\">\r\n      <div class=\"d-grid-table\">\r\n        <table class=\"d-table\">\r\n          <thead>\r\n            <tr>\r\n              <!-- <th class=\"text-align-left ok\">STT</th> -->\r\n              <!-- <th class=\"text-align-center\"><input type=\"checkbox\"></th> -->\r\n              <th class=\"text-align-center ok\" propname=\"checkbox\">\r\n                <input type=\"checkbox\" />\r\n              </th>\r\n              <th class=\"text-align-left ok\" propname=\"EmployeeCode\">\r\n                MÃ NHÂN VIÊN\r\n              </th>\r\n              <th class=\"text-align-left ok\" propname=\"EmployeeName\">\r\n                TÊN NHÂN VIÊN\r\n              </th>\r\n              <th class=\"text-align-left ok\" propname=\"GenderName\">\r\n                GIỚI TÍNH\r\n              </th>\r\n              <th\r\n                class=\"text-align-center ok\"\r\n                propname=\"DateOfBirth\"\r\n                format=\"Date\"\r\n              >\r\n                NGÀY SINH\r\n              </th>\r\n              <th class=\"text-align-left ok\" propname=\"IdentityNumber\" >\r\n                SỐ CMND\r\n              </th>\r\n              <th class=\"text-align-left ok\" propname=\"EmployeePosition\" style=\"width: 150px;\">\r\n                CHỨC DANH\r\n              </th>\r\n              <th class=\"text-align-left ok\" propname=\"DepartmentName\" style=\"width: 250px !important;\">\r\n                TÊN ĐƠN VỊ\r\n              </th>\r\n              <th class=\"text-align-left ok\" propname=\"BankAccountNumber\" style=\"width: 250px;\">\r\n                SỐ TÀI KHOẢN\r\n              </th>\r\n              <th class=\"text-align-left ok\" propname=\"BankName\" style=\"width: 250px;\">\r\n                TÊN NGÂN HÀNG\r\n              </th>\r\n              <th class=\"text-align-left ok\" propname=\"BankBranchName\" style=\"width: 250px;\">\r\n                CHI NHÁNH TK NGÂN HÀNG\r\n              </th>\r\n              <th class=\"text-align-center ok\" propname=\"function\">\r\n                CHỨC NĂNG\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"employee in employees\" :key=\"employee.EmployeeId\" @dblclick=\"trOnDoubleClick(employee)\">\r\n              <td id=\"d-td\" class=\"text-align-center\"><input type=\"checkbox\" /></td>\r\n              <td class=\"text-align-left\">{{ employee.EmployeeCode }}</td>\r\n              <td class=\"text-align-left\">{{ employee.EmployeeName }}</td>\r\n              <td class=\"text-align-left\">{{ employee.GenderName }}</td>\r\n              <td class=\"text-align-left\">\r\n                {{ formatDate(employee.DateOfBirth) }}\r\n              </td>\r\n              <td class=\"text-align-left\">{{ employee.IdentityNumber }}</td>\r\n              <td class=\"text-align-left\">{{ employee.EmployeePosition }}</td>\r\n              <td class=\"text-align-left\">{{ employee.DepartmentName }}</td>\r\n              <td class=\"text-align-left\">{{ employee.BankAccountNumber }}</td>\r\n              <td class=\"text-align-left\">{{ employee.BankName }}</td>\r\n              <td class=\"text-align-left\">{{ employee.BankBranchName }}</td>\r\n              <td class=\"text-align-center\">\r\n                <div class=\"d-function\">\r\n                  <div class=\"d-text\">Sửa</div>\r\n                  <div class=\"icon_dropdown\"></div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"d-paging\">\r\n        <div class=\"d-paging-left\">Tổng : <b>10</b> bản ghi</div>\r\n        <div class=\"d-paging-center\"></div>\r\n        <div class=\"d-paging-right\">\r\n          <div class=\"d-row\">\r\n            <select name=\"\" class=\"d-combobox\">\r\n              <option value=\"0\">20 bản ghi trên 1 trang</option>\r\n              <option value=\"1\">20 bản ghi trên 1 trang</option>\r\n              <option value=\"2\">20 bản ghi trên 1 trang</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"d-row\">\r\n            <button class=\"d-before\">Trước</button>\r\n            <div class=\"d-group-number-page\">\r\n              <button class=\"btn-page-index btn-page-selected\">1</button>\r\n              <button class=\"btn-page-index\">2</button>\r\n              <button class=\"btn-page-index\">3</button>\r\n              <button class=\"btn-page-index\">...</button>\r\n              <button class=\"btn-page-index\">52</button>\r\n            </div>\r\n            <button class=\"d-after\">Sau</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- showDialog là props của file detail, giá trị nhận là isShowDialog của file EmployeeList -->\r\n    <!-- @isShowDialog là cách ta định nghĩa một phương thức để từ bên detail có thể gọi sang bên list thông qua $emit -->\r\n    <!-- \"employee\" là cách ta truyền trực tiếp từ cliend chứ không thông qua server-->\r\n    <!-- :employeeSelected=\"employeeS\"elected\" -->\r\n <EmployeeDetail  v-show=\"isShowDialog\" @isShowDialog=\"toggleEmployeeDialog\" :employeeIdSelected=\"employeeIdSelected\" \r\n :employeeSelected=\"employeeSelected\" :formMode=\"formDetailMode\"></EmployeeDetail>\r\n <!-- <EmployeeDetail v-show=\"isShowDialog\" :employeeIdSelected=\"employeeIdSelected\"  :showDialog=\"isShowDialog\" @isShowDialog=\"showEmployeeDialog\"></EmployeeDetail> -->\r\n \r\n  <div class=\"loading\" v-if=\"isLoading\">\r\n    <div class=\"loading-icon\"></div>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport EmployeeDetail from './EmployeeDetail.vue';\r\nexport default {\r\n  name: \"EmployeeList\",\r\n  components: {\r\n    EmployeeDetail\r\n},\r\n watch: {\r\n    //   showDialog: function(value){\r\n    //       alert(value);\r\n    //   },\r\n    // employees(value) {\r\n    //   // tận dụng sự thay đổi mỗi khi hàm watch thực hiện ta sữ thực hiện building luôn dữ liệu\r\n    //   this.employees =value;\r\n    // }\r\n  },\r\n  async created() {\r\n    try {\r\n      var me = this;\r\n      await axios.get(\"https://amis.manhnv.net/api/v1/Employees\").then((response) => {\r\n        me.employees = response.data;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n      me.isLoading=false;\r\n    } catch (error) {\r\n      me.isLoading=false;\r\n      console.log(error);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.formatDate();\r\n  },\r\n  methods: {\r\n    /**\r\n     * thực hiện tìm kiếm khi nhấn enter\r\n     * khi tìm kiếm sẽ gọi đến hàm searchOnClick bên dưới\r\n     */\r\n    onEnter: function() {\r\n      this.btnSearchOnClick();\r\n    },\r\n    /**\r\n     * thực hiện show form detail khi click\r\n     */\r\n   async btnAddOnclick(){\r\n     // thực hiện focus vào thằng đầu tiên\r\n      this.employeeSelected={};\r\n      this.toggleEmployeeDialog();\r\n    this.employeeIdSelected = null;\r\n    // gán lại giá trị cho fromDetailMode\r\n    this.formDetailMode = 1;\r\n\r\n    },\r\n    /**\r\n     * \r\n     * @param {*} employee là đối tượng emplye Được lấy ở v-for\r\n     * building ra data của employee\r\n     */\r\n    trOnDoubleClick(employee){\r\n    this.toggleEmployeeDialog();\r\n    this.employeeSelected=employee;\r\n    this.employeeIdSelected = employee.EmployeeId;\r\n    },\r\n    toggleEmployeeDialog(){\r\n        this.isShowDialog = !this.isShowDialog;\r\n    },\r\n   async btnRefreshOnClick(){\r\n    try {\r\n      var me = this;\r\n      me.isLoading=true;\r\n      me.employees={};\r\n      await axios.get(`https://amis.manhnv.net/api/v1/Employees`).then((response) => {\r\n         me.employees =response.data;\r\n        me.isLoading=false;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n          me.isLoading=false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    },\r\n\r\n   async btnSearchOnClick(){\r\n    try {\r\n      debugger\r\n      var me = this;\r\n      me.isLoading=true;\r\n      me.employees={};\r\n      await axios.get(`https://amis.manhnv.net/api/v1/Employees/filter?employeeFilter=${this.textSearch}`).then((response) => {\r\n        // console.log(response);\r\n         me.employees =response.data.Data;\r\n      console.log(me.employees);\r\n        me.isLoading=false;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n          me.isLoading=false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    },\r\n\r\n    formatDate(dateOfBirth) {\r\n      if (dateOfBirth) {\r\n        // chuyển từ dạng string sang dạng Date\r\n        dateOfBirth = new Date(dateOfBirth);\r\n        // lấy ngày\r\n        let date = dateOfBirth.getDate();\r\n        // lấy tháng\r\n        let month = dateOfBirth.getMonth() + 1;\r\n        // lấy năm\r\n        let year = dateOfBirth.getFullYear();\r\n        // thêm số 0 vào trước nếu chỉ có một kí tự\r\n        date = date < 10 ? `0${date}` : date;\r\n        month = month < 10 ? `0${month}` : month;\r\n        return `${month}/${date}/${year}`;\r\n      } else {\r\n        return \"\";\r\n      }\r\n    }\r\n\r\n\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      textSearch:\"\",\r\n      employees: {},\r\n      isShowDialog: false,\r\n      isLoading: true,\r\n      //dùng để lấy data để building lên form chi tiết \r\n      employeeSelected: null,\r\n      // employeeData: {},\r\n      employeeIdSelected:null,\r\n       active: false,\r\n       formDetailMode: 0\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url(../../style/css/layout/content.css);\r\n</style>"]},"metadata":{},"sourceType":"module"}