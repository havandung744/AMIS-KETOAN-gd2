{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  /**\r\n   * employeeSelected để nhận biết sự thay đổi khi click vào và update lại dữ liệu runtime\r\n   * employeeIdSelected để nhận về id của đối tượng được click\r\n   * formMode để nhận biết là thêm mới hay update\r\n   */\n  props: [\"employeeSelected\", \"employeeIdSelected\", \"formMode\"],\n\n  data() {\n    return {\n      employee: {},\n      dateOfBirth: null\n    };\n  },\n\n  /**\r\n   * beforeupdate dữ liệu thay đổi runtime (dữ liệu được quét liên tục khi có sự thay đổi)\r\n   * nếu không tương tác với các thành phần được gọi trong beforeupdate thì nó sẽ không được thực hiện\r\n   * => là yếu điểm của nó  (đây không phải là dữ liệu tối ưu)\r\n   */\n  beforeUpdate() {// có thể áp dụng thử để làm chức năng tìm kiếm \n  },\n\n  // giống như camare theo dõi sự thay đổi của các phương thức chứa trong nó\n  watch: {\n    //   showDialog: function(value){\n    //       alert(value);\n    //   },\n\n    /**\r\n     * thực hiện lấy dữ liệu từ cliend và trả về cho form chi tiết => dữ liệu được binding trực tiếp luôn khi sửa\r\n     *  (không lấy đc dữ liệu mới nhất)\r\n     * không cần thực hiện loading lại dữ liệu\r\n     * @param {object} value là object nhân được khi click\r\n     */\n    // employeeSelected: function (value) {\n    //   // tận dụng sự thay đổi mỗi khi hàm watch thực hiện ta sữ thực hiện building luôn dữ liệu\n    //   //gán dữ liệu lại cho employee bằng chính employeeselected được chọn\n    //   this.employee = value;\n    //   // forcus vào ô nhập liệu đầu tiên\n    //   document.getElementById(\"EmployeeCode\").focus();\n    // },\n\n    /**\r\n     * thực hiện lấy dữ liệu trực tiếp từ server về thông qua api => dữ liệu luôn là mới nhất(mất thời gian chờ đợi)\r\n     * phải thực hiện loading lại dữ liệu nếu thêm mới, update, sửa thành công\r\n     */\n    employeeIdSelected: function (value) {\n      // kiểm tra xem id có tồn tại hay không\n      var me = this;\n\n      if (value) {\n        axios.get(`https://amis.manhnv.net/api/v1/Employees/${this.employeeIdSelected}`).then(function (res) {\n          switch (res.status) {\n            case 200:\n              // thực hiện focus vào ô nhập liệu đầu tiên\n              document.getElementById(\"EmployeeCode\").focus(); // gán lại data cho employee\n\n              me.employee = res.data;\n              me.dateOfBirth = me.formatDate(me.employee.DateOfBirth);\n              break;\n\n            case 201:\n              break;\n\n            default:\n              break;\n          } // alert(me.dateOfBirth);\n\n        }).catch(function (res) {\n          console.log(res);\n        });\n      } else {\n        // nếu không có id thì gán lại employee là null\n        me.employee = {}; // gán lại dateOfBirth là null\n\n        me.dateOfBirth = null; // gọi API lấy mã nhân viên\n\n        axios.get(\"https://amis.manhnv.net/api/v1/Employees/NewEmployeeCode\").then(function (res) {\n          me.employee.EmployeeCode = res.data;\n          console.log(res.data);\n        }).catch(function (res) {\n          console.log(res);\n        });\n      }\n    }\n  },\n  methods: {\n    /**\r\n     * khi kết thúc sẽ thực hiện focus vào ô nhập liệu đầu tiên\r\n     * Author: HVDUNG (03/06/2022)\r\n     */\n    focusInputFirst() {\n      document.getElementById(\"EmployeeCode\").focus();\n    },\n\n    /**\r\n    * Thực hiện format lại ngày tháng để có thể hiển thị được trên form detail\r\n    * Author: HVDUNG (03/06/2022)\r\n    */\n    formatDate(dateOfBirth) {\n      if (dateOfBirth) {\n        // chuyển từ dạng string sang dạng Date\n        dateOfBirth = new Date(dateOfBirth); // lấy ngày\n\n        let date = dateOfBirth.getDate(); // lấy tháng\n\n        let month = dateOfBirth.getMonth() + 1; // lấy năm\n\n        let year = dateOfBirth.getFullYear(); // thêm số 0 vào trước nếu chỉ có một kí tự\n\n        date = date < 10 ? `0${date}` : date;\n        month = month < 10 ? `0${month}` : month;\n        return `${year}-${month}-${date}`;\n      } else {\n        return \"\";\n      }\n    },\n\n    /**\r\n     * thực hiện validate xem dữ liệu có bị trống hay không\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\n    validateCheckInput(event) {\n      //theo cách dùng thuần\n      //1. lấy ra giá trị input nhập vào\n      let value = event.currentTarget.value; //  2. kiểm tra value có rỗng hay không\n\n      if (!value) {\n        // thêm class vào trong input\n        event.currentTarget.classList.add(\"d-input-error\"); // thêm câu cảnh báo khi hover\n\n        event.currentTarget.setAttribute(\"title\", \"thông tin không được để trống\");\n      } else {\n        event.currentTarget.classList.remove(\"d-input-error\");\n        event.currentTarget.setAttribute(\"title\", \"\");\n      }\n    },\n\n    async created() {\n      try {\n        var me = this;\n        await axios.get(\"https://amis.manhnv.net/api/v1/Employees\").then(response => {\n          me.employees = response.data;\n        }).catch(function (error) {\n          console.log(error);\n        });\n        this.isLoading = false;\n      } catch (error) {\n        this.isLoading = false;\n        console.log(error);\n      }\n    },\n\n    /**\r\n     * thực hiện lưu khi người dùng click nứt lưu\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\n    btnSaveOnClick() {\n      var me = this; //1. validate dữ liệu\n\n      if (!me.employee.EmployeeCode) {\n        this.$emit(\"isShowDialog\");\n      } //2. build object thông tin nhân viên\n      //3. gọi api thực hiện thêm mới\n\n\n      if (me.formMode == 1) {\n        axios.post(\"https://amis.manhnv.net/api/v1/Employees\", me.employee).then(function (res) {\n          console.log(res); // dùng tạm thời => phải dùng toast msg\n\n          alert(\"thêm mới thành công!\");\n        }).catch(function (res) {\n          let error = res.response.status;\n\n          switch (error) {\n            case 400:\n            case 500:\n              // hiển thị thông báo lỗi khi thêm mới\n              alert(res.response.data[\"userMsg\"]);\n              break;\n\n            default:\n              break;\n          }\n        });\n      } else {\n        axios.put(`https://amis.manhnv.net/api/v1/Employees/${me.employeeIdSelected}`, me.employee).then(function (res) {\n          console.log(res);\n        }).catch(function (res) {\n          console.log(res);\n        });\n      } //4. nếu thêm mới thành công thì hiện toast msg thông báo thành công\n      //5. nếu có lỗi validate hoặc lỗi từ backend thì hiển thị thông báo tương ứng\n\n    },\n\n    btnCloseOnClick() {\n      this.$emit(\"isShowDialog\");\n    }\n    /**\r\n     * \r\n     * @param {data} date thực hiện format lại ngày tháng để hiển thị lên form\r\n     * Author: HVDUNG (03/06/2022)\r\n     */\n\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","props","data","employee","dateOfBirth","beforeUpdate","watch","employeeIdSelected","value","me","get","then","res","status","document","getElementById","focus","formatDate","DateOfBirth","catch","console","log","EmployeeCode","methods","focusInputFirst","Date","date","getDate","month","getMonth","year","getFullYear","validateCheckInput","event","currentTarget","classList","add","setAttribute","remove","created","response","employees","error","isLoading","btnSaveOnClick","$emit","formMode","post","alert","put","btnCloseOnClick"],"sourceRoot":"","sources":["C:\\Users\\hdung\\source\\repos\\web2022_04\\Vue\\amis-ketoan\\src\\components\\page\\EmployeeDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-employee-box\">\r\n    <div class=\"d-employee-box-info\">\r\n      <div class=\"header\">\r\n        <div class=\"header-text\">THÔNG TIN NHÂN VIÊN</div>\r\n        <div class=\"header-content\">\r\n          <div class=\"header-checkbox\">\r\n            <input type=\"checkbox\" style=\"width: 18px; height: 18px\" />Là khách\r\n            hàng\r\n          </div>\r\n          <div class=\"header-checkbox\">\r\n            <input type=\"checkbox\" style=\"width: 18px; height: 18px\" />Là nhà\r\n            cung cấp\r\n          </div>\r\n        </div>\r\n        <div class=\"icon_close header-close\" @click=\"btnCloseOnClick\"></div>\r\n      </div>\r\n      <div class=\"content\">\r\n        <div class=\"content-info\">\r\n          <div class=\"content-info-left\">\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\"\r\n                  >Mã nhân viên<span style=\"color: red\">*</span></label\r\n                ><br />\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"employee.EmployeeCode\"\r\n                  class=\"d-input\"\r\n                  id=\"EmployeeCode\"\r\n                  @blur=\"validateCheckInput\"\r\n                  tabindex=\"1\"\r\n                  style=\"width: 150px\"\r\n                />\r\n              </div>\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Họ tên<span style=\"color: red\">*</span></label\r\n                ><br />\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"employee.EmployeeName\"\r\n                  class=\"d-input\"\r\n                  id=\"EmployeeName\"\r\n                    @blur=\"validateCheckInput\"\r\n                  tabindex=\"2\"\r\n                  style=\"width: 235px\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">đơn vị</label><br />\r\n                <select tabindex=\"7\" v-model=\"employee.DepartmentId\" class=\"cbxDepartment\">\r\n                  <option value=\"142cb08f-7c31-21fa-8e90-67245e8b283e\">phòng nhân sự</option>\r\n                  <option value=\"17120d02-6ab5-3e43-18cb-66948daf6128\">phòng tuyển sinh</option>\r\n                  <option value=\"469b3ece-744a-45d5-957d-e8c757976496\">phòng sản xuất</option>\r\n                  <option value=\"4e272fc4-7875-78d6-7d32-6a1673ffca7c\">phòng đào tạo</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Chức danh</label><br />\r\n                <input\r\n                  type=\"input\"\r\n                  class=\"d-input\"\r\n                  id=\"DateOfBirth\"\r\n                  v-model=\"employee.EmployeePosition\"\r\n                  propname=\"DateOfBirth\"\r\n                  tabindex=\"10\"\r\n                  style=\"width: 391px\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"content-info-right\">\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Ngày sinh</label><br/>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"date_timepicker_end\"\r\n                  v-model=\"dateOfBirth\"\r\n                  class=\"d-input\"\r\n                  propname=\"EmployeeCode\"\r\n                  tabindex=\"3\"\r\n                  style=\"width: 161px\"\r\n                />\r\n              </div>\r\n              <div class=\"info-input\">\r\n                \r\n                  <label for=\"\">Giới tính</label><br />\r\n                  <input name=\"gender\" type=\"radio\" value=\"1\" tabindex=\"4\" v-model=\"employee.Gender\"/>\r\n                  <label for=\"\" style=\"margin-right: 8px\">Nam</label>\r\n                  <input name=\"gender\" type=\"radio\" value=\"0\" tabindex=\"5\" v-model=\"employee.Gender\"/>\r\n                  <label for=\"\" style=\"margin-right: 8px\">Nữ</label>\r\n                  <input name=\"gender\" type=\"radio\" value=\"2\" tabindex=\"6\" v-model=\"employee.Gender\"/>\r\n                  <label for=\"\">Khác</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Số CMND</label><br />\r\n                <input\r\n                  type=\"input\"\r\n                  v-model=\"employee.IdentityNumber\"\r\n                  class=\"d-input\"\r\n                  id=\"DateOfBirth\"\r\n                  date=\"\"\r\n                  propname=\"DateOfBirth\"\r\n                  tabindex=\"8\"\r\n                  style=\"width: 245px\"\r\n                />\r\n              </div>\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Ngày cấp</label><br />\r\n                <input\r\n                  type=\"date\"\r\n                  v-model=\"employee.IdentityDate\"\r\n                  class=\"d-input\"\r\n                  id=\"DateOfBirth\"\r\n                  date=\"\"\r\n                  propname=\"DateOfBirth\"\r\n                  tabindex=\"9\"\r\n                  style=\"width: 140px\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Nơi cấp</label><br />\r\n                <input\r\n                  type=\"input\"\r\n                  v-model=\"employee.IdentityPlace\"\r\n                  class=\"d-input\"\r\n                  id=\"DateOfBirth\"\r\n                  date=\"\"\r\n                  propname=\"DateOfBirth\"\r\n                    tabindex=\"11\"\r\n                  style=\"width: 391px\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"info-input-tr\" style=\"margin-top: 40px\">\r\n          <div class=\"info-input\">\r\n            <label for=\"\">Địa chỉ</label>\r\n            <input\r\n              type=\"input\"\r\n              class=\"d-input\"\r\n              id=\"DateOfBirth\"\r\n              v-model=\"employee.Address\"\r\n              propname=\"DateOfBirth\"\r\n              tabindex=\"12\"\r\n              style=\"width: 812px\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"content-info-bottom\">\r\n          <div class=\"info-input-tr\">\r\n            <div class=\"info-input\">\r\n              <label for=\"\">ĐT di động</label><br />\r\n              <input\r\n                type=\"text\"\r\n                v-model=\"employee.PhoneNumber\"\r\n                class=\"d-input\"\r\n                id=\"EmployeeCode\"\r\n                propname=\"EmployeeCode\"\r\n                tabindex=\"13\"\r\n                style=\"width: 150px\"\r\n              />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">ĐT cố định</label><br />\r\n              <input\r\n                type=\"text\"\r\n                class=\"d-input\"\r\n                id=\"EmployeeName\"\r\n                v-model=\"employee.TelephoneNumber\"\r\n                propname=\"EmployeeName\"\r\n                tabindex=\"14\"\r\n                style=\"width: 235px\"\r\n              />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Email</label><br />\r\n              <input\r\n                type=\"text\"\r\n                v-model=\"employee.Email\"\r\n                class=\"d-input\"\r\n                id=\"EmployeeName\"\r\n                propname=\"EmployeeName\"\r\n                tabindex=\"15\"\r\n                style=\"width: 235px\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"info-input-tr\">\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Tài khoản ngân hàng</label><br />\r\n              <input\r\n                type=\"text\"\r\n                class=\"d-input\"\r\n                id=\"EmployeeCode\"\r\n                v-model=\"employee.BankAccountNumber\"\r\n                propname=\"EmployeeCode\"\r\n                tabindex=\"16\"\r\n                style=\"width: 150px\"\r\n              />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Tên ngân hàng</label><br />\r\n              <input\r\n                type=\"text\"\r\n                class=\"d-input\"\r\n                id=\"EmployeeName\"\r\n                v-model=\"employee.BankName\"\r\n                propname=\"EmployeeName\"\r\n                tabindex=\"17\"\r\n                style=\"width: 235px\"\r\n              />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Chi nhánh</label><br />\r\n              <input\r\n                type=\"text\"\r\n                class=\"d-input\"\r\n                id=\"EmployeeName\"\r\n                v-model=\"employee.BankBranchName\"\r\n                propname=\"EmployeeName\"\r\n                tabindex=\"18\"\r\n                style=\"width: 235px\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"footer\">\r\n          <div class=\"footer-line\"></div>\r\n          <div class=\"footer-button\">\r\n\r\n            <button\r\n              class=\"d-btn d-btn-cancel d-btn-footer-left\"\r\n              id=\"d-btn-close\"\r\n              tabindex=\"21\"\r\n              @blur=\"focusInputFirst\"\r\n            >\r\n              Hủy\r\n            </button>\r\n            <button\r\n              class=\"d-btn d-btn-save\"\r\n              id=\"d-btn-save\"\r\n              tabindex=\"20\"\r\n              @click=\"btnSaveOnClick\"\r\n            >\r\n              Cất\r\n            </button>\r\n            <button\r\n              class=\"d-btn d-btn-save-add\"\r\n              id=\"d-btn-save-add\"\r\n              tabindex=\"19\"\r\n            >\r\n              Cất và Thêm\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  /**\r\n   * employeeSelected để nhận biết sự thay đổi khi click vào và update lại dữ liệu runtime\r\n   * employeeIdSelected để nhận về id của đối tượng được click\r\n   * formMode để nhận biết là thêm mới hay update\r\n   */\r\n  props: [\"employeeSelected\", \"employeeIdSelected\", \"formMode\"],\r\n  data() {\r\n    return {\r\n      employee: {},\r\n      dateOfBirth: null\r\n    };\r\n  },\r\n\r\n  /**\r\n   * beforeupdate dữ liệu thay đổi runtime (dữ liệu được quét liên tục khi có sự thay đổi)\r\n   * nếu không tương tác với các thành phần được gọi trong beforeupdate thì nó sẽ không được thực hiện\r\n   * => là yếu điểm của nó  (đây không phải là dữ liệu tối ưu)\r\n   */\r\n  beforeUpdate() {\r\n    // có thể áp dụng thử để làm chức năng tìm kiếm \r\n  },\r\n \r\n  // giống như camare theo dõi sự thay đổi của các phương thức chứa trong nó\r\n  watch: {\r\n    //   showDialog: function(value){\r\n    //       alert(value);\r\n    //   },\r\n    /**\r\n     * thực hiện lấy dữ liệu từ cliend và trả về cho form chi tiết => dữ liệu được binding trực tiếp luôn khi sửa\r\n     *  (không lấy đc dữ liệu mới nhất)\r\n     * không cần thực hiện loading lại dữ liệu\r\n     * @param {object} value là object nhân được khi click\r\n     */\r\n    // employeeSelected: function (value) {\r\n    //   // tận dụng sự thay đổi mỗi khi hàm watch thực hiện ta sữ thực hiện building luôn dữ liệu\r\n    //   //gán dữ liệu lại cho employee bằng chính employeeselected được chọn\r\n    //   this.employee = value;\r\n    //   // forcus vào ô nhập liệu đầu tiên\r\n    //   document.getElementById(\"EmployeeCode\").focus();\r\n    // },\r\n    /**\r\n     * thực hiện lấy dữ liệu trực tiếp từ server về thông qua api => dữ liệu luôn là mới nhất(mất thời gian chờ đợi)\r\n     * phải thực hiện loading lại dữ liệu nếu thêm mới, update, sửa thành công\r\n     */\r\n    employeeIdSelected: function (value) {\r\n      // kiểm tra xem id có tồn tại hay không\r\n      var me = this;\r\n      if (value) {\r\n        axios\r\n          .get(\r\n            `https://amis.manhnv.net/api/v1/Employees/${this.employeeIdSelected}`\r\n          )\r\n          .then(function (res) {\r\n            switch (res.status) {\r\n              case 200:\r\n                // thực hiện focus vào ô nhập liệu đầu tiên\r\n                document.getElementById(\"EmployeeCode\").focus();\r\n                // gán lại data cho employee\r\n                me.employee = res.data;\r\n                me.dateOfBirth = me.formatDate(me.employee.DateOfBirth);\r\n                break;\r\n              case 201:\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            // alert(me.dateOfBirth);\r\n          })\r\n          .catch(function (res) {\r\n            console.log(res);\r\n          });\r\n      } else {\r\n        // nếu không có id thì gán lại employee là null\r\n        me.employee = {};\r\n        // gán lại dateOfBirth là null\r\n        me.dateOfBirth = null;\r\n        // gọi API lấy mã nhân viên\r\n        axios\r\n          .get(\"https://amis.manhnv.net/api/v1/Employees/NewEmployeeCode\")\r\n          .then(function (res) {\r\n            me.employee.EmployeeCode = res.data;\r\n            console.log(res.data);\r\n          })\r\n          .catch(function (res) {\r\n            console.log(res);\r\n          });\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    /**\r\n     * khi kết thúc sẽ thực hiện focus vào ô nhập liệu đầu tiên\r\n     * Author: HVDUNG (03/06/2022)\r\n     */\r\n    focusInputFirst(){\r\n      document.getElementById(\"EmployeeCode\").focus();\r\n    },\r\n      /**\r\n     * Thực hiện format lại ngày tháng để có thể hiển thị được trên form detail\r\n     * Author: HVDUNG (03/06/2022)\r\n     */\r\n   formatDate(dateOfBirth) {\r\n      if (dateOfBirth) {\r\n        // chuyển từ dạng string sang dạng Date\r\n        dateOfBirth = new Date(dateOfBirth);\r\n        // lấy ngày\r\n        let date = dateOfBirth.getDate();\r\n        // lấy tháng\r\n        let month = dateOfBirth.getMonth() + 1;\r\n        // lấy năm\r\n        let year = dateOfBirth.getFullYear();\r\n        // thêm số 0 vào trước nếu chỉ có một kí tự\r\n        date = date < 10 ? `0${date}` : date;\r\n        month = month < 10 ? `0${month}` : month;\r\n        return `${year}-${month}-${date}`;\r\n      } else {\r\n        return \"\";\r\n      }\r\n    },\r\n    /**\r\n     * thực hiện validate xem dữ liệu có bị trống hay không\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\r\n    validateCheckInput(event) {\r\n      //theo cách dùng thuần\r\n      //1. lấy ra giá trị input nhập vào\r\n      let value = event.currentTarget.value;\r\n      //  2. kiểm tra value có rỗng hay không\r\n      if (!value) {\r\n        // thêm class vào trong input\r\n        event.currentTarget.classList.add(\"d-input-error\");\r\n        // thêm câu cảnh báo khi hover\r\n        event.currentTarget.setAttribute(\r\n          \"title\",\r\n          \"thông tin không được để trống\"\r\n        );\r\n      }else{\r\n            event.currentTarget.classList.remove(\"d-input-error\");\r\n             event.currentTarget.setAttribute(\r\n          \"title\",\r\n          \"\"\r\n        );\r\n      }\r\n    },\r\n\r\n    async created() {\r\n      try {\r\n        var me = this;\r\n        await axios\r\n          .get(\"https://amis.manhnv.net/api/v1/Employees\")\r\n          .then((response) => {\r\n            me.employees = response.data;\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n\r\n        this.isLoading = false;\r\n      } catch (error) {\r\n        this.isLoading = false;\r\n        console.log(error);\r\n      }\r\n    },\r\n    /**\r\n     * thực hiện lưu khi người dùng click nứt lưu\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\r\n    btnSaveOnClick() {\r\n      var me = this;\r\n      //1. validate dữ liệu\r\n      if(!me.employee.EmployeeCode){\r\n          this.$emit(\"isShowDialog\");\r\n      }\r\n      //2. build object thông tin nhân viên\r\n\r\n      //3. gọi api thực hiện thêm mới\r\n      if (me.formMode == 1) {\r\n        axios\r\n          .post(\"https://amis.manhnv.net/api/v1/Employees\", me.employee)\r\n          .then(function (res) {\r\n            console.log(res);\r\n            // dùng tạm thời => phải dùng toast msg\r\n            alert(\"thêm mới thành công!\");\r\n          })\r\n          .catch(function (res) {\r\n            let error = res.response.status;\r\n            switch (error) {\r\n              case 400:\r\n              case 500:\r\n                // hiển thị thông báo lỗi khi thêm mới\r\n                alert(res.response.data[\"userMsg\"]);\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .put(\r\n            `https://amis.manhnv.net/api/v1/Employees/${me.employeeIdSelected}`,\r\n            me.employee\r\n          )\r\n          .then(function (res) {\r\n            console.log(res);\r\n          })\r\n          .catch(function (res) {\r\n            console.log(res);\r\n          });\r\n      }\r\n\r\n      //4. nếu thêm mới thành công thì hiện toast msg thông báo thành công\r\n\r\n      //5. nếu có lỗi validate hoặc lỗi từ backend thì hiển thị thông báo tương ứng\r\n    },\r\n\r\n    btnCloseOnClick() {\r\n      this.$emit(\"isShowDialog\");\r\n    },\r\n    /**\r\n     * \r\n     * @param {data} date thực hiện format lại ngày tháng để hiển thị lên form\r\n     * Author: HVDUNG (03/06/2022)\r\n     */\r\n    \r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url(../../style/css/page/employee-info.css);\r\n@import url(../../style/css/icon/icon.css);\r\n</style>"]},"metadata":{},"sourceType":"module"}