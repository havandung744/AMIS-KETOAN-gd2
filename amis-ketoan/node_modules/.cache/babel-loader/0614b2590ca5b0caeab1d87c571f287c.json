{"ast":null,"code":"// thêm componants dropdown để thực hiện chức năng nhân bản, xóa\nimport DropDown from \"../page/DropDownList.vue\";\nimport axios from \"axios\";\nimport EmployeeDetail from \"./EmployeeDetail.vue\";\nimport DialogNotice from \"./DialogNotice.vue\";\nimport PaginateList from '../common/PaginateList.vue';\nexport default {\n  name: \"EmployeeList\",\n  components: {\n    DropDown,\n    EmployeeDetail,\n    DialogNotice,\n    PaginateList\n  },\n\n  /**\r\n   * Thực hiện khởi tạo đối tượng employees\r\n   * Author: HVDUNG (05/06/2022)\r\n   */\n  created() {\n    // this.loadData(\"Employees\");\n    // giá trị khởi tạo ban đầu dành cho việc hiển thị\n    this.pagination(10, 1);\n  },\n\n  // mounted() {\n  //   this.formatDate();\n  // },\n\n  /**\r\n   * THực hiện việc đếm số bản ghi có trong table\r\n   * Author: HVDUNG(05/06/2022)\r\n   */\n  beforeUpdate() {\n    if (this.employees) this.count = this.employees.length;else this.count = 0;\n  },\n\n  watch: {\n    // thực hiện focus nhiều lần vào cùng 1 tr thì không bị mất focus\n    isShowDialog: function () {\n      if (this.isShowDialog == false) this.employeeIdSelected = null;\n    },\n    // kiểm tra sự thay đổi của pageSize và cập nhật lại dữ liệu\n    pageSize: function (value) {\n      this.pagination(value, 1);\n    },\n    // kiểm tra sự thay đổi của pageNumberSelected và cập nhật lại dữ liệu\n    pageNumberSelected: function (value) {\n      this.pagination(this.pageSize, value);\n    }\n  },\n  methods: {\n    /**\r\n     * thực hiện hiển thị form dropdown khi click\r\n     * Author: HVDUNG (10/06/2022)\r\n     */\n    dropdownClick(event) {\n      debugger;\n      this.isShowDropDown = true;\n      var x = event.pageX - 50;\n      var y = event.pageY + 10;\n      document.getElementById('d-dropDown').style.left = `${x}px`;\n      document.getElementById('d-dropDown').style.top = `${y}px`;\n      this.employeeIdForDelete = event.EmployeeId;\n      alert(this.employeeIdForDelete);\n    },\n\n    pageNumber(value) {\n      this.pageNumberSelected = value;\n    },\n\n    /**\r\n     * thực hiện phân trang\r\n     * Author: HVDUNG (08/06/2022)\r\n     */\n    async pagination(pageSize, pageNumber) {\n      var me = this;\n\n      try {\n        me.isLoading = true;\n        await axios.get(`https://amis.manhnv.net/api/v1/Employees/filter?pageSize=${pageSize}&pageNumber=${pageNumber}`).then(response => {\n          me.employees = response.data.Data;\n          me.totalPages = response.data.TotalPage;\n        }).catch(function (error) {\n          console.log(error);\n        });\n        me.isLoading = false;\n      } catch (error) {\n        me.isLoading = false;\n        console.log(error);\n      }\n    },\n\n    /**\r\n     * Thực hiện loading dữ liệu\r\n     * Author: HVDUNG (08/06/2022)\r\n     */\n    async loadData(value) {\n      try {\n        var me = this;\n        me.isLoading = true;\n        await axios.get(`https://amis.manhnv.net/api/v1/${value}`).then(response => {\n          me.employees = response.data;\n        }).catch(function (error) {\n          console.log(error);\n        });\n        me.isLoading = false;\n      } catch (error) {\n        me.isLoading = false;\n        console.log(error);\n      }\n    },\n\n    /**\r\n     * Auto load data khi search\r\n     * Author: VHDUNG (08/06/2022)\r\n     */\n    autoSearch() {\n      var me = this;\n      me.textSearch = me.textSearch.trim();\n\n      if (me.textSearch != \"\") {\n        if (me.globalTimeout != null) {\n          clearTimeout(me.globalTimeout);\n        }\n\n        me.globalTimeout = setTimeout(function () {\n          me.globalTimeout = null;\n\n          try {\n            me.isLoading = true;\n            axios.get(`https://amis.manhnv.net/api/v1/Employees/filter?employeeFilter=${me.textSearch}`).then(response => {\n              me.employees = response.data.Data;\n              me.isLoading = false;\n            }).catch(function (error) {\n              console.log(error);\n              me.isLoading = false;\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        }, 500);\n      } else me.loadData(\"Employees\");\n    },\n\n    /**\r\n     * thực hiện build lại employees cho cha sau khi nhận sự thay đổi ở các componants khác (vd: EmployeeDeatails, DropDownList)\r\n     * Author: HVDUNG(06/06/2022)\r\n     */\n    changeValueEmployees(value) {\n      this.employees = value;\n    },\n\n    /**\r\n     * Thực hiện show form detail khi click\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\n    async btnAddOnclick() {\n      // thực hiện xóa đi đường viền đỏ\n      document.getElementById(\"EmployeeCode\").classList.remove(\"d-input-error\");\n      document.getElementById(\"EmployeeName\").classList.remove(\"d-input-error\");\n      this.employeeSelected = {};\n      this.toggleEmployeeDialog();\n      this.employeeIdSelected = null; // gán lại giá trị cho fromDetailMode là thêm mới\n\n      this.formDetailMode = 1;\n    },\n\n    /**\r\n     * @param {*} employee là đối tượng emplye Được lấy ở v-for\r\n     * building ra data của employee\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\n    trOnDoubleClick(employee) {\n      // gán chế độ là update\n      this.formDetailMode = 0; // thực hiện xóa đi đường viền đỏ\n\n      document.getElementById(\"EmployeeCode\").classList.remove(\"d-input-error\");\n      document.getElementById(\"EmployeeName\").classList.remove(\"d-input-error\"); // hiển thị form chi tiết\n\n      this.toggleEmployeeDialog();\n      this.employeeSelected = employee;\n      this.employeeIdSelected = employee.EmployeeId;\n    },\n\n    // thực hiện việc ẩn hiện form chi tiết\n    // Author: HVDUNG (08/06/2022)\n    toggleEmployeeDialog() {\n      this.isShowDialog = !this.isShowDialog;\n    },\n\n    /**\r\n     * Thực hiện reload lại dữ liệu khi click\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\n    btnRefreshOnClick() {\n      if (this.textSearch) this.loadData(`filter?employeeFilter=${this.textSearch}`);else this.loadData(\"Employees\");\n    },\n\n    /**\r\n     * Thực hiện định dạng lại ngày tháng để hiển thị\r\n     * @param {*} dateOfBirth ngày tháng được truyền vào\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\n    formatDate(dateOfBirth) {\n      if (dateOfBirth) {\n        // chuyển từ dạng string sang dạng Date\n        dateOfBirth = new Date(dateOfBirth); // lấy ngày\n\n        let date = dateOfBirth.getDate(); // lấy tháng\n\n        let month = dateOfBirth.getMonth() + 1; // lấy năm\n\n        let year = dateOfBirth.getFullYear(); // thêm số 0 vào trước nếu chỉ có một kí tự\n\n        date = date < 10 ? `0${date}` : date;\n        month = month < 10 ? `0${month}` : month;\n        return `${date}/${month}/${year}`;\n      } else {\n        return \"\";\n      }\n    }\n\n  },\n\n  data() {\n    return {\n      textSearch: \"\",\n      employees: {},\n      isShowDialog: false,\n      isLoading: true,\n      employeeSelected: null,\n      employeeIdSelected: null,\n      employeeIdForDelete: null,\n      active: false,\n      formDetailMode: 0,\n      isShowDropDown: false,\n      count: 0,\n      globalTimeout: null,\n      // data dùng để phân trang\n      totalPages: 0,\n      pageSize: 10,\n      pageNumberSelected: 1\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["DropDown","axios","EmployeeDetail","DialogNotice","PaginateList","name","components","created","pagination","beforeUpdate","employees","count","length","watch","isShowDialog","employeeIdSelected","pageSize","value","pageNumberSelected","methods","dropdownClick","event","isShowDropDown","x","pageX","y","pageY","document","getElementById","style","left","top","employeeIdForDelete","EmployeeId","alert","pageNumber","me","isLoading","get","then","response","data","Data","totalPages","TotalPage","catch","error","console","log","loadData","autoSearch","textSearch","trim","globalTimeout","clearTimeout","setTimeout","changeValueEmployees","btnAddOnclick","classList","remove","employeeSelected","toggleEmployeeDialog","formDetailMode","trOnDoubleClick","employee","btnRefreshOnClick","formatDate","dateOfBirth","Date","date","getDate","month","getMonth","year","getFullYear","active"],"sourceRoot":"","sources":["C:\\Users\\hdung\\source\\repos\\web2022_04\\Vue\\amis-ketoan\\src\\components\\page\\EmployeeList.vue"],"sourcesContent":[" <!-- v-on:keyup.enter=\"onEnter\" -->\r\n<template>\r\n  <div class=\"d-content\">\r\n    <div class=\"d-page-header\">\r\n      <div class=\"d-page-title\">Nhân viên</div>\r\n      <button\r\n        class=\"d-btn d-btn\"\r\n        id=\"d-btn-add-employee\"\r\n        @click=\"btnAddOnclick\"\r\n      >\r\n        Thêm mới nhân viên\r\n      </button>\r\n    </div>\r\n    <div class=\"d-page-toolbar\">\r\n      <div class=\"d-toolbar-left\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"d-input\"\r\n          v-on:keyup=\"autoSearch\"       \r\n          v-model=\"textSearch\"\r\n          placeholder=\"Tìm kiếm theo mã, tên nhân viên\"\r\n        />\r\n        <div class=\"icon_search\" @click=\"btnSearchOnClick\"></div>\r\n      </div>\r\n      <div class=\"icon_refresh\" @click=\"btnRefreshOnClick\"></div>\r\n    </div>\r\n\r\n    <div class=\"d-grid\">\r\n      <div class=\"d-grid-table\">\r\n        <table class=\"d-table\">\r\n          <thead>\r\n            <tr>\r\n              <!-- <th class=\"text-align-left ok\">STT</th> -->\r\n              <!-- <th class=\"text-align-center\"><input type=\"checkbox\"></th> -->\r\n              <th class=\"text-align-center ok\">\r\n                <input type=\"checkbox\" />\r\n              </th>\r\n              <th class=\"text-align-left ok\">\r\n                MÃ NHÂN VIÊN\r\n              </th>\r\n              <th class=\"text-align-left ok\">\r\n                TÊN NHÂN VIÊN\r\n              </th>\r\n              <th class=\"text-align-left ok\">\r\n                GIỚI TÍNH\r\n              </th>\r\n              <th class=\"text-align-center ok\" format=\"Date\">NGÀY SINH</th>\r\n              <th class=\"text-align-left ok\">\r\n                SỐ CMND\r\n              </th>\r\n              <th class=\"text-align-left ok\">\r\n                CHỨC DANH\r\n              </th>\r\n              <th class=\"text-align-left ok\">\r\n                TÊN ĐƠN VỊ\r\n              </th>\r\n              <th class=\"text-align-left ok\">\r\n                SỐ TÀI KHOẢN\r\n              </th>\r\n              <th class=\"text-align-left ok\">\r\n                TÊN NGÂN HÀNG\r\n              </th>\r\n              <th class=\"text-align-left ok\">\r\n                CHI NHÁNH TK NGÂN HÀNG\r\n              </th>\r\n              <th class=\"text-align-center ok\">\r\n                CHỨC NĂNG\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr\r\n              v-for=\"employee in employees\"\r\n              :key=\"employee.EmployeeId\"\r\n              @dblclick=\"trOnDoubleClick(employee)\"\r\n            >\r\n              <td id=\"d-td\" class=\"text-align-center\">\r\n                <input type=\"checkbox\" />\r\n              </td>\r\n              <td class=\"text-align-left\">{{ employee.EmployeeCode }}</td>\r\n              <td class=\"text-align-left\">{{ employee.EmployeeName }}</td>\r\n              <td class=\"text-align-left\">{{ employee.GenderName }}</td>\r\n              <td class=\"text-align-left\">\r\n                {{ formatDate(employee.DateOfBirth) }}\r\n              </td>\r\n              <td class=\"text-align-left\">{{ employee.IdentityNumber }}</td>\r\n              <td class=\"text-align-left\">{{ employee.EmployeePosition }}</td>\r\n              <td class=\"text-align-left\">{{ employee.DepartmentName }}</td>\r\n              <td class=\"text-align-left\">{{ employee.BankAccountNumber }}</td>\r\n              <td class=\"text-align-left\">{{ employee.BankName }}</td>\r\n              <td class=\"text-align-left\">{{ employee.BankBranchName }}</td>\r\n              <td class=\"text-align-center\">\r\n                <div class=\"d-function\">\r\n                  <!-- <DropDown\r\n                    :employeeIdForDelete=\"employeeIdForDelete\"\r\n                    @changeValueEmployees=\"changeValueEmployees\"\r\n                  ></DropDown> -->\r\n                  <div class=\"d-text\">Sửa</div>\r\n                  <div\r\n                    class=\"icon_dropdown\"\r\n                  @click=\"dropdownClick(employee)\"\r\n                  ></div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"d-paging\">\r\n        <div class=\"d-paging-left\">\r\n          Tổng : <b>{{ this.count }}</b> bản ghi\r\n        </div>\r\n        <div class=\"d-paging-center\"></div>\r\n        <div class=\"d-paging-right\">\r\n          <div class=\"d-row\">\r\n            <select class=\"d-combobox\" v-model=\"pageSize\">\r\n              <option value=\"10\">10 bản ghi trên 1 trang</option>\r\n              <option value=\"20\">20 bản ghi trên 1 trang</option>\r\n              <option value=\"30\">30 bản ghi trên 1 trang</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"d-row\">\r\n            <!-- <button class=\"d-before\">Trước</button>\r\n            <div class=\"d-group-number-page\">\r\n              <button class=\"btn-page-index btn-page-selected\">1</button>\r\n              <button class=\"btn-page-index\">2</button>\r\n              <button class=\"btn-page-index\">3</button>\r\n              <button class=\"btn-page-index\">...</button>\r\n              <button class=\"btn-page-index\">52</button>\r\n            </div>\r\n            <button class=\"d-after\">Sau</button> -->\r\n           <PaginateList :totalPages=totalPages @pageNumber=\"pageNumber\"></PaginateList>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- showDialog là props của file detail, giá trị nhận là isShowDialog của file EmployeeList -->\r\n    <!-- @isShowDialog là cách ta định nghĩa một phương thức để từ bên detail có thể gọi sang bên list thông qua $emit -->\r\n    <!-- \"employee\" là cách ta truyền trực tiếp từ cliend chứ không thông qua server-->\r\n    <!-- :employeeSelected=\"employeeS\"elected\" -->\r\n    <EmployeeDetail\r\n      @changeValueEmployees=\"changeValueEmployees\"\r\n      v-show=\"isShowDialog\"\r\n      @isShowDialog=\"toggleEmployeeDialog\"\r\n      :employeeIdSelected=\"employeeIdSelected\"\r\n      :employeeSelected=\"employeeSelected\"\r\n      :formMode=\"formDetailMode\"\r\n    ></EmployeeDetail>\r\n    <!-- thực hiện hiển thị thông báo khi validate không hợp lệ-->\r\n    <DialogNotice></DialogNotice>\r\n    <!-- thực hiện hiển thị dropdown khi click -->\r\n    <DropDown v-show=\"isShowDropDown\" id=\"d-dropDown\"></DropDown>\r\n    <!-- thành phần thực hiện loading -->\r\n    <div class=\"loading\" v-show=\"isLoading\">\r\n      <div class=\"loading-icon\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// thêm componants dropdown để thực hiện chức năng nhân bản, xóa\r\nimport DropDown from \"../page/DropDownList.vue\";\r\nimport axios from \"axios\";\r\nimport EmployeeDetail from \"./EmployeeDetail.vue\";\r\nimport DialogNotice from \"./DialogNotice.vue\";\r\nimport PaginateList from '../common/PaginateList.vue';\r\nexport default {\r\n  name: \"EmployeeList\",\r\n  components: {\r\n    DropDown,\r\n    EmployeeDetail,\r\n    DialogNotice,\r\n    PaginateList\r\n  },\r\n\r\n  /**\r\n   * Thực hiện khởi tạo đối tượng employees\r\n   * Author: HVDUNG (05/06/2022)\r\n   */\r\n   created() {\r\n    // this.loadData(\"Employees\");\r\n    // giá trị khởi tạo ban đầu dành cho việc hiển thị\r\n    this.pagination(10, 1);\r\n  },\r\n\r\n  // mounted() {\r\n  //   this.formatDate();\r\n  // },\r\n\r\n  /**\r\n   * THực hiện việc đếm số bản ghi có trong table\r\n   * Author: HVDUNG(05/06/2022)\r\n   */\r\n  beforeUpdate() {\r\n    if (this.employees) this.count = this.employees.length;\r\n    else this.count = 0;\r\n  },\r\n\r\n  watch:{\r\n    // thực hiện focus nhiều lần vào cùng 1 tr thì không bị mất focus\r\n    isShowDialog: function(){\r\n      if(this.isShowDialog==false)\r\n      this.employeeIdSelected = null;\r\n    },\r\n\r\n    // kiểm tra sự thay đổi của pageSize và cập nhật lại dữ liệu\r\n    pageSize: function(value){\r\n      this.pagination(value, 1);\r\n    },\r\n\r\n // kiểm tra sự thay đổi của pageNumberSelected và cập nhật lại dữ liệu\r\n    pageNumberSelected: function(value){\r\n      this.pagination(this.pageSize, value);\r\n    }\r\n\r\n  },\r\n\r\n  methods: {\r\n   /**\r\n    * thực hiện hiển thị form dropdown khi click\r\n    * Author: HVDUNG (10/06/2022)\r\n    */\r\n   dropdownClick(event){\r\n    debugger\r\n    this.isShowDropDown=true;\r\n    var x = event.pageX - 50;\r\n    var y = event.pageY +10;\r\n    document.getElementById('d-dropDown').style.left=`${x}px`;\r\n    document.getElementById('d-dropDown').style.top=`${y}px`;\r\n    this.employeeIdForDelete = event.EmployeeId;\r\n    alert(this.employeeIdForDelete);\r\n   },\r\n\r\n    pageNumber(value){\r\n      this.pageNumberSelected = value;\r\n    },\r\n\r\n    /**\r\n     * thực hiện phân trang\r\n     * Author: HVDUNG (08/06/2022)\r\n     */\r\n  async pagination(pageSize, pageNumber){\r\n      var me = this;\r\n     try {\r\n        me.isLoading = true;\r\n      await axios\r\n        .get(`https://amis.manhnv.net/api/v1/Employees/filter?pageSize=${pageSize}&pageNumber=${pageNumber}`)\r\n        .then((response) => {\r\n          me.employees = response.data.Data;\r\n          me.totalPages = response.data.TotalPage;\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      me.isLoading = false;\r\n    } catch (error) {\r\n      me.isLoading = false;\r\n      console.log(error);\r\n    }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện loading dữ liệu\r\n     * Author: HVDUNG (08/06/2022)\r\n     */\r\n   async loadData(value){\r\n       try {\r\n      var me = this;\r\n        me.isLoading = true;\r\n      await axios\r\n        .get(`https://amis.manhnv.net/api/v1/${value}`)\r\n        .then((response) => {\r\n          me.employees = response.data;\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      me.isLoading = false;\r\n    } catch (error) {\r\n      me.isLoading = false;\r\n      console.log(error);\r\n    }\r\n    },\r\n\r\n    /**\r\n     * Auto load data khi search\r\n     * Author: VHDUNG (08/06/2022)\r\n     */\r\n    autoSearch() {\r\n    var me = this;\r\n    me.textSearch = me.textSearch.trim();\r\n    if(me.textSearch!=\"\"){\r\n      if (me.globalTimeout != null) {\r\n      clearTimeout(me.globalTimeout);\r\n        }\r\n        me.globalTimeout = setTimeout(function() {\r\n        me.globalTimeout = null;  \r\n        try {\r\n          me.isLoading = true;\r\n          axios\r\n            .get(\r\n              `https://amis.manhnv.net/api/v1/Employees/filter?employeeFilter=${me.textSearch}`\r\n            )\r\n            .then((response) => {\r\n              me.employees = response.data.Data;\r\n              me.isLoading = false;\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n              me.isLoading = false;\r\n            });\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }, 500);  \r\n    }\r\n    else\r\n    me.loadData(\"Employees\");\r\n},\r\n\r\n    /**\r\n     * thực hiện build lại employees cho cha sau khi nhận sự thay đổi ở các componants khác (vd: EmployeeDeatails, DropDownList)\r\n     * Author: HVDUNG(06/06/2022)\r\n     */\r\n    changeValueEmployees(value) {\r\n      this.employees = value;\r\n    },\r\n    /**\r\n     * Thực hiện show form detail khi click\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\r\n    async btnAddOnclick() {\r\n      // thực hiện xóa đi đường viền đỏ\r\n      document.getElementById(\"EmployeeCode\").classList.remove(\"d-input-error\");\r\n      document.getElementById(\"EmployeeName\").classList.remove(\"d-input-error\");\r\n      this.employeeSelected = {};\r\n      this.toggleEmployeeDialog();\r\n      this.employeeIdSelected = null;\r\n      // gán lại giá trị cho fromDetailMode là thêm mới\r\n      this.formDetailMode = 1;\r\n    },\r\n\r\n    /**\r\n     * @param {*} employee là đối tượng emplye Được lấy ở v-for\r\n     * building ra data của employee\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\r\n    trOnDoubleClick(employee) {\r\n      // gán chế độ là update\r\n      this.formDetailMode = 0;\r\n      // thực hiện xóa đi đường viền đỏ\r\n      document.getElementById(\"EmployeeCode\").classList.remove(\"d-input-error\");\r\n      document.getElementById(\"EmployeeName\").classList.remove(\"d-input-error\");\r\n      // hiển thị form chi tiết\r\n      this.toggleEmployeeDialog();\r\n      this.employeeSelected = employee;\r\n      this.employeeIdSelected = employee.EmployeeId;\r\n    },\r\n\r\n    // thực hiện việc ẩn hiện form chi tiết\r\n    // Author: HVDUNG (08/06/2022)\r\n    toggleEmployeeDialog() {\r\n      this.isShowDialog = !this.isShowDialog;\r\n    },\r\n\r\n    /**\r\n     * Thực hiện reload lại dữ liệu khi click\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\r\n     btnRefreshOnClick() {\r\n       if(this.textSearch)\r\n       this.loadData(`filter?employeeFilter=${this.textSearch}`);\r\n       else\r\n      this.loadData(\"Employees\");\r\n    },\r\n\r\n    /**\r\n     * Thực hiện định dạng lại ngày tháng để hiển thị\r\n     * @param {*} dateOfBirth ngày tháng được truyền vào\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\r\n    formatDate(dateOfBirth) {\r\n      if (dateOfBirth) {\r\n        // chuyển từ dạng string sang dạng Date\r\n        dateOfBirth = new Date(dateOfBirth);\r\n        // lấy ngày\r\n        let date = dateOfBirth.getDate();\r\n        // lấy tháng\r\n        let month = dateOfBirth.getMonth() + 1;\r\n        // lấy năm\r\n        let year = dateOfBirth.getFullYear();\r\n        // thêm số 0 vào trước nếu chỉ có một kí tự\r\n        date = date < 10 ? `0${date}` : date;\r\n        month = month < 10 ? `0${month}` : month;\r\n        return `${date}/${month}/${year}`;\r\n      } else {\r\n        return \"\";\r\n      }\r\n    },\r\n  },\r\n  \r\n  data() {\r\n    return {\r\n      textSearch: \"\",\r\n      employees: {},\r\n      isShowDialog: false,\r\n      isLoading: true,\r\n      employeeSelected: null,\r\n      employeeIdSelected: null,\r\n      employeeIdForDelete: null,\r\n      active: false,\r\n      formDetailMode: 0,\r\n      isShowDropDown: false,\r\n      count: 0,\r\n      globalTimeout: null,\r\n      // data dùng để phân trang\r\n      totalPages: 0,\r\n      pageSize: 10,\r\n      pageNumberSelected: 1\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url(../../style/css/layout/content.css);\r\n</style>"]},"metadata":{},"sourceType":"module"}