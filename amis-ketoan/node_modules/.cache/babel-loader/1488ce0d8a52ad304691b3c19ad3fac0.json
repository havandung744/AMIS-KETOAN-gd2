{"ast":null,"code":"import axios from \"axios\"; // import Datepicker from \"../common/DatepickerList.vue\";\n\nexport default {\n  name: \"EmployeeDetail\",\n  components: {//  Datepicker\n  },\n\n  /**\r\n   * employeeIdSelected để nhận về id của đối tượng được click\r\n   * formMode để nhận biết là thêm mới hay update\r\n   */\n  props: [\"employeeIdSelected\", \"formMode\", \"pageSize\", \"pageNumberSelected\", \"textSearch\"],\n\n  data() {\n    return {\n      // dateTime: \"\",\n      employee: {}\n    };\n  },\n\n  watch: {\n    /**\r\n     * thực hiện lấy dữ liệu từ cliend và trả về cho form chi tiết => dữ liệu được binding trực tiếp luôn khi sửa\r\n     *  (không lấy đc dữ liệu mới nhất)\r\n     * không cần thực hiện loading lại dữ liệu\r\n     * @param {object} value là object nhân được khi click\r\n     */\n    employeeIdSelected: function (value) {\n      // kiểm tra xem id có tồn tại hay không\n      var me = this;\n\n      if (value) {\n        axios.get(`http://localhost:22454/api/v1/Employees/${me.employeeIdSelected}`).then(function (res) {\n          switch (res.status) {\n            case 200:\n              // thực hiện focus vào ô nhập liệu đầu tiên\n              document.getElementById(\"EmployeeCode\").focus(); // gán lại data cho employee detail\n\n              me.employee = res.data;\n              console.log(me.employee); //gán lại ngày sinh cho employee detail\n\n              me.employee.DateOfBirth = me.formatDate(me.employee.DateOfBirth); //gán lại ngày cấp cho employee detail\n\n              me.employee.IdentityDate = me.formatDate(me.employee.IdentityDate);\n              break;\n\n            case 201:\n              break;\n\n            default:\n              break;\n          }\n        }).catch(function (res) {\n          console.log(res);\n        });\n      } else {\n        me.getNewEmployeeCode();\n      }\n    }\n  },\n  methods: {\n    /**\r\n     * thực hiện lưu khi người dùng click nút lưu\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\n    btnSaveOnClick() {\n      var me = this; //1. validate dữ liệu\n\n      var isValid = me.validate(); //2. thực hiện thêm mới hoặc cập nhật khi validate thành công\n\n      if (isValid) {\n        //2.1 nếu formMode là 1 thì thêm mới\n        if (me.formMode == 1) me.addEmployee(); //2.2 nếu formMode != 1 thì cập nhật\n        else me.updateEmployee(); //3. thực hiện đóng form chi tiết\n\n        me.$emit(\"isShowDialog\");\n      }\n    },\n\n    btnSaveAndAdd() {\n      var me = this; //1. thực hiện việc validate\n\n      var isValid = me.validate(); //2. thực hiện thêm mới hoặc cập nhật khi validate thành công\n\n      if (isValid) {\n        //2.1 nếu formMode là 1 thì thêm mới\n        if (me.formMode == 1) {\n          me.addEmployee();\n          me.employee = {};\n        } //2.2 nếu formMode != 1 thì cập nhật\n        else {\n          me.updateEmployee();\n          me.employee = {};\n          me.$emit(\"changeValueFormMode\", 1);\n        }\n      }\n\n      me.getNewEmployeeCode();\n    },\n\n    /**\r\n    * Thực hiện đóng form chi tiết khi click\r\n    * Author: HVDUNG(05/06/2022)\r\n    */\n    btnCloseOnClick() {\n      this.$emit(\"isShowDialog\");\n    },\n\n    /**\r\n    * thực hiện focus vào ô nhập liệu đầu tiên khi nó đến input cuối cùng\r\n    * Author: HVDUNG (03/06/2022)\r\n    */\n    focusInputFirst() {\n      document.getElementById(\"EmployeeCode\").focus();\n    },\n\n    /**\r\n     * Thực hiện format lại ngày tháng để có thể hiển thị được trên form detail\r\n     * Author: HVDUNG (03/06/2022)\r\n     */\n    formatDate(dateOfBirth) {\n      if (dateOfBirth) {\n        // chuyển từ dạng string sang dạng Date\n        dateOfBirth = new Date(dateOfBirth); // lấy ngày\n\n        let date = dateOfBirth.getDate(); // lấy tháng\n\n        let month = dateOfBirth.getMonth() + 1; // lấy năm\n\n        let year = dateOfBirth.getFullYear(); // thêm số 0 vào trước nếu chỉ có một kí tự\n\n        date = date < 10 ? `0${date}` : date;\n        month = month < 10 ? `0${month}` : month;\n        return `${date}-${month}-${year}`; // return `${year}-${month}-${date}`;\n      } else {\n        return \"\";\n      }\n    },\n\n    formatDate1(dateOfBirth) {\n      if (dateOfBirth) {\n        // chuyển từ dạng string sang dạng Date\n        dateOfBirth = new Date(dateOfBirth); // lấy ngày\n\n        let date = dateOfBirth.getDate(); // lấy tháng\n\n        let month = dateOfBirth.getMonth() + 1; // lấy năm\n\n        let year = dateOfBirth.getFullYear(); // thêm số 0 vào trước nếu chỉ có một kí tự\n\n        date = date < 10 ? `0${date}` : date;\n        month = month < 10 ? `0${month}` : month;\n        return `${date}/${month}/${year}`;\n      } else {\n        return \"\";\n      }\n    },\n\n    /**\r\n     * thực hiện validate xem dữ liệu có bị trống hay không\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\n    validateCheckInput(event) {\n      //theo cách dùng thuần\n      //1. lấy ra giá trị input nhập vào\n      let value = event.currentTarget.value; //  2. kiểm tra value có rỗng hay không\n\n      if (!value) {\n        // thêm class vào trong input\n        event.currentTarget.classList.add(\"d-input-error\"); // thêm câu cảnh báo khi hover\n\n        event.currentTarget.setAttribute(\"title\", \"thông tin không được để trống\");\n      } else {\n        event.currentTarget.classList.remove(\"d-input-error\");\n        event.currentTarget.setAttribute(\"title\", \"\");\n      }\n    },\n\n    /**\r\n     * Thực hiện kiểm tra xem email đã đúng định dạng hay chưa\r\n     * @param {event} event đối tượng được xây dựng sẵn trong Vue \r\n     * Author: HVDUNG (11/06/2022)\r\n     */\n    validateCheckEmail(event) {\n      //theo cách dùng thuần\n      //1. lấy ra giá trị input nhập vào\n      let value = event.currentTarget.value; //  2. kiểm tra value có đụng định dạng hay không\n\n      if (value.trim() != \"\" && !this.checkEmail(value)) {\n        // thêm class vào trong input\n        event.currentTarget.classList.add(\"d-input-error\"); // thêm câu cảnh báo khi hover\n\n        event.currentTarget.setAttribute(\"title\", \"Email không đúng định dạng\");\n      } else {\n        event.currentTarget.classList.remove(\"d-input-error\");\n        event.currentTarget.setAttribute(\"title\", \"\");\n      }\n    },\n\n    /**\r\n     * Thực hiện kiểm tra email có đúng định dạng hay không\r\n     * @param {string} email email cuả nhân viên \r\n     * Author: HVDUNG (11./06/2022)\r\n     */\n    checkEmail(email) {\n      var res = /\\S+@\\S+\\.\\S+/;\n      return res.test(email);\n    },\n\n    /**\r\n     * Thực hiện lấy mã nhân viên mới\r\n     * Author: HVDUNG (24/06/2022)\r\n     */\n    async getNewEmployeeCode() {\n      try {\n        var me = this; // nếu không có id thì gán lại employee là null\n\n        me.employee = {}; // gọi API lấy mã nhân viên\n\n        await axios.get(\"http://localhost:22454/api/v1/Employees/NewEmployeeCode\").then(function (res) {\n          me.employee.EmployeeCode = res.data; // thực hiện focus vào ô nhập liệu đầu tiên\n\n          document.getElementById(\"EmployeeCode\").focus();\n        }).catch(function (res) {\n          console.log(res);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    /**\r\n     * Thực hiện validate dữ liệu cho thêm mới và cập nhật\r\n     * true: validate thành công\r\n     * false: validate có lỗi\r\n     * Author: HVDUNG (05/06/2022)\r\n     */\n    validate() {\n      var me = this; //1. validate dữ liệu\n\n      var isValid = true;\n      var arrayErrors = [];\n\n      if (!me.employee.EmployeeCode) {\n        isValid = false;\n        arrayErrors.push(\"Mã nhân viên không được phép để trống\");\n      }\n\n      if (!me.employee.EmployeeName) {\n        isValid = false;\n        arrayErrors.push(\"Tên nhân viên không được phép để trống\");\n      }\n\n      if (!me.employee.DepartmentId) {\n        isValid = false;\n        arrayErrors.push(\"Phòng ban không được phép để trống\");\n      } // convert về dạng ngày tháng thì mới có thể so sánh được\n\n\n      var dateCurrent = document.getElementById(\"date_timepicker_end\").value;\n      dateCurrent = new Date(dateCurrent);\n\n      if (dateCurrent > new Date()) {\n        isValid = false;\n        arrayErrors.push(\"Ngày sinh không được phép lớn hơn ngày hiện tại\");\n      }\n\n      if (me.employee.Email && !me.checkEmail(me.employee.Email)) {\n        isValid = false;\n        arrayErrors.push(\"Email không đúng định dạng\");\n      }\n\n      if (!isValid) {\n        //hiển thị thông báo validate không hợp lệ\n        let noticeDialog = document.getElementsByClassName(\"d-dialog-box\")[0];\n        let bodyTextNoticeDialog = noticeDialog.querySelector(\".d-dialog-body\");\n        bodyTextNoticeDialog.innerHTML = \"\"; //append nội dung thông báo\n\n        arrayErrors.forEach(errorMsg => {\n          var el = document.createElement(\"div\");\n          el.innerHTML = `${errorMsg}`;\n          bodyTextNoticeDialog.append(el);\n        });\n        document.getElementsByClassName(\"d-dialog-box\")[0].style.display = \"block\";\n        return;\n      }\n\n      return isValid;\n    },\n\n    /**\r\n     * Thực hiện thêm mới nhân viên\r\n     * nhân viên được thêm mới\r\n     * Author: HVDUNG (05/06/2022)\r\n     */\n    async addEmployee() {\n      var me = this;\n      document.getElementsByClassName(\"loading\")[0].style.display = \"block\"; // gán một positionId mặc định cho employee\n\n      me.employee.PositionId = \"25c6c36e-1668-7d10-6e09-bf1378b8dc91\";\n      await axios.post(\"http://localhost:22454/api/v1/Employees\", me.employee).then(function (res) {\n        console.log(res); // dùng tạm thời => phải dùng toast msg\n      }).catch(function (res) {\n        let error = res.response.status;\n\n        switch (error) {\n          case 400:\n          case 500:\n            // hiển thị thông báo lỗi khi thêm mới\n            console.log(res.response.data);\n            alert(res.response.data[\"userMsg\"]);\n            break;\n\n          default:\n            break;\n        }\n      }); // thực hiện cập nhật lại dữ liệu lên giao diện\n\n      try {\n        // hiển thị loadding\n        document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\n        console.log(me.pageNumberSelected);\n        await axios.get(`http://localhost:22454/api/v1/Employees/filter?pageSize=${me.pageSize}&pageNumber=${me.pageNumberSelected}&employeeFilter=${me.textSearch}`).then(response => {\n          me.employees = response.data.Data;\n          me.$emit(\"changeValueEmployees\", me.employees);\n          me.$emit(\"changeCount\", response.data.TotalRecords);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } catch (error) {\n        console.log(error);\n      } //ẩn loading\n\n\n      document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\n    },\n\n    /**\r\n     * Thực hiện cập nhật thông tin nhân viên\r\n     * thông tin nhân viên được cập nhật\r\n     * Author: HVDUNG (05/06/2022)\r\n     */\n    async updateEmployee() {\n      var me = this; // 3.2 thực hiện update nhân viên\n\n      document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\n      await axios.put(`http://localhost:22454/api/v1/Employees/${me.employeeIdSelected}`, me.employee).then(function (res) {\n        console.log(res);\n      }).catch(function (res) {\n        console.log(res);\n      }); // thực hiện cập nhật lại dữ liệu lên giao diện\n\n      try {\n        // hiển thị loadding\n        document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\n        console.log(me.pageNumberSelected);\n        await axios.get(`http://localhost:22454/api/v1/Employees/filter?pageSize=${me.pageSize}&pageNumber=${me.pageNumberSelected}&employeeFilter=${me.textSearch}`).then(response => {\n          me.employees = response.data.Data;\n          me.$emit(\"changeValueEmployees\", me.employees);\n          me.$emit(\"changeCount\", response.data.TotalRecords);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } catch (error) {\n        console.log(error);\n      } //ẩn loading\n\n\n      document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","components","props","data","employee","watch","employeeIdSelected","value","me","get","then","res","status","document","getElementById","focus","console","log","DateOfBirth","formatDate","IdentityDate","catch","getNewEmployeeCode","methods","btnSaveOnClick","isValid","validate","formMode","addEmployee","updateEmployee","$emit","btnSaveAndAdd","btnCloseOnClick","focusInputFirst","dateOfBirth","Date","date","getDate","month","getMonth","year","getFullYear","formatDate1","validateCheckInput","event","currentTarget","classList","add","setAttribute","remove","validateCheckEmail","trim","checkEmail","email","test","EmployeeCode","error","arrayErrors","push","EmployeeName","DepartmentId","dateCurrent","Email","noticeDialog","getElementsByClassName","bodyTextNoticeDialog","querySelector","innerHTML","forEach","errorMsg","el","createElement","append","style","display","PositionId","post","response","alert","pageNumberSelected","pageSize","textSearch","employees","Data","TotalRecords","put"],"sourceRoot":"","sources":["C:\\Users\\hdung\\source\\repos\\web2022_04\\Vue\\amis-ketoan\\src\\components\\page\\EmployeeDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-employee-box\">\r\n    <div class=\"d-employee-box-info\">\r\n      <div class=\"header\">\r\n        <div class=\"header-text\">THÔNG TIN NHÂN VIÊN</div>\r\n        <div class=\"header-content\">\r\n          <div class=\"header-checkbox\">\r\n            <input type=\"checkbox\" style=\"width: 18px; height: 18px\" />\r\n            <div class=\"header-checkbox-content\">Là khách hàng</div>\r\n          </div>\r\n          <div class=\"header-checkbox\">\r\n            <input type=\"checkbox\" style=\"width: 18px; height: 18px\" />\r\n            <div class=\"header-checkbox-content\">Là nhà cung cấp</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"icon_close header-close\" @click=\"btnCloseOnClick\"></div>\r\n      </div>\r\n      <div class=\"content\">\r\n        <div class=\"content-info\">\r\n          <div class=\"content-info-left\">\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Mã nhân viên<span style=\"color: red\">*</span></label><br />\r\n                <input type=\"text\" v-model=\"employee.EmployeeCode\" class=\"d-input\" id=\"EmployeeCode\"\r\n                  @blur=\"validateCheckInput\" tabindex=\"1\" style=\"width: 150px\" />\r\n              </div>\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Họ tên<span style=\"color: red\">*</span></label><br />\r\n                <input type=\"text\" v-model=\"employee.EmployeeName\" class=\"d-input\" id=\"EmployeeName\"\r\n                  @blur=\"validateCheckInput\" tabindex=\"2\" style=\"width: 235px\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Đơn vị</label><br />\r\n\r\n                <select tabindex=\"7\" v-model=\"employee.DepartmentId\" class=\"cbxDepartment\">\r\n                  <option value=\"142cb08f-7c31-21fa-8e90-67245e8b283e\">\r\n                    Phòng đào tạo\r\n                  </option>\r\n                  <option value=\"17120d02-6ab5-3e43-18cb-66948daf6128\">\r\n                    Phòng nhân sự\r\n                  </option>\r\n                  <option value=\"469b3ece-744a-45d5-957d-e8c757976496\">\r\n                    Phòng sản xuất\r\n                  </option>\r\n                  <option value=\"4e272fc4-7875-78d6-7d32-6a1673ffca7c\">\r\n                    Phòng kế toán\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Chức danh</label><br />\r\n                <input type=\"input\" class=\"d-input\" v-model=\"employee.EmployeePosition\" tabindex=\"10\"\r\n                  style=\"width: 391px\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"content-info-right\">\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Ngày sinh</label><br />\r\n                <input type=\"date\" id=\"date_timepicker_end\" v-model=\"employee.DateOfBirth\" class=\"d-input\" tabindex=\"3\"\r\n                  style=\"width: 161px\" />\r\n                <!-- <datepicker v-model=\"dateTime\" class=\"d-input\" tabindex=\"3\"/> -->\r\n              </div>\r\n              <div class=\"info-input\" id=\"d-radio\">\r\n                <label for=\"\" style=\"margin-left: 4px\">Giới tính</label><br />\r\n                <div class=\"info-input-box\">\r\n                  <div class=\"info-input-item\">\r\n                    <input name=\"gender\" type=\"radio\" value=\"1\" tabindex=\"4\" v-model=\"employee.Gender\" />\r\n                    <label for=\"\" style=\"margin-right: 8px\">Nam</label>\r\n                  </div>\r\n                  <div class=\"info-input-item\">\r\n                    <input name=\"gender\" type=\"radio\" value=\"0\" tabindex=\"5\" v-model=\"employee.Gender\" />\r\n                    <label for=\"\" style=\"margin-right: 8px\">Nữ</label>\r\n                  </div>\r\n                  <div class=\"info-input-item\">\r\n                    <input name=\"gender\" type=\"radio\" value=\"2\" tabindex=\"6\" v-model=\"employee.Gender\" />\r\n                    <label for=\"\">Khác</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Số CMND</label><br />\r\n                <input type=\"input\" v-model=\"employee.IdentityNumber\" class=\"d-input\" tabindex=\"8\"\r\n                  style=\"width: 245px\" />\r\n              </div>\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Ngày cấp</label><br />\r\n                <input type=\"date\" v-model=\"employee.IdentityDate\" class=\"d-input\" tabindex=\"9\" style=\"width: 140px\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Nơi cấp</label><br />\r\n                <input type=\"input\" v-model=\"employee.IdentityPlace\" class=\"d-input\" tabindex=\"11\"\r\n                  style=\"width: 391px\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"info-input-tr\" style=\"margin-top: 40px\">\r\n          <div class=\"info-input\">\r\n            <label for=\"\">Địa chỉ</label>\r\n            <input type=\"input\" class=\"d-input\" v-model=\"employee.Address\" tabindex=\"12\" style=\"width: 812px\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"content-info-bottom\">\r\n          <div class=\"info-input-tr\">\r\n            <div class=\"info-input\">\r\n              <label for=\"\">ĐT di động</label><br />\r\n              <input type=\"text\" v-model=\"employee.PhoneNumber\" class=\"d-input\" id=\"EmployeeCode\" tabindex=\"13\"\r\n                style=\"width: 150px\" />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">ĐT cố định</label><br />\r\n              <input type=\"text\" class=\"d-input\" id=\"EmployeeName\" v-model=\"employee.TelephoneNumber\" tabindex=\"14\"\r\n                style=\"width: 235px\" />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Email</label><br />\r\n              <input type=\"text\" v-model=\"employee.Email\" class=\"d-input\" id=\"EmployeeName\" tabindex=\"15\"\r\n                @blur=\"validateCheckEmail\" style=\"width: 235px\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"info-input-tr\">\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Tài khoản ngân hàng</label><br />\r\n              <input type=\"text\" class=\"d-input\" id=\"EmployeeCode\" v-model=\"employee.BankAccountNumber\" tabindex=\"16\"\r\n                style=\"width: 150px\" />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Tên ngân hàng</label><br />\r\n              <input type=\"text\" class=\"d-input\" id=\"EmployeeName\" v-model=\"employee.BankName\" tabindex=\"17\"\r\n                style=\"width: 235px\" />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Chi nhánh</label><br />\r\n              <input type=\"text\" class=\"d-input\" id=\"EmployeeName\" v-model=\"employee.BankBranchName\" tabindex=\"18\"\r\n                style=\"width: 235px\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"footer\">\r\n          <div class=\"footer-line\"></div>\r\n          <div class=\"footer-button\">\r\n            <button class=\"d-btn d-btn-cancel d-btn-footer-left\" id=\"d-btn-close\" tabindex=\"21\" @blur=\"focusInputFirst\"\r\n              @click=\"btnCloseOnClick\">\r\n              Hủy\r\n            </button>\r\n            <button class=\"d-btn d-btn-save\" id=\"d-btn-save\" tabindex=\"20\" @click=\"btnSaveOnClick\">\r\n              Cất\r\n            </button>\r\n            <button class=\"d-btn d-btn-save-add\" id=\"d-btn-save-add\" tabindex=\"19\" @click=\"btnSaveAndAdd\">\r\n              Cất và Thêm\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n// import Datepicker from \"../common/DatepickerList.vue\";\r\nexport default {\r\n  name: \"EmployeeDetail\",\r\n  components: {\r\n    //  Datepicker\r\n  },\r\n  /**\r\n   * employeeIdSelected để nhận về id của đối tượng được click\r\n   * formMode để nhận biết là thêm mới hay update\r\n   */\r\n  props: [\"employeeIdSelected\", \"formMode\", \"pageSize\", \"pageNumberSelected\", \"textSearch\"],\r\n  data() {\r\n    return {\r\n      // dateTime: \"\",\r\n      employee: {}\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    /**\r\n     * thực hiện lấy dữ liệu từ cliend và trả về cho form chi tiết => dữ liệu được binding trực tiếp luôn khi sửa\r\n     *  (không lấy đc dữ liệu mới nhất)\r\n     * không cần thực hiện loading lại dữ liệu\r\n     * @param {object} value là object nhân được khi click\r\n     */\r\n\r\n    employeeIdSelected: function (value) {\r\n      // kiểm tra xem id có tồn tại hay không\r\n      var me = this;\r\n      if (value) {\r\n        axios\r\n          .get(\r\n            `http://localhost:22454/api/v1/Employees/${me.employeeIdSelected}`\r\n\r\n          )\r\n          .then(function (res) {\r\n            switch (res.status) {\r\n              case 200:\r\n                // thực hiện focus vào ô nhập liệu đầu tiên\r\n                document.getElementById(\"EmployeeCode\").focus();\r\n                // gán lại data cho employee detail\r\n                me.employee = res.data;\r\n                console.log(me.employee);\r\n                \r\n                //gán lại ngày sinh cho employee detail\r\n                me.employee.DateOfBirth = me.formatDate(\r\n                  me.employee.DateOfBirth\r\n                );\r\n\r\n                //gán lại ngày cấp cho employee detail\r\n                me.employee.IdentityDate = me.formatDate(\r\n                  me.employee.IdentityDate\r\n                );\r\n                break;\r\n              case 201:\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n          })\r\n          .catch(function (res) {\r\n            console.log(res);\r\n          });\r\n\r\n      } else {\r\n        me.getNewEmployeeCode();\r\n      }\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    /**\r\n     * thực hiện lưu khi người dùng click nút lưu\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\r\n    btnSaveOnClick() {\r\n      var me = this;\r\n      //1. validate dữ liệu\r\n      var isValid = me.validate();\r\n      //2. thực hiện thêm mới hoặc cập nhật khi validate thành công\r\n      if (isValid) {\r\n        //2.1 nếu formMode là 1 thì thêm mới\r\n        if (me.formMode == 1) me.addEmployee();\r\n        //2.2 nếu formMode != 1 thì cập nhật\r\n        else me.updateEmployee();\r\n        //3. thực hiện đóng form chi tiết\r\n        me.$emit(\"isShowDialog\");\r\n      }\r\n    },\r\n\r\n    btnSaveAndAdd() {\r\n      var me = this;\r\n      //1. thực hiện việc validate\r\n      var isValid = me.validate();\r\n      //2. thực hiện thêm mới hoặc cập nhật khi validate thành công\r\n      if (isValid) {\r\n        //2.1 nếu formMode là 1 thì thêm mới\r\n        if (me.formMode == 1) {\r\n          me.addEmployee();\r\n          me.employee = {};\r\n        }\r\n        //2.2 nếu formMode != 1 thì cập nhật\r\n        else {\r\n          me.updateEmployee();\r\n          me.employee = {};\r\n          me.$emit(\"changeValueFormMode\", 1);\r\n        }\r\n      }\r\n      me.getNewEmployeeCode();\r\n    },\r\n\r\n    /**\r\n   * Thực hiện đóng form chi tiết khi click\r\n   * Author: HVDUNG(05/06/2022)\r\n   */\r\n    btnCloseOnClick() {\r\n      this.$emit(\"isShowDialog\");\r\n    },\r\n\r\n    /**\r\n    * thực hiện focus vào ô nhập liệu đầu tiên khi nó đến input cuối cùng\r\n    * Author: HVDUNG (03/06/2022)\r\n    */\r\n    focusInputFirst() {\r\n      document.getElementById(\"EmployeeCode\").focus();\r\n    },\r\n    /**\r\n     * Thực hiện format lại ngày tháng để có thể hiển thị được trên form detail\r\n     * Author: HVDUNG (03/06/2022)\r\n     */\r\n    formatDate(dateOfBirth) {\r\n      if (dateOfBirth) {\r\n        // chuyển từ dạng string sang dạng Date\r\n        dateOfBirth = new Date(dateOfBirth);\r\n        // lấy ngày\r\n        let date = dateOfBirth.getDate();\r\n        // lấy tháng\r\n        let month = dateOfBirth.getMonth() + 1;\r\n        // lấy năm\r\n        let year = dateOfBirth.getFullYear();\r\n        // thêm số 0 vào trước nếu chỉ có một kí tự\r\n        date = date < 10 ? `0${date}` : date;\r\n        month = month < 10 ? `0${month}` : month;\r\n        return `${date}-${month}-${year}`;\r\n        // return `${year}-${month}-${date}`;\r\n      } else {\r\n        return \"\";\r\n      }\r\n    },\r\n\r\n\r\n    formatDate1(dateOfBirth) {\r\n      if (dateOfBirth) {\r\n        // chuyển từ dạng string sang dạng Date\r\n        dateOfBirth = new Date(dateOfBirth);\r\n        // lấy ngày\r\n        let date = dateOfBirth.getDate();\r\n        // lấy tháng\r\n        let month = dateOfBirth.getMonth() + 1;\r\n        // lấy năm\r\n        let year = dateOfBirth.getFullYear();\r\n        // thêm số 0 vào trước nếu chỉ có một kí tự\r\n        date = date < 10 ? `0${date}` : date;\r\n        month = month < 10 ? `0${month}` : month;\r\n        return `${date}/${month}/${year}`;\r\n      } else {\r\n        return \"\";\r\n      }\r\n    },\r\n\r\n    /**\r\n     * thực hiện validate xem dữ liệu có bị trống hay không\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\r\n    validateCheckInput(event) {\r\n      //theo cách dùng thuần\r\n      //1. lấy ra giá trị input nhập vào\r\n      let value = event.currentTarget.value;\r\n      //  2. kiểm tra value có rỗng hay không\r\n      if (!value) {\r\n        // thêm class vào trong input\r\n        event.currentTarget.classList.add(\"d-input-error\");\r\n        // thêm câu cảnh báo khi hover\r\n        event.currentTarget.setAttribute(\r\n          \"title\",\r\n          \"thông tin không được để trống\"\r\n        );\r\n      } else {\r\n        event.currentTarget.classList.remove(\"d-input-error\");\r\n        event.currentTarget.setAttribute(\"title\", \"\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện kiểm tra xem email đã đúng định dạng hay chưa\r\n     * @param {event} event đối tượng được xây dựng sẵn trong Vue \r\n     * Author: HVDUNG (11/06/2022)\r\n     */\r\n    validateCheckEmail(event) {\r\n      //theo cách dùng thuần\r\n      //1. lấy ra giá trị input nhập vào\r\n      let value = event.currentTarget.value;\r\n      //  2. kiểm tra value có đụng định dạng hay không\r\n      if (value.trim() != \"\" && !this.checkEmail(value)) {\r\n        // thêm class vào trong input\r\n        event.currentTarget.classList.add(\"d-input-error\");\r\n        // thêm câu cảnh báo khi hover\r\n        event.currentTarget.setAttribute(\r\n          \"title\",\r\n          \"Email không đúng định dạng\"\r\n        );\r\n      } else {\r\n        event.currentTarget.classList.remove(\"d-input-error\");\r\n        event.currentTarget.setAttribute(\"title\", \"\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện kiểm tra email có đúng định dạng hay không\r\n     * @param {string} email email cuả nhân viên \r\n     * Author: HVDUNG (11./06/2022)\r\n     */\r\n    checkEmail(email) {\r\n      var res = /\\S+@\\S+\\.\\S+/;\r\n      return res.test(email);\r\n    },\r\n\r\n    /**\r\n     * Thực hiện lấy mã nhân viên mới\r\n     * Author: HVDUNG (24/06/2022)\r\n     */\r\n    async getNewEmployeeCode() {\r\n      try {\r\n        var me = this;\r\n        // nếu không có id thì gán lại employee là null\r\n        me.employee = {};\r\n        // gọi API lấy mã nhân viên\r\n        await axios\r\n          .get(\"http://localhost:22454/api/v1/Employees/NewEmployeeCode\")\r\n          .then(function (res) {\r\n            me.employee.EmployeeCode = res.data;\r\n            // thực hiện focus vào ô nhập liệu đầu tiên\r\n            document.getElementById(\"EmployeeCode\").focus();\r\n          })\r\n          .catch(function (res) {\r\n            console.log(res);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện validate dữ liệu cho thêm mới và cập nhật\r\n     * true: validate thành công\r\n     * false: validate có lỗi\r\n     * Author: HVDUNG (05/06/2022)\r\n     */\r\n    validate() {\r\n      var me = this;\r\n      //1. validate dữ liệu\r\n      var isValid = true;\r\n      var arrayErrors = [];\r\n      if (!me.employee.EmployeeCode) {\r\n        isValid = false;\r\n        arrayErrors.push(\"Mã nhân viên không được phép để trống\");\r\n      }\r\n      if (!me.employee.EmployeeName) {\r\n        isValid = false;\r\n        arrayErrors.push(\"Tên nhân viên không được phép để trống\");\r\n      }\r\n      if (!me.employee.DepartmentId) {\r\n        isValid = false;\r\n        arrayErrors.push(\"Phòng ban không được phép để trống\");\r\n      }\r\n      // convert về dạng ngày tháng thì mới có thể so sánh được\r\n      var dateCurrent = document.getElementById(\"date_timepicker_end\").value;\r\n      dateCurrent = new Date(dateCurrent);\r\n      if (dateCurrent > new Date()) {\r\n        isValid = false;\r\n        arrayErrors.push(\"Ngày sinh không được phép lớn hơn ngày hiện tại\");\r\n      }\r\n      if (me.employee.Email && !me.checkEmail(me.employee.Email)) {\r\n        isValid = false;\r\n        arrayErrors.push(\"Email không đúng định dạng\");\r\n      }\r\n      if (!isValid) {\r\n        //hiển thị thông báo validate không hợp lệ\r\n        let noticeDialog = document.getElementsByClassName(\"d-dialog-box\")[0];\r\n        let bodyTextNoticeDialog = noticeDialog.querySelector(\".d-dialog-body\");\r\n        bodyTextNoticeDialog.innerHTML = \"\";\r\n        //append nội dung thông báo\r\n        arrayErrors.forEach((errorMsg) => {\r\n          var el = document.createElement(\"div\");\r\n          el.innerHTML = `${errorMsg}`;\r\n          bodyTextNoticeDialog.append(el);\r\n        });\r\n        document.getElementsByClassName(\"d-dialog-box\")[0].style.display =\r\n          \"block\";\r\n        return;\r\n      }\r\n      return isValid;\r\n    },\r\n\r\n    /**\r\n     * Thực hiện thêm mới nhân viên\r\n     * nhân viên được thêm mới\r\n     * Author: HVDUNG (05/06/2022)\r\n     */\r\n    async addEmployee() {\r\n      var me = this;\r\n      document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\r\n      // gán một positionId mặc định cho employee\r\n      me.employee.PositionId = \"25c6c36e-1668-7d10-6e09-bf1378b8dc91\";\r\n      await axios\r\n        .post(\"http://localhost:22454/api/v1/Employees\", me.employee)\r\n        .then(function (res) {\r\n          console.log(res);\r\n          // dùng tạm thời => phải dùng toast msg\r\n        })\r\n        .catch(function (res) {\r\n          let error = res.response.status;\r\n          switch (error) {\r\n            case 400:\r\n            case 500:\r\n              // hiển thị thông báo lỗi khi thêm mới\r\n              console.log(res.response.data);\r\n              alert(res.response.data[\"userMsg\"]);\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n        });\r\n\r\n      // thực hiện cập nhật lại dữ liệu lên giao diện\r\n      try {\r\n        // hiển thị loadding\r\n        document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\r\n        console.log(me.pageNumberSelected);\r\n        await axios\r\n          .get(`http://localhost:22454/api/v1/Employees/filter?pageSize=${me.pageSize}&pageNumber=${me.pageNumberSelected}&employeeFilter=${me.textSearch}`)\r\n          .then((response) => {\r\n            me.employees = response.data.Data;\r\n            me.$emit(\"changeValueEmployees\", me.employees);\r\n            me.$emit(\"changeCount\", response.data.TotalRecords);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      //ẩn loading\r\n      document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\r\n\r\n    },\r\n\r\n    /**\r\n     * Thực hiện cập nhật thông tin nhân viên\r\n     * thông tin nhân viên được cập nhật\r\n     * Author: HVDUNG (05/06/2022)\r\n     */\r\n    async updateEmployee() {\r\n      var me = this;\r\n      // 3.2 thực hiện update nhân viên\r\n      document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\r\n      await axios\r\n        .put(\r\n          `http://localhost:22454/api/v1/Employees/${me.employeeIdSelected}`,\r\n          me.employee\r\n        )\r\n        .then(function (res) {\r\n          console.log(res);\r\n        })\r\n        .catch(function (res) {\r\n          console.log(res);\r\n        });\r\n      // thực hiện cập nhật lại dữ liệu lên giao diện\r\n      try {\r\n        // hiển thị loadding\r\n        document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\r\n        console.log(me.pageNumberSelected);\r\n        await axios\r\n          .get(`http://localhost:22454/api/v1/Employees/filter?pageSize=${me.pageSize}&pageNumber=${me.pageNumberSelected}&employeeFilter=${me.textSearch}`)\r\n          .then((response) => {\r\n            me.employees = response.data.Data;\r\n            me.$emit(\"changeValueEmployees\", me.employees);\r\n            me.$emit(\"changeCount\", response.data.TotalRecords);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      //ẩn loading\r\n      document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\r\n    },\r\n  },\r\n\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n@import url(../../style/css/page/employee-info.css);\r\n@import url(../../style/css/icon/icon.css);\r\n</style>"]},"metadata":{},"sourceType":"module"}