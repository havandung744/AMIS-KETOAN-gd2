{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  /**\r\n   * employeeSelected để nhận biết sự thay đổi khi click vào và update lại dữ liệu runtime\r\n   * employeeIdSelected để nhận về id của đối tượng được click\r\n   * formMode để nhận biết là thêm mới hay update\r\n   */\n  props: [\"employeeSelected\", \"employeeIdSelected\", \"formMode\"],\n\n  data() {\n    return {\n      employee: {},\n      changeEmployeeIdSelected: null\n    };\n  },\n\n  /**\r\n   * beforeupdate dữ liệu thay đổi runtime (dữ liệu được quét liên tục khi có sự thay đổi)\r\n   * nếu không tương tác với các thành phần được gọi trong beforeupdate thì nó sẽ không được thực hiện\r\n   * => là yếu điểm của nó  (đây không phải là dữ liệu tối ưu)\r\n   */\n  beforeUpdate() {// có thể áp dụng thử để làm chức năng tìm kiếm\n  },\n\n  // giống như camare theo dõi sự thay đổi của các phương thức chứa trong nó\n  watch: {\n    changeEmployeeIdSelected: function () {\n      this.changeEmployeeIdSelected = {};\n      document.getElementById(\"EmployeeCode\").focus();\n    },\n\n    /**\r\n     * thực hiện lấy dữ liệu từ cliend và trả về cho form chi tiết => dữ liệu được binding trực tiếp luôn khi sửa\r\n     *  (không lấy đc dữ liệu mới nhất)\r\n     * không cần thực hiện loading lại dữ liệu\r\n     * @param {object} value là object nhân được khi click\r\n     */\n    // employeeSelected: function (value) {\n    //   // tận dụng sự thay đổi mỗi khi hàm watch thực hiện ta sữ thực hiện building luôn dữ liệu\n    //   //gán dữ liệu lại cho employee bằng chính employeeselected được chọn\n    //   this.employee = value;\n    //   // forcus vào ô nhập liệu đầu tiên\n    //   document.getElementById(\"EmployeeCode\").focus();\n    // },\n\n    /**\r\n     * thực hiện lấy dữ liệu trực tiếp từ server về thông qua api => dữ liệu luôn là mới nhất(mất thời gian chờ đợi)\r\n     * phải thực hiện loading lại dữ liệu nếu thêm mới, update, sửa thành công\r\n     */\n    employeeIdSelected: function (value) {\n      // kiểm tra xem id có tồn tại hay không\n      var me = this;\n\n      if (value) {\n        axios.get(`https://amis.manhnv.net/api/v1/Employees/${me.employeeIdSelected}`).then(function (res) {\n          switch (res.status) {\n            case 200:\n              // thực hiện focus vào ô nhập liệu đầu tiên\n              // document.getElementById(\"EmployeeCode\").focus();\n              me.changeEmployeeIdSelected = me.employeeIdSelected; // gán lại data cho employee detail\n\n              me.employee = res.data;\n              me.employee.DateOfBirth = me.formatDate(me.employee.DateOfBirth); //gán lại ngày cấp cho employee detail\n\n              me.employee.IdentityDate = me.formatDate(me.employee.IdentityDate);\n              break;\n\n            case 201:\n              break;\n\n            default:\n              break;\n          }\n        }).catch(function (res) {\n          console.log(res);\n        });\n      } else {\n        // nếu không có id thì gán lại employee là null\n        me.employee = {}; // gán lại dateOfBirth là null\n\n        me.dateOfBirth = null; // gọi API lấy mã nhân viên\n\n        axios.get(\"https://amis.manhnv.net/api/v1/Employees/NewEmployeeCode\").then(function (res) {\n          me.employee.EmployeeCode = res.data; // thực hiện focus vào ô nhập liệu đầu tiên\n          // document.getElementById(\"EmployeeCode\").focus();\n        }).catch(function (res) {\n          console.log(res);\n        });\n      }\n    }\n  },\n  methods: {\n    /**\r\n     * thực hiện focus vào ô nhập liệu đầu tiên khi nó đến input cuối cùng\r\n     * Author: HVDUNG (03/06/2022)\r\n     */\n    focusInputFirst() {\n      document.getElementById(\"EmployeeCode\").focus();\n    },\n\n    /**\r\n     * Thực hiện format lại ngày tháng để có thể hiển thị được trên form detail\r\n     * Author: HVDUNG (03/06/2022)\r\n     */\n    formatDate(dateOfBirth) {\n      if (dateOfBirth) {\n        // chuyển từ dạng string sang dạng Date\n        dateOfBirth = new Date(dateOfBirth); // lấy ngày\n\n        let date = dateOfBirth.getDate(); // lấy tháng\n\n        let month = dateOfBirth.getMonth() + 1; // lấy năm\n\n        let year = dateOfBirth.getFullYear(); // thêm số 0 vào trước nếu chỉ có một kí tự\n\n        date = date < 10 ? `0${date}` : date;\n        month = month < 10 ? `0${month}` : month;\n        return `${year}-${month}-${date}`;\n      } else {\n        return \"\";\n      }\n    },\n\n    /**\r\n     * thực hiện validate xem dữ liệu có bị trống hay không\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\n    validateCheckInput(event) {\n      //theo cách dùng thuần\n      //1. lấy ra giá trị input nhập vào\n      let value = event.currentTarget.value; //  2. kiểm tra value có rỗng hay không\n\n      if (!value) {\n        // thêm class vào trong input\n        event.currentTarget.classList.add(\"d-input-error\"); // thêm câu cảnh báo khi hover\n\n        event.currentTarget.setAttribute(\"title\", \"thông tin không được để trống\");\n      } else {\n        event.currentTarget.classList.remove(\"d-input-error\");\n        event.currentTarget.setAttribute(\"title\", \"\");\n      }\n    },\n\n    async created() {\n      try {\n        var me = this;\n        await axios.get(\"https://amis.manhnv.net/api/v1/Employees\").then(response => {\n          me.employees = response.data;\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    /**\r\n     * thực hiện lưu khi người dùng click nứt lưu\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\n    async btnSaveOnClick() {\n      var me = this; //1. validate dữ liệu\n\n      var isValid = true;\n      var arrayErrors = [];\n\n      if (!me.employee.EmployeeCode) {\n        isValid = false;\n        arrayErrors.push(\"Mã nhân viên không được phép để trống\");\n      }\n\n      if (!me.employee.EmployeeName) {\n        isValid = false;\n        arrayErrors.push(\"Tên nhân viên không được phép để trống\");\n      }\n\n      if (!me.employee.DepartmentId) {\n        isValid = false;\n        arrayErrors.push(\"Phòng ban không được phép để trống\");\n      } // convert về dạng ngày tháng thì mới có thể so sánh được\n\n\n      var dateCurrent = document.getElementById(\"date_timepicker_end\").value;\n      dateCurrent = new Date(dateCurrent);\n\n      if (dateCurrent > new Date()) {\n        isValid = false;\n        arrayErrors.push(\"Ngày sinh không được phép lớn hơn ngày hiện tại\");\n      }\n\n      if (!isValid) {\n        //hiển thị thông báo validate không hợp lệ\n        let noticeDialog = document.getElementsByClassName(\"d-dialog-box\")[0];\n        let bodyTextNoticeDialog = noticeDialog.querySelector(\".d-dialog-body\");\n        bodyTextNoticeDialog.innerHTML = \"\"; //append nội dung thông báo\n\n        arrayErrors.forEach(errorMsg => {\n          var el = document.createElement(\"div\");\n          el.innerHTML = `-${errorMsg}`;\n          bodyTextNoticeDialog.append(el);\n        });\n        document.getElementsByClassName(\"d-dialog-box\")[0].style.display = \"block\";\n        return;\n      }\n\n      if (isValid) {\n        //3. gọi api thực hiện thêm mới hoặc update\n        if (me.formMode == 1) {\n          //thực hiện loading lại dữ liệu\n          document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\n          await axios.post(\"https://amis.manhnv.net/api/v1/Employees\", me.employee).then(function (res) {\n            console.log(res); // dùng tạm thời => phải dùng toast msg\n          }).catch(function (res) {\n            let error = res.response.status;\n\n            switch (error) {\n              case 400:\n              case 500:\n                // hiển thị thông báo lỗi khi thêm mới\n                alert(res.response.data[\"userMsg\"]);\n                break;\n\n              default:\n                break;\n            }\n          });\n        } else {\n          //thực hiện loading lại dữ liệu\n          document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\n          await axios.put(`https://amis.manhnv.net/api/v1/Employees/${me.employeeIdSelected}`, me.employee).then(function (res) {\n            console.log(res);\n          }).catch(function (res) {\n            console.log(res);\n          });\n        }\n\n        await axios.get(`https://amis.manhnv.net/api/v1/Employees`).then(function (res) {\n          me.employees = res.data;\n          me.$emit(\"changeValueEmployees\", me.employees);\n          document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\n        }).catch(function (res) {\n          document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\n          console.log(res);\n        }); // thực hiện đóng form chi tiết\n\n        this.$emit(\"isShowDialog\");\n      } //2. build object thông tin nhân viên\n      //4. nếu thêm mới thành công thì hiện toast msg thông báo thành công\n      //5. nếu có lỗi validate hoặc lỗi từ backend thì hiển thị thông báo tương ứng\n\n    },\n\n    /**\r\n     * Thực hiện đóng form chi tiết khi click\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\n    btnCloseOnClick() {\n      this.$emit(\"isShowDialog\");\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","props","data","employee","changeEmployeeIdSelected","beforeUpdate","watch","document","getElementById","focus","employeeIdSelected","value","me","get","then","res","status","DateOfBirth","formatDate","IdentityDate","catch","console","log","dateOfBirth","EmployeeCode","methods","focusInputFirst","Date","date","getDate","month","getMonth","year","getFullYear","validateCheckInput","event","currentTarget","classList","add","setAttribute","remove","created","response","employees","error","btnSaveOnClick","isValid","arrayErrors","push","EmployeeName","DepartmentId","dateCurrent","noticeDialog","getElementsByClassName","bodyTextNoticeDialog","querySelector","innerHTML","forEach","errorMsg","el","createElement","append","style","display","formMode","post","alert","put","$emit","btnCloseOnClick"],"sourceRoot":"","sources":["C:\\Users\\hdung\\source\\repos\\web2022_04\\Vue\\amis-ketoan\\src\\components\\page\\EmployeeDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-employee-box\">\r\n    <div class=\"d-employee-box-info\">\r\n      <div class=\"header\">\r\n        <div class=\"header-text\">THÔNG TIN NHÂN VIÊN</div>\r\n        <div class=\"header-content\">\r\n          <div class=\"header-checkbox\">\r\n            <input type=\"checkbox\" style=\"width: 18px; height: 18px\" /><div class=\"header-checkbox-content\">Là khách hàng</div>\r\n          </div>\r\n          <div class=\"header-checkbox\">\r\n            <input type=\"checkbox\" style=\"width: 18px; height: 18px\"/><div class=\"header-checkbox-content\">Là nhà cung cấp</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"icon_close header-close\" @click=\"btnCloseOnClick\"></div>\r\n      </div>\r\n      <div class=\"content\">\r\n        <div class=\"content-info\">\r\n          <div class=\"content-info-left\">\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\"\r\n                  >Mã nhân viên<span style=\"color: red\">*</span></label\r\n                ><br />\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"employee.EmployeeCode\"\r\n                  class=\"d-input\"\r\n                  id=\"EmployeeCode\"\r\n                  @blur=\"validateCheckInput\"\r\n                  tabindex=\"1\"\r\n                  style=\"width: 150px\"\r\n                />\r\n              </div>\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Họ tên<span style=\"color: red\">*</span></label\r\n                ><br />\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"employee.EmployeeName\"\r\n                  class=\"d-input\"\r\n                  id=\"EmployeeName\"\r\n                  @blur=\"validateCheckInput\"\r\n                  tabindex=\"2\"\r\n                  style=\"width: 235px\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">đơn vị</label><br />\r\n                <select\r\n                  tabindex=\"7\"\r\n                  v-model=\"employee.DepartmentId\"\r\n                  class=\"cbxDepartment\"\r\n                >\r\n                  <option value=\"142cb08f-7c31-21fa-8e90-67245e8b283e\">\r\n                    phòng nhân sự\r\n                  </option>\r\n                  <option value=\"17120d02-6ab5-3e43-18cb-66948daf6128\">\r\n                    phòng tuyển sinh\r\n                  </option>\r\n                  <option value=\"469b3ece-744a-45d5-957d-e8c757976496\">\r\n                    phòng sản xuất\r\n                  </option>\r\n                  <option value=\"4e272fc4-7875-78d6-7d32-6a1673ffca7c\">\r\n                    phòng đào tạo\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Chức danh</label><br />\r\n                <input\r\n                  type=\"input\"\r\n                  class=\"d-input\"\r\n                  v-model=\"employee.EmployeePosition\"\r\n                  tabindex=\"10\"\r\n                  style=\"width: 391px\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"content-info-right\">\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Ngày sinh</label><br />\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"date_timepicker_end\"\r\n                  v-model=\"employee.DateOfBirth\"\r\n                  class=\"d-input\"\r\n                  tabindex=\"3\"\r\n                  style=\"width: 161px\"\r\n                />\r\n              </div>\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Giới tính</label><br />\r\n                <input\r\n                  name=\"gender\"\r\n                  type=\"radio\"\r\n                  value=\"1\"\r\n                  tabindex=\"4\"\r\n                  v-model=\"employee.Gender\"\r\n                />\r\n                <label for=\"\" style=\"margin-right: 8px\">Nam</label>\r\n                <input\r\n                  name=\"gender\"\r\n                  type=\"radio\"\r\n                  value=\"0\"\r\n                  tabindex=\"5\"\r\n                  v-model=\"employee.Gender\"\r\n                />\r\n                <label for=\"\" style=\"margin-right: 8px\">Nữ</label>\r\n                <input\r\n                  name=\"gender\"\r\n                  type=\"radio\"\r\n                  value=\"2\"\r\n                  tabindex=\"6\"\r\n                  v-model=\"employee.Gender\"\r\n                />\r\n                <label for=\"\">Khác</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Số CMND</label><br />\r\n                <input\r\n                  type=\"input\"\r\n                  v-model=\"employee.IdentityNumber\"\r\n                  class=\"d-input\"\r\n                  tabindex=\"8\"\r\n                  style=\"width: 245px\"\r\n                />\r\n              </div>\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Ngày cấp</label><br />\r\n                <input\r\n                  type=\"date\"\r\n                  v-model=\"employee.IdentityDate\"\r\n                  class=\"d-input\"\r\n                  tabindex=\"9\"\r\n                  style=\"width: 140px\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Nơi cấp</label><br />\r\n                <input\r\n                  type=\"input\"\r\n                  v-model=\"employee.IdentityPlace\"\r\n                  class=\"d-input\"\r\n                  tabindex=\"11\"\r\n                  style=\"width: 391px\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"info-input-tr\" style=\"margin-top: 40px\">\r\n          <div class=\"info-input\">\r\n            <label for=\"\">Địa chỉ</label>\r\n            <input\r\n              type=\"input\"\r\n              class=\"d-input\"\r\n              v-model=\"employee.Address\"\r\n              tabindex=\"12\"\r\n              style=\"width: 812px\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"content-info-bottom\">\r\n          <div class=\"info-input-tr\">\r\n            <div class=\"info-input\">\r\n              <label for=\"\">ĐT di động</label><br />\r\n              <input\r\n                type=\"text\"\r\n                v-model=\"employee.PhoneNumber\"\r\n                class=\"d-input\"\r\n                id=\"EmployeeCode\"\r\n                tabindex=\"13\"\r\n                style=\"width: 150px\"\r\n              />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">ĐT cố định</label><br />\r\n              <input\r\n                type=\"text\"\r\n                class=\"d-input\"\r\n                id=\"EmployeeName\"\r\n                v-model=\"employee.TelephoneNumber\"\r\n                tabindex=\"14\"\r\n                style=\"width: 235px\"\r\n              />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Email</label><br />\r\n              <input\r\n                type=\"text\"\r\n                v-model=\"employee.Email\"\r\n                class=\"d-input\"\r\n                id=\"EmployeeName\"\r\n                tabindex=\"15\"\r\n                style=\"width: 235px\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"info-input-tr\">\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Tài khoản ngân hàng</label><br />\r\n              <input\r\n                type=\"text\"\r\n                class=\"d-input\"\r\n                id=\"EmployeeCode\"\r\n                v-model=\"employee.BankAccountNumber\"\r\n                tabindex=\"16\"\r\n                style=\"width: 150px\"\r\n              />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Tên ngân hàng</label><br />\r\n              <input\r\n                type=\"text\"\r\n                class=\"d-input\"\r\n                id=\"EmployeeName\"\r\n                v-model=\"employee.BankName\"\r\n                tabindex=\"17\"\r\n                style=\"width: 235px\"\r\n              />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Chi nhánh</label><br />\r\n              <input\r\n                type=\"text\"\r\n                class=\"d-input\"\r\n                id=\"EmployeeName\"\r\n                v-model=\"employee.BankBranchName\"\r\n                tabindex=\"18\"\r\n                style=\"width: 235px\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"footer\">\r\n          <div class=\"footer-line\"></div>\r\n          <div class=\"footer-button\">\r\n            <button\r\n              class=\"d-btn d-btn-cancel d-btn-footer-left\"\r\n              id=\"d-btn-close\"\r\n              tabindex=\"21\"\r\n              @blur=\"focusInputFirst\"\r\n            >\r\n              Hủy\r\n            </button>\r\n            <button\r\n              class=\"d-btn d-btn-save\"\r\n              id=\"d-btn-save\"\r\n              tabindex=\"20\"\r\n              @click=\"btnSaveOnClick\"\r\n            >\r\n              Cất\r\n            </button>\r\n            <button\r\n              class=\"d-btn d-btn-save-add\"\r\n              id=\"d-btn-save-add\"\r\n              tabindex=\"19\"\r\n            >\r\n              Cất và Thêm\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  /**\r\n   * employeeSelected để nhận biết sự thay đổi khi click vào và update lại dữ liệu runtime\r\n   * employeeIdSelected để nhận về id của đối tượng được click\r\n   * formMode để nhận biết là thêm mới hay update\r\n   */\r\n  props: [\"employeeSelected\", \"employeeIdSelected\", \"formMode\"],\r\n  data() {\r\n    return {\r\n      employee: {},\r\n      changeEmployeeIdSelected: null\r\n    };\r\n  },\r\n\r\n  /**\r\n   * beforeupdate dữ liệu thay đổi runtime (dữ liệu được quét liên tục khi có sự thay đổi)\r\n   * nếu không tương tác với các thành phần được gọi trong beforeupdate thì nó sẽ không được thực hiện\r\n   * => là yếu điểm của nó  (đây không phải là dữ liệu tối ưu)\r\n   */\r\n  beforeUpdate() {\r\n    // có thể áp dụng thử để làm chức năng tìm kiếm\r\n  },\r\n  // giống như camare theo dõi sự thay đổi của các phương thức chứa trong nó\r\n  watch: {\r\n\r\n    changeEmployeeIdSelected: function(){\r\n      this.changeEmployeeIdSelected={};\r\n        document.getElementById(\"EmployeeCode\").focus();\r\n    },\r\n\r\n    /**\r\n     * thực hiện lấy dữ liệu từ cliend và trả về cho form chi tiết => dữ liệu được binding trực tiếp luôn khi sửa\r\n     *  (không lấy đc dữ liệu mới nhất)\r\n     * không cần thực hiện loading lại dữ liệu\r\n     * @param {object} value là object nhân được khi click\r\n     */\r\n    // employeeSelected: function (value) {\r\n    //   // tận dụng sự thay đổi mỗi khi hàm watch thực hiện ta sữ thực hiện building luôn dữ liệu\r\n    //   //gán dữ liệu lại cho employee bằng chính employeeselected được chọn\r\n    //   this.employee = value;\r\n    //   // forcus vào ô nhập liệu đầu tiên\r\n    //   document.getElementById(\"EmployeeCode\").focus();\r\n    // },\r\n\r\n    /**\r\n     * thực hiện lấy dữ liệu trực tiếp từ server về thông qua api => dữ liệu luôn là mới nhất(mất thời gian chờ đợi)\r\n     * phải thực hiện loading lại dữ liệu nếu thêm mới, update, sửa thành công\r\n     */\r\n    employeeIdSelected: function (value) {\r\n      // kiểm tra xem id có tồn tại hay không\r\n      var me = this;\r\n      if (value) {\r\n        axios\r\n          .get(\r\n            `https://amis.manhnv.net/api/v1/Employees/${me.employeeIdSelected}`\r\n          )\r\n          .then(function (res) {\r\n            switch (res.status) {\r\n              case 200:\r\n                // thực hiện focus vào ô nhập liệu đầu tiên\r\n                // document.getElementById(\"EmployeeCode\").focus();\r\n                me.changeEmployeeIdSelected = me.employeeIdSelected;\r\n                // gán lại data cho employee detail\r\n                me.employee = res.data;\r\n                me.employee.DateOfBirth = me.formatDate(\r\n                  me.employee.DateOfBirth\r\n                );\r\n                //gán lại ngày cấp cho employee detail\r\n                me.employee.IdentityDate = me.formatDate(\r\n                  me.employee.IdentityDate\r\n                );\r\n                break;\r\n              case 201:\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n          })\r\n          .catch(function (res) {\r\n            console.log(res);\r\n          });\r\n      } else {\r\n        // nếu không có id thì gán lại employee là null\r\n        me.employee = {};\r\n        // gán lại dateOfBirth là null\r\n        me.dateOfBirth = null;\r\n        // gọi API lấy mã nhân viên\r\n        axios\r\n          .get(\"https://amis.manhnv.net/api/v1/Employees/NewEmployeeCode\")\r\n          .then(function (res) {\r\n            me.employee.EmployeeCode = res.data;\r\n            // thực hiện focus vào ô nhập liệu đầu tiên\r\n            // document.getElementById(\"EmployeeCode\").focus();\r\n          })\r\n          .catch(function (res) {\r\n            console.log(res);\r\n          });\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    /**\r\n     * thực hiện focus vào ô nhập liệu đầu tiên khi nó đến input cuối cùng\r\n     * Author: HVDUNG (03/06/2022)\r\n     */\r\n    focusInputFirst() {\r\n      document.getElementById(\"EmployeeCode\").focus();\r\n    },\r\n    /**\r\n     * Thực hiện format lại ngày tháng để có thể hiển thị được trên form detail\r\n     * Author: HVDUNG (03/06/2022)\r\n     */\r\n    formatDate(dateOfBirth) {\r\n      if (dateOfBirth) {\r\n        // chuyển từ dạng string sang dạng Date\r\n        dateOfBirth = new Date(dateOfBirth);\r\n        // lấy ngày\r\n        let date = dateOfBirth.getDate();\r\n        // lấy tháng\r\n        let month = dateOfBirth.getMonth() + 1;\r\n        // lấy năm\r\n        let year = dateOfBirth.getFullYear();\r\n        // thêm số 0 vào trước nếu chỉ có một kí tự\r\n        date = date < 10 ? `0${date}` : date;\r\n        month = month < 10 ? `0${month}` : month;\r\n        return `${year}-${month}-${date}`;\r\n      } else {\r\n        return \"\";\r\n      }\r\n    },\r\n    /**\r\n     * thực hiện validate xem dữ liệu có bị trống hay không\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\r\n    validateCheckInput(event) {\r\n      //theo cách dùng thuần\r\n      //1. lấy ra giá trị input nhập vào\r\n      let value = event.currentTarget.value;\r\n      //  2. kiểm tra value có rỗng hay không\r\n      if (!value) {\r\n        // thêm class vào trong input\r\n        event.currentTarget.classList.add(\"d-input-error\");\r\n        // thêm câu cảnh báo khi hover\r\n        event.currentTarget.setAttribute(\r\n          \"title\",\r\n          \"thông tin không được để trống\"\r\n        );\r\n      } else {\r\n        event.currentTarget.classList.remove(\"d-input-error\");\r\n        event.currentTarget.setAttribute(\"title\", \"\");\r\n      }\r\n    },\r\n\r\n    async created() {\r\n      try {\r\n        var me = this;\r\n        await axios\r\n          .get(\"https://amis.manhnv.net/api/v1/Employees\")\r\n          .then((response) => {\r\n            me.employees = response.data;\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    /**\r\n     * thực hiện lưu khi người dùng click nứt lưu\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\r\n    async btnSaveOnClick() {\r\n      var me = this;\r\n      //1. validate dữ liệu\r\n      var isValid = true;\r\n      var arrayErrors = [];\r\n      if (!me.employee.EmployeeCode) {\r\n        isValid = false;\r\n        arrayErrors.push(\"Mã nhân viên không được phép để trống\");\r\n      }\r\n      if (!me.employee.EmployeeName) {\r\n        isValid = false;\r\n        arrayErrors.push(\"Tên nhân viên không được phép để trống\");\r\n      }\r\n      if (!me.employee.DepartmentId) {\r\n        isValid = false;\r\n        arrayErrors.push(\"Phòng ban không được phép để trống\");\r\n      }\r\n      // convert về dạng ngày tháng thì mới có thể so sánh được\r\n      var dateCurrent = document.getElementById(\"date_timepicker_end\").value;\r\n      dateCurrent = new Date(dateCurrent);\r\n      if (dateCurrent > new Date()) {\r\n        isValid = false;\r\n        arrayErrors.push(\"Ngày sinh không được phép lớn hơn ngày hiện tại\");\r\n      }\r\n      if (!isValid) {\r\n        //hiển thị thông báo validate không hợp lệ\r\n        let noticeDialog = document.getElementsByClassName(\"d-dialog-box\")[0];\r\n        let bodyTextNoticeDialog = noticeDialog.querySelector(\".d-dialog-body\");\r\n        bodyTextNoticeDialog.innerHTML = \"\";\r\n        //append nội dung thông báo\r\n        arrayErrors.forEach((errorMsg) => {\r\n          var el = document.createElement(\"div\");\r\n          el.innerHTML = `-${errorMsg}`;\r\n          bodyTextNoticeDialog.append(el);\r\n        });\r\n        document.getElementsByClassName(\"d-dialog-box\")[0].style.display =\r\n          \"block\";\r\n        return;\r\n      }\r\n      if (isValid) {\r\n        //3. gọi api thực hiện thêm mới hoặc update\r\n        if (me.formMode == 1) {\r\n          //thực hiện loading lại dữ liệu\r\n          document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\r\n          await axios\r\n            .post(\"https://amis.manhnv.net/api/v1/Employees\", me.employee)\r\n            .then(function (res) {\r\n              console.log(res);\r\n              // dùng tạm thời => phải dùng toast msg\r\n            })\r\n            .catch(function (res) {\r\n              let error = res.response.status;\r\n              switch (error) {\r\n                case 400:\r\n                case 500:\r\n                  // hiển thị thông báo lỗi khi thêm mới\r\n                  alert(res.response.data[\"userMsg\"]);\r\n                  break;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            });\r\n        } else {\r\n          //thực hiện loading lại dữ liệu\r\n          document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\r\n          await axios\r\n            .put(\r\n              `https://amis.manhnv.net/api/v1/Employees/${me.employeeIdSelected}`,\r\n              me.employee\r\n            )\r\n            .then(function (res) {\r\n              console.log(res);\r\n            })\r\n            .catch(function (res) {\r\n              console.log(res);\r\n            });\r\n        }\r\n        await axios\r\n          .get(`https://amis.manhnv.net/api/v1/Employees`)\r\n          .then(function (res) {\r\n            me.employees = res.data;\r\n            me.$emit(\"changeValueEmployees\", me.employees);\r\n            document.getElementsByClassName(\"loading\")[0].style.display =\r\n              \"none\";\r\n          })\r\n          .catch(function (res) {\r\n            document.getElementsByClassName(\"loading\")[0].style.display =\r\n              \"none\";\r\n            console.log(res);\r\n          });\r\n        // thực hiện đóng form chi tiết\r\n        this.$emit(\"isShowDialog\");\r\n      }\r\n      //2. build object thông tin nhân viên\r\n\r\n      //4. nếu thêm mới thành công thì hiện toast msg thông báo thành công\r\n\r\n      //5. nếu có lỗi validate hoặc lỗi từ backend thì hiển thị thông báo tương ứng\r\n    },\r\n    /**\r\n     * Thực hiện đóng form chi tiết khi click\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\r\n    btnCloseOnClick() {\r\n      this.$emit(\"isShowDialog\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url(../../style/css/page/employee-info.css);\r\n@import url(../../style/css/icon/icon.css);\r\n</style>"]},"metadata":{},"sourceType":"module"}