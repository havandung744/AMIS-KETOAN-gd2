{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  /**\r\n   * employeeSelected để nhận biết sự thay đổi khi click vào và update lại dữ liệu runtime\r\n   * employeeIdSelected để nhận về id của đối tượng được click\r\n   * formMode để nhận biết là thêm mới hay update\r\n   */\n  props: [\"employeeSelected\", \"employeeIdSelected\", \"formMode\", \"employeesOfDetail\", \"pageSize\", \"pageNumberSelected\"],\n\n  data() {\n    return {\n      employee: {}\n    };\n  },\n\n  /**\r\n   * beforeupdate dữ liệu thay đổi runtime (dữ liệu được quét liên tục khi có sự thay đổi)\r\n   * nếu không tương tác với các thành phần được gọi trong beforeupdate thì nó sẽ không được thực hiện\r\n   * => là yếu điểm của nó  (đây không phải là dữ liệu tối ưu)\r\n   */\n  beforeUpdate() {// có thể áp dụng thử để làm chức năng tìm kiếm\n  },\n\n  // giống như camare theo dõi sự thay đổi của các phương thức chứa trong nó\n  watch: {\n    /**\r\n     * thực hiện lấy dữ liệu từ cliend và trả về cho form chi tiết => dữ liệu được binding trực tiếp luôn khi sửa\r\n     *  (không lấy đc dữ liệu mới nhất)\r\n     * không cần thực hiện loading lại dữ liệu\r\n     * @param {object} value là object nhân được khi click\r\n     */\n    // employeeSelected: function (value) {\n    //   // tận dụng sự thay đổi mỗi khi hàm watch thực hiện ta sữ thực hiện building luôn dữ liệu\n    //   //gán dữ liệu lại cho employee bằng chính employeeselected được chọn\n    //   this.employee = value;\n    //   // forcus vào ô nhập liệu đầu tiên\n    //   document.getElementById(\"EmployeeCode\").focus();\n    // },\n\n    /**\r\n     * thực hiện lấy dữ liệu trực tiếp từ server về thông qua api => dữ liệu luôn là mới nhất(mất thời gian chờ đợi)\r\n     * phải thực hiện loading lại dữ liệu nếu thêm mới, update, sửa thành công\r\n     */\n    employeeIdSelected: function (value) {\n      // kiểm tra xem id có tồn tại hay không\n      var me = this;\n\n      if (value) {\n        axios.get( // `https://amis.manhnv.net/api/v1/Employees/${me.employeeIdSelected}`\n        `http://localhost:22454/api/v1/Employees/${me.employeeIdSelected}`).then(function (res) {\n          switch (res.status) {\n            case 200:\n              // thực hiện focus vào ô nhập liệu đầu tiên\n              document.getElementById(\"EmployeeCode\").focus(); // gán lại data cho employee detail\n\n              me.employee = res.data;\n              me.employee.DateOfBirth = me.formatDate(me.employee.DateOfBirth); //gán lại ngày cấp cho employee detail\n\n              me.employee.IdentityDate = me.formatDate(me.employee.IdentityDate);\n              break;\n\n            case 201:\n              break;\n\n            default:\n              break;\n          }\n        }).catch(function (res) {\n          console.log(res);\n        });\n      } else {\n        try {\n          // nếu không có id thì gán lại employee là null\n          me.employee = {}; // gán lại dateOfBirth là null\n\n          me.dateOfBirth = null; // gọi API lấy mã nhân viên\n\n          axios.get(\"https://amis.manhnv.net/api/v1/Employees/NewEmployeeCode\").then(function (res) {\n            me.employee.EmployeeCode = res.data; // thực hiện focus vào ô nhập liệu đầu tiên\n\n            document.getElementById(\"EmployeeCode\").focus();\n          }).catch(function (res) {\n            console.log(res);\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n  },\n  methods: {\n    /**\r\n     * thực hiện focus vào ô nhập liệu đầu tiên khi nó đến input cuối cùng\r\n     * Author: HVDUNG (03/06/2022)\r\n     */\n    focusInputFirst() {\n      document.getElementById(\"EmployeeCode\").focus();\n    },\n\n    /**\r\n     * Thực hiện format lại ngày tháng để có thể hiển thị được trên form detail\r\n     * Author: HVDUNG (03/06/2022)\r\n     */\n    formatDate(dateOfBirth) {\n      if (dateOfBirth) {\n        // chuyển từ dạng string sang dạng Date\n        dateOfBirth = new Date(dateOfBirth); // lấy ngày\n\n        let date = dateOfBirth.getDate(); // lấy tháng\n\n        let month = dateOfBirth.getMonth() + 1; // lấy năm\n\n        let year = dateOfBirth.getFullYear(); // thêm số 0 vào trước nếu chỉ có một kí tự\n\n        date = date < 10 ? `0${date}` : date;\n        month = month < 10 ? `0${month}` : month;\n        return `${year}-${month}-${date}`;\n      } else {\n        return \"\";\n      }\n    },\n\n    /**\r\n     * thực hiện validate xem dữ liệu có bị trống hay không\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\n    validateCheckInput(event) {\n      //theo cách dùng thuần\n      //1. lấy ra giá trị input nhập vào\n      let value = event.currentTarget.value; //  2. kiểm tra value có rỗng hay không\n\n      if (!value) {\n        // thêm class vào trong input\n        event.currentTarget.classList.add(\"d-input-error\"); // thêm câu cảnh báo khi hover\n\n        event.currentTarget.setAttribute(\"title\", \"thông tin không được để trống\");\n      } else {\n        event.currentTarget.classList.remove(\"d-input-error\");\n        event.currentTarget.setAttribute(\"title\", \"\");\n      }\n    },\n\n    /**\r\n     * Thực hiện kiểm tra xem email đã đúng định dạng hay chưa\r\n     * @param {event} event đối tượng được xây dựng sẵn trong Vue \r\n     * Author: HVDUNG (11/06/2022)\r\n     */\n    validateCheckEmail(event) {\n      //theo cách dùng thuần\n      //1. lấy ra giá trị input nhập vào\n      let value = event.currentTarget.value; //  2. kiểm tra value có đụng định dạng hay không\n\n      if (value.trim() != \"\" && !this.checkEmail(value)) {\n        // thêm class vào trong input\n        event.currentTarget.classList.add(\"d-input-error\"); // thêm câu cảnh báo khi hover\n\n        event.currentTarget.setAttribute(\"title\", \"Email không đúng định dạng\");\n      } else {\n        event.currentTarget.classList.remove(\"d-input-error\");\n        event.currentTarget.setAttribute(\"title\", \"\");\n      }\n    },\n\n    // async created() {\n    //   try {\n    //     var me = this;\n    //     await axios\n    //       // .get(\"https://amis.manhnv.net/api/v1/Employees\")\n    //       .get(\"http://localhost:22454/api/v1/Employees\")\n    //       .then((response) => {\n    //         me.employees = response.data;\n    //       })\n    //       .catch(function (error) {\n    //         console.log(error);\n    //       });\n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n    // },\n\n    /**\r\n     * thực hiện lưu khi người dùng click nứt lưu\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\n    async btnSaveOnClick() {\n      var me = this; //1. validate dữ liệu\n\n      var isValid = true;\n      var arrayErrors = [];\n\n      if (!me.employee.EmployeeCode) {\n        isValid = false;\n        arrayErrors.push(\"Mã nhân viên không được phép để trống\");\n      }\n\n      if (me.checkEmployeeCode(me.employee.EmployeeCode, this.formMode)) {\n        isValid = false;\n        arrayErrors.push(\"Mã nhân viên không được phép trùng lặp\");\n      }\n\n      if (!me.employee.EmployeeName) {\n        isValid = false;\n        arrayErrors.push(\"Tên nhân viên không được phép để trống\");\n      }\n\n      if (!me.employee.DepartmentId) {\n        isValid = false;\n        arrayErrors.push(\"Phòng ban không được phép để trống\");\n      } // convert về dạng ngày tháng thì mới có thể so sánh được\n\n\n      var dateCurrent = document.getElementById(\"date_timepicker_end\").value;\n      dateCurrent = new Date(dateCurrent);\n\n      if (dateCurrent > new Date()) {\n        isValid = false;\n        arrayErrors.push(\"Ngày sinh không được phép lớn hơn ngày hiện tại\");\n      }\n\n      if (me.employee.Email && !me.checkEmail(me.employee.Email)) {\n        isValid = false;\n        arrayErrors.push(\"Email không đúng định dạng\");\n      }\n\n      if (!isValid) {\n        //hiển thị thông báo validate không hợp lệ\n        let noticeDialog = document.getElementsByClassName(\"d-dialog-box\")[0];\n        let bodyTextNoticeDialog = noticeDialog.querySelector(\".d-dialog-body\");\n        bodyTextNoticeDialog.innerHTML = \"\"; //append nội dung thông báo\n\n        arrayErrors.forEach(errorMsg => {\n          var el = document.createElement(\"div\");\n          el.innerHTML = `-${errorMsg}`;\n          bodyTextNoticeDialog.append(el);\n        });\n        document.getElementsByClassName(\"d-dialog-box\")[0].style.display = \"block\";\n        return;\n      }\n\n      if (isValid) {\n        // 3. gọi api thực hiện thêm mới hoặc update nhân viên\n        // 3.1 thực hiện thêm mới nhân viên\n        if (me.formMode == 1) {\n          //thực hiện loading lại dữ liệu\n          document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\n          await axios.post(\"http://localhost:22454/api/v1/Employees\", me.employee).then(function (res) {\n            console.log(res); // dùng tạm thời => phải dùng toast msg\n          }).catch(function (res) {\n            let error = res.response.status;\n\n            switch (error) {\n              case 400:\n              case 500:\n                // hiển thị thông báo lỗi khi thêm mới\n                alert(res.response.data[\"userMsg\"]);\n                break;\n\n              default:\n                break;\n            }\n          });\n        } else {\n          // 3.2 thực hiện update nhân viên\n          document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\n          await axios.put(`http://localhost:22454/api/v1/Employees/${me.employeeIdSelected}`, me.employee).then(function (res) {\n            console.log(res);\n          }).catch(function (res) {\n            console.log(res);\n          });\n        } // await axios\n        //   .get(`https://amis.manhnv.net/api/v1/Employees`)\n        //   .then(function (res) {\n        //     me.employees = res.data;\n        //     me.$emit(\"changeValueEmployees\", me.employees);\n        //     document.getElementsByClassName(\"loading\")[0].style.display =\n        //       \"none\";\n        //   })\n        //   .catch(function (res) {\n        //     document.getElementsByClassName(\"loading\")[0].style.display =\n        //       \"none\";\n        //     console.log(res);\n        //   });\n        // thực hiện loadding lại dữ liệu\n\n\n        try {\n          debugger; // hiển thị loadding\n\n          document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\n          console.log(me.pageNumberSelected);\n          await axios.get(`http://localhost:22454/api/v1/Employees/filter?pageSize=${me.pageSize}&pageNumber=${me.pageNumberSelected}`).then(response => {\n            me.employees = response.data.Data;\n            me.$emit(\"changeValueEmployees\", me.employees);\n          }).catch(function (error) {\n            console.log(error);\n          });\n        } catch (error) {\n          console.log(error);\n        } // thực hiện đóng form chi tiết\n\n\n        this.$emit(\"isShowDialog\"); //ẩn loading\n\n        document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\n      }\n    },\n\n    /**\r\n     * Thực hiện kiểm tra email có đúng định dạng hay không\r\n     * @param {string} email email cuả nhân viên \r\n     * Author: HVDUNG (11./06/2022)\r\n     */\n    checkEmail(email) {\n      var res = /\\S+@\\S+\\.\\S+/;\n      return res.test(email);\n    },\n\n    /**\r\n     * Thực hiện kiểm tra mã nhân viên có bị trùng hay không trước khi thêm mới\r\n     * false: không trùng lặp\r\n     * true: trùng lặp\r\n     * Author: HVDUNG (11/06/2022)\r\n     */\n    checkEmployeeCode(employeeCode, formMode) {\n      if (formMode == 1) {\n        for (const employee of this.employeesOfDetail) {\n          if (employeeCode == employee.EmployeeCode) return true;\n        }\n\n        return false;\n      } else {\n        let count = 0;\n\n        for (const employee of this.employeesOfDetail) {\n          if (employeeCode == employee.EmployeeCode) count++;\n        }\n\n        if (employeeCode == this.employee.EmployeeCode) if (count == 0 || count == 1) return false;else return true;\n      }\n    },\n\n    /**\r\n     * Thực hiện đóng form chi tiết khi click\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\n    btnCloseOnClick() {\n      this.$emit(\"isShowDialog\");\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","props","data","employee","beforeUpdate","watch","employeeIdSelected","value","me","get","then","res","status","document","getElementById","focus","DateOfBirth","formatDate","IdentityDate","catch","console","log","dateOfBirth","EmployeeCode","error","methods","focusInputFirst","Date","date","getDate","month","getMonth","year","getFullYear","validateCheckInput","event","currentTarget","classList","add","setAttribute","remove","validateCheckEmail","trim","checkEmail","btnSaveOnClick","isValid","arrayErrors","push","checkEmployeeCode","formMode","EmployeeName","DepartmentId","dateCurrent","Email","noticeDialog","getElementsByClassName","bodyTextNoticeDialog","querySelector","innerHTML","forEach","errorMsg","el","createElement","append","style","display","post","response","alert","put","pageNumberSelected","pageSize","employees","Data","$emit","email","test","employeeCode","employeesOfDetail","count","btnCloseOnClick"],"sourceRoot":"","sources":["C:\\Users\\hdung\\source\\repos\\web2022_04\\Vue\\amis-ketoan\\src\\components\\page\\EmployeeDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-employee-box\">\r\n    <div class=\"d-employee-box-info\">\r\n      <div class=\"header\">\r\n        <div class=\"header-text\">THÔNG TIN NHÂN VIÊN</div>\r\n        <div class=\"header-content\">\r\n          <div class=\"header-checkbox\">\r\n            <input type=\"checkbox\" style=\"width: 18px; height: 18px\" />\r\n            <div class=\"header-checkbox-content\">Là khách hàng</div>\r\n          </div>\r\n          <div class=\"header-checkbox\">\r\n            <input type=\"checkbox\" style=\"width: 18px; height: 18px\" />\r\n            <div class=\"header-checkbox-content\">Là nhà cung cấp</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"icon_close header-close\" @click=\"btnCloseOnClick\"></div>\r\n      </div>\r\n      <div class=\"content\">\r\n        <div class=\"content-info\">\r\n          <div class=\"content-info-left\">\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Mã nhân viên<span style=\"color: red\">*</span></label><br />\r\n                <input type=\"text\" v-model=\"employee.EmployeeCode\" class=\"d-input\" id=\"EmployeeCode\"\r\n                  @blur=\"validateCheckInput\" tabindex=\"1\" style=\"width: 150px\" />\r\n              </div>\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Họ tên<span style=\"color: red\">*</span></label><br />\r\n                <input type=\"text\" v-model=\"employee.EmployeeName\" class=\"d-input\" id=\"EmployeeName\"\r\n                  @blur=\"validateCheckInput\" tabindex=\"2\" style=\"width: 235px\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Đơn vị</label><br />\r\n                <select tabindex=\"7\" v-model=\"employee.DepartmentId\" class=\"cbxDepartment\">\r\n                  <option value=\"142cb08f-7c31-21fa-8e90-67245e8b283e\">\r\n                    phòng nhân sự\r\n                  </option>\r\n                  <option value=\"17120d02-6ab5-3e43-18cb-66948daf6128\">\r\n                    phòng tuyển sinh\r\n                  </option>\r\n                  <option value=\"469b3ece-744a-45d5-957d-e8c757976496\">\r\n                    phòng sản xuất\r\n                  </option>\r\n                  <option value=\"4e272fc4-7875-78d6-7d32-6a1673ffca7c\">\r\n                    phòng đào tạo\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Chức danh</label><br />\r\n                <input type=\"input\" class=\"d-input\" v-model=\"employee.EmployeePosition\" tabindex=\"10\"\r\n                  style=\"width: 391px\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"content-info-right\">\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Ngày sinh</label><br />\r\n                <input type=\"date\" id=\"date_timepicker_end\" v-model=\"employee.DateOfBirth\" class=\"d-input\" tabindex=\"3\"\r\n                  style=\"width: 161px\" />\r\n              </div>\r\n              <div class=\"info-input\" id=\"d-radio\">\r\n                <label for=\"\" style=\"margin-left: 4px\">Giới tính</label><br />\r\n                <div class=\"info-input-box\">\r\n                  <div class=\"info-input-item\">\r\n                    <input name=\"gender\" type=\"radio\" value=\"1\" tabindex=\"4\" v-model=\"employee.Gender\" />\r\n                    <label for=\"\" style=\"margin-right: 8px\">Nam</label>\r\n                  </div>\r\n                  <div class=\"info-input-item\">\r\n                    <input name=\"gender\" type=\"radio\" value=\"0\" tabindex=\"5\" v-model=\"employee.Gender\" />\r\n                    <label for=\"\" style=\"margin-right: 8px\">Nữ</label>\r\n                  </div>\r\n                  <div class=\"info-input-item\">\r\n                    <input name=\"gender\" type=\"radio\" value=\"2\" tabindex=\"6\" v-model=\"employee.Gender\" />\r\n                    <label for=\"\">Khác</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Số CMND</label><br />\r\n                <input type=\"input\" v-model=\"employee.IdentityNumber\" class=\"d-input\" tabindex=\"8\"\r\n                  style=\"width: 245px\" />\r\n              </div>\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Ngày cấp</label><br />\r\n                <input type=\"date\" v-model=\"employee.IdentityDate\" class=\"d-input\" tabindex=\"9\" style=\"width: 140px\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"info-input-tr\">\r\n              <div class=\"info-input\">\r\n                <label for=\"\">Nơi cấp</label><br />\r\n                <input type=\"input\" v-model=\"employee.IdentityPlace\" class=\"d-input\" tabindex=\"11\"\r\n                  style=\"width: 391px\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"info-input-tr\" style=\"margin-top: 40px\">\r\n          <div class=\"info-input\">\r\n            <label for=\"\">Địa chỉ</label>\r\n            <input type=\"input\" class=\"d-input\" v-model=\"employee.Address\" tabindex=\"12\" style=\"width: 812px\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"content-info-bottom\">\r\n          <div class=\"info-input-tr\">\r\n            <div class=\"info-input\">\r\n              <label for=\"\">ĐT di động</label><br />\r\n              <input type=\"text\" v-model=\"employee.PhoneNumber\" class=\"d-input\" id=\"EmployeeCode\" tabindex=\"13\"\r\n                style=\"width: 150px\" />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">ĐT cố định</label><br />\r\n              <input type=\"text\" class=\"d-input\" id=\"EmployeeName\" v-model=\"employee.TelephoneNumber\" tabindex=\"14\"\r\n                style=\"width: 235px\" />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Email</label><br />\r\n              <input type=\"text\" v-model=\"employee.Email\" class=\"d-input\" id=\"EmployeeName\" tabindex=\"15\"\r\n                @blur=\"validateCheckEmail\" style=\"width: 235px\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"info-input-tr\">\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Tài khoản ngân hàng</label><br />\r\n              <input type=\"text\" class=\"d-input\" id=\"EmployeeCode\" v-model=\"employee.BankAccountNumber\" tabindex=\"16\"\r\n                style=\"width: 150px\" />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Tên ngân hàng</label><br />\r\n              <input type=\"text\" class=\"d-input\" id=\"EmployeeName\" v-model=\"employee.BankName\" tabindex=\"17\"\r\n                style=\"width: 235px\" />\r\n            </div>\r\n            <div class=\"info-input\">\r\n              <label for=\"\">Chi nhánh</label><br />\r\n              <input type=\"text\" class=\"d-input\" id=\"EmployeeName\" v-model=\"employee.BankBranchName\" tabindex=\"18\"\r\n                style=\"width: 235px\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"footer\">\r\n          <div class=\"footer-line\"></div>\r\n          <div class=\"footer-button\">\r\n            <button class=\"d-btn d-btn-cancel d-btn-footer-left\" id=\"d-btn-close\" tabindex=\"21\" @blur=\"focusInputFirst\">\r\n              Hủy\r\n            </button>\r\n            <button class=\"d-btn d-btn-save\" id=\"d-btn-save\" tabindex=\"20\" @click=\"btnSaveOnClick\">\r\n              Cất\r\n            </button>\r\n            <button class=\"d-btn d-btn-save-add\" id=\"d-btn-save-add\" tabindex=\"19\">\r\n              Cất và Thêm\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  /**\r\n   * employeeSelected để nhận biết sự thay đổi khi click vào và update lại dữ liệu runtime\r\n   * employeeIdSelected để nhận về id của đối tượng được click\r\n   * formMode để nhận biết là thêm mới hay update\r\n   */\r\n  props: [\"employeeSelected\", \"employeeIdSelected\", \"formMode\", \"employeesOfDetail\", \"pageSize\", \"pageNumberSelected\"],\r\n  data() {\r\n    return {\r\n      employee: {},\r\n    };\r\n  },\r\n\r\n  /**\r\n   * beforeupdate dữ liệu thay đổi runtime (dữ liệu được quét liên tục khi có sự thay đổi)\r\n   * nếu không tương tác với các thành phần được gọi trong beforeupdate thì nó sẽ không được thực hiện\r\n   * => là yếu điểm của nó  (đây không phải là dữ liệu tối ưu)\r\n   */\r\n  beforeUpdate() {\r\n    // có thể áp dụng thử để làm chức năng tìm kiếm\r\n  },\r\n  // giống như camare theo dõi sự thay đổi của các phương thức chứa trong nó\r\n  watch: {\r\n    /**\r\n     * thực hiện lấy dữ liệu từ cliend và trả về cho form chi tiết => dữ liệu được binding trực tiếp luôn khi sửa\r\n     *  (không lấy đc dữ liệu mới nhất)\r\n     * không cần thực hiện loading lại dữ liệu\r\n     * @param {object} value là object nhân được khi click\r\n     */\r\n    // employeeSelected: function (value) {\r\n    //   // tận dụng sự thay đổi mỗi khi hàm watch thực hiện ta sữ thực hiện building luôn dữ liệu\r\n    //   //gán dữ liệu lại cho employee bằng chính employeeselected được chọn\r\n    //   this.employee = value;\r\n    //   // forcus vào ô nhập liệu đầu tiên\r\n    //   document.getElementById(\"EmployeeCode\").focus();\r\n    // },\r\n\r\n    /**\r\n     * thực hiện lấy dữ liệu trực tiếp từ server về thông qua api => dữ liệu luôn là mới nhất(mất thời gian chờ đợi)\r\n     * phải thực hiện loading lại dữ liệu nếu thêm mới, update, sửa thành công\r\n     */\r\n    employeeIdSelected: function (value) {\r\n      // kiểm tra xem id có tồn tại hay không\r\n      var me = this;\r\n      if (value) {\r\n        axios\r\n          .get(\r\n            // `https://amis.manhnv.net/api/v1/Employees/${me.employeeIdSelected}`\r\n            `http://localhost:22454/api/v1/Employees/${me.employeeIdSelected}`\r\n\r\n          )\r\n          .then(function (res) {\r\n            switch (res.status) {\r\n              case 200:\r\n                // thực hiện focus vào ô nhập liệu đầu tiên\r\n                document.getElementById(\"EmployeeCode\").focus();\r\n                // gán lại data cho employee detail\r\n                me.employee = res.data;\r\n                me.employee.DateOfBirth = me.formatDate(\r\n                  me.employee.DateOfBirth\r\n                );\r\n                //gán lại ngày cấp cho employee detail\r\n                me.employee.IdentityDate = me.formatDate(\r\n                  me.employee.IdentityDate\r\n                );\r\n                break;\r\n              case 201:\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n          })\r\n          .catch(function (res) {\r\n            console.log(res);\r\n          });\r\n      } else {\r\n        try {\r\n          // nếu không có id thì gán lại employee là null\r\n          me.employee = {};\r\n          // gán lại dateOfBirth là null\r\n          me.dateOfBirth = null;\r\n          // gọi API lấy mã nhân viên\r\n          axios\r\n            .get(\"https://amis.manhnv.net/api/v1/Employees/NewEmployeeCode\")\r\n            .then(function (res) {\r\n              me.employee.EmployeeCode = res.data;\r\n              // thực hiện focus vào ô nhập liệu đầu tiên\r\n              document.getElementById(\"EmployeeCode\").focus();\r\n            })\r\n            .catch(function (res) {\r\n              console.log(res);\r\n            });\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    /**\r\n     * thực hiện focus vào ô nhập liệu đầu tiên khi nó đến input cuối cùng\r\n     * Author: HVDUNG (03/06/2022)\r\n     */\r\n    focusInputFirst() {\r\n      document.getElementById(\"EmployeeCode\").focus();\r\n    },\r\n    /**\r\n     * Thực hiện format lại ngày tháng để có thể hiển thị được trên form detail\r\n     * Author: HVDUNG (03/06/2022)\r\n     */\r\n    formatDate(dateOfBirth) {\r\n      if (dateOfBirth) {\r\n        // chuyển từ dạng string sang dạng Date\r\n        dateOfBirth = new Date(dateOfBirth);\r\n        // lấy ngày\r\n        let date = dateOfBirth.getDate();\r\n        // lấy tháng\r\n        let month = dateOfBirth.getMonth() + 1;\r\n        // lấy năm\r\n        let year = dateOfBirth.getFullYear();\r\n        // thêm số 0 vào trước nếu chỉ có một kí tự\r\n        date = date < 10 ? `0${date}` : date;\r\n        month = month < 10 ? `0${month}` : month;\r\n        return `${year}-${month}-${date}`;\r\n      } else {\r\n        return \"\";\r\n      }\r\n    },\r\n    /**\r\n     * thực hiện validate xem dữ liệu có bị trống hay không\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\r\n    validateCheckInput(event) {\r\n      //theo cách dùng thuần\r\n      //1. lấy ra giá trị input nhập vào\r\n      let value = event.currentTarget.value;\r\n      //  2. kiểm tra value có rỗng hay không\r\n      if (!value) {\r\n        // thêm class vào trong input\r\n        event.currentTarget.classList.add(\"d-input-error\");\r\n        // thêm câu cảnh báo khi hover\r\n        event.currentTarget.setAttribute(\r\n          \"title\",\r\n          \"thông tin không được để trống\"\r\n        );\r\n      } else {\r\n        event.currentTarget.classList.remove(\"d-input-error\");\r\n        event.currentTarget.setAttribute(\"title\", \"\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện kiểm tra xem email đã đúng định dạng hay chưa\r\n     * @param {event} event đối tượng được xây dựng sẵn trong Vue \r\n     * Author: HVDUNG (11/06/2022)\r\n     */\r\n    validateCheckEmail(event) {\r\n      //theo cách dùng thuần\r\n      //1. lấy ra giá trị input nhập vào\r\n      let value = event.currentTarget.value;\r\n      //  2. kiểm tra value có đụng định dạng hay không\r\n      if (value.trim() != \"\" && !this.checkEmail(value)) {\r\n        // thêm class vào trong input\r\n        event.currentTarget.classList.add(\"d-input-error\");\r\n        // thêm câu cảnh báo khi hover\r\n        event.currentTarget.setAttribute(\r\n          \"title\",\r\n          \"Email không đúng định dạng\"\r\n        );\r\n      } else {\r\n        event.currentTarget.classList.remove(\"d-input-error\");\r\n        event.currentTarget.setAttribute(\"title\", \"\");\r\n      }\r\n    },\r\n\r\n    // async created() {\r\n    //   try {\r\n    //     var me = this;\r\n    //     await axios\r\n    //       // .get(\"https://amis.manhnv.net/api/v1/Employees\")\r\n    //       .get(\"http://localhost:22454/api/v1/Employees\")\r\n    //       .then((response) => {\r\n    //         me.employees = response.data;\r\n    //       })\r\n    //       .catch(function (error) {\r\n    //         console.log(error);\r\n    //       });\r\n    //   } catch (error) {\r\n    //     console.log(error);\r\n    //   }\r\n    // },\r\n    /**\r\n     * thực hiện lưu khi người dùng click nứt lưu\r\n     * Author: HVDUNG (02/06/2022)\r\n     */\r\n    async btnSaveOnClick() {\r\n      var me = this;\r\n      //1. validate dữ liệu\r\n      var isValid = true;\r\n      var arrayErrors = [];\r\n      if (!me.employee.EmployeeCode) {\r\n        isValid = false;\r\n        arrayErrors.push(\"Mã nhân viên không được phép để trống\");\r\n      }\r\n      if (me.checkEmployeeCode(me.employee.EmployeeCode, this.formMode)) {\r\n        isValid = false;\r\n        arrayErrors.push(\"Mã nhân viên không được phép trùng lặp\");\r\n      }\r\n      if (!me.employee.EmployeeName) {\r\n        isValid = false;\r\n        arrayErrors.push(\"Tên nhân viên không được phép để trống\");\r\n      }\r\n      if (!me.employee.DepartmentId) {\r\n        isValid = false;\r\n        arrayErrors.push(\"Phòng ban không được phép để trống\");\r\n      }\r\n      // convert về dạng ngày tháng thì mới có thể so sánh được\r\n      var dateCurrent = document.getElementById(\"date_timepicker_end\").value;\r\n      dateCurrent = new Date(dateCurrent);\r\n      if (dateCurrent > new Date()) {\r\n        isValid = false;\r\n        arrayErrors.push(\"Ngày sinh không được phép lớn hơn ngày hiện tại\");\r\n      }\r\n      if (me.employee.Email && !me.checkEmail(me.employee.Email)) {\r\n        isValid = false;\r\n        arrayErrors.push(\"Email không đúng định dạng\");\r\n      }\r\n      if (!isValid) {\r\n        //hiển thị thông báo validate không hợp lệ\r\n        let noticeDialog = document.getElementsByClassName(\"d-dialog-box\")[0];\r\n        let bodyTextNoticeDialog = noticeDialog.querySelector(\".d-dialog-body\");\r\n        bodyTextNoticeDialog.innerHTML = \"\";\r\n        //append nội dung thông báo\r\n        arrayErrors.forEach((errorMsg) => {\r\n          var el = document.createElement(\"div\");\r\n          el.innerHTML = `-${errorMsg}`;\r\n          bodyTextNoticeDialog.append(el);\r\n        });\r\n        document.getElementsByClassName(\"d-dialog-box\")[0].style.display =\r\n          \"block\";\r\n        return;\r\n      }\r\n      if (isValid) {\r\n        // 3. gọi api thực hiện thêm mới hoặc update nhân viên\r\n        // 3.1 thực hiện thêm mới nhân viên\r\n        if (me.formMode == 1) {\r\n          //thực hiện loading lại dữ liệu\r\n          document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\r\n          await axios\r\n            .post(\"http://localhost:22454/api/v1/Employees\", me.employee)\r\n            .then(function (res) {\r\n              console.log(res);\r\n              // dùng tạm thời => phải dùng toast msg\r\n            })\r\n            .catch(function (res) {\r\n              let error = res.response.status;\r\n              switch (error) {\r\n                case 400:\r\n                case 500:\r\n                  // hiển thị thông báo lỗi khi thêm mới\r\n                  alert(res.response.data[\"userMsg\"]);\r\n                  break;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            });\r\n        } else {\r\n          // 3.2 thực hiện update nhân viên\r\n          document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\r\n          await axios\r\n            .put(\r\n              `http://localhost:22454/api/v1/Employees/${me.employeeIdSelected}`,\r\n              me.employee\r\n            )\r\n            .then(function (res) {\r\n              console.log(res);\r\n            })\r\n            .catch(function (res) {\r\n              console.log(res);\r\n            });\r\n        }\r\n        // await axios\r\n        //   .get(`https://amis.manhnv.net/api/v1/Employees`)\r\n        //   .then(function (res) {\r\n        //     me.employees = res.data;\r\n        //     me.$emit(\"changeValueEmployees\", me.employees);\r\n        //     document.getElementsByClassName(\"loading\")[0].style.display =\r\n        //       \"none\";\r\n        //   })\r\n        //   .catch(function (res) {\r\n        //     document.getElementsByClassName(\"loading\")[0].style.display =\r\n        //       \"none\";\r\n        //     console.log(res);\r\n        //   });\r\n        // thực hiện loadding lại dữ liệu\r\n      try {\r\n        debugger\r\n        // hiển thị loadding\r\n        document.getElementsByClassName(\"loading\")[0].style.display = \"block\";\r\n        console.log(me.pageNumberSelected);\r\n        await axios\r\n          .get(`http://localhost:22454/api/v1/Employees/filter?pageSize=${me.pageSize}&pageNumber=${me.pageNumberSelected}`)\r\n          .then((response) => { \r\n            me.employees = response.data.Data;\r\n            me.$emit(\"changeValueEmployees\", me.employees);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n        // thực hiện đóng form chi tiết\r\n        this.$emit(\"isShowDialog\");\r\n         //ẩn loading\r\n      document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện kiểm tra email có đúng định dạng hay không\r\n     * @param {string} email email cuả nhân viên \r\n     * Author: HVDUNG (11./06/2022)\r\n     */\r\n    checkEmail(email) {\r\n      var res = /\\S+@\\S+\\.\\S+/;\r\n      return res.test(email);\r\n    },\r\n\r\n    /**\r\n     * Thực hiện kiểm tra mã nhân viên có bị trùng hay không trước khi thêm mới\r\n     * false: không trùng lặp\r\n     * true: trùng lặp\r\n     * Author: HVDUNG (11/06/2022)\r\n     */\r\n    checkEmployeeCode(employeeCode, formMode) {\r\n      if (formMode == 1) {\r\n        for (const employee of this.employeesOfDetail) {\r\n          if (employeeCode == employee.EmployeeCode)\r\n            return true;\r\n        }\r\n        return false;\r\n      }\r\n      else {\r\n        let count = 0;\r\n        for (const employee of this.employeesOfDetail) {\r\n          if (employeeCode == employee.EmployeeCode)\r\n            count++;\r\n        }\r\n        if (employeeCode == this.employee.EmployeeCode)\r\n          if (count == 0 || count == 1)\r\n            return false;\r\n          else\r\n            return true;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Thực hiện đóng form chi tiết khi click\r\n     * Author: HVDUNG(05/06/2022)\r\n     */\r\n    btnCloseOnClick() {\r\n      this.$emit(\"isShowDialog\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url(../../style/css/page/employee-info.css);\r\n@import url(../../style/css/icon/icon.css);\r\n</style>"]},"metadata":{},"sourceType":"module"}